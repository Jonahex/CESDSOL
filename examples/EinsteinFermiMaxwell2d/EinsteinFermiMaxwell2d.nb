(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    651840,      12963]
NotebookOptionsPosition[    650721,      12938]
NotebookOutlinePosition[    651121,      12954]
CellTagsIndexPosition[    651078,      12951]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"libraryPath", "=", 
   RowBox[{"StringJoin", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], ",", 
     "\"\<../../Mathematica/CESDSOL.wl\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"outputPath", "=", 
   RowBox[{"StringJoin", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<output/\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Import", "[", "libraryPath", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8319703764292154`*^9, 3.831970385329914*^9}, {
  3.831970439146076*^9, 3.8319704505433645`*^9}, {3.831973702876774*^9, 
  3.831973730175632*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"4ab39b35-0854-48aa-af1b-c3b7ea6cf481"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqP", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "4"}], ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"F0", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "+", 
       RowBox[{"F2", "[", 
        RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Q", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["W", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Y", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"W", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "-", 
          RowBox[{"r", " ", 
           RowBox[{
            SuperscriptBox["W", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"F1", "[", 
       RowBox[{"r", ",", "t"}], "]"}]], 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "  ", "mu"}], " ", "r", " ", 
        RowBox[{"P", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          RowBox[{"F2", "[", 
           RowBox[{"r", ",", "t"}], "]"}]}]], " ", "nr", " ", 
        RowBox[{"X", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          RowBox[{"F0", "[", 
           RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
        RowBox[{"Q", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"r", " ", "w"}], "-", 
          RowBox[{"nr", " ", 
           RowBox[{"W", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "2"}], ")"}], " ", 
     RowBox[{"Cos", "[", "t", "]"}], " ", 
     RowBox[{"X", "[", 
      RowBox[{"r", ",", "t"}], "]"}]}], " ", "+", 
    RowBox[{
     RowBox[{"Sin", "[", "t", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], " ", 
        RowBox[{"X", "[", 
         RowBox[{"r", ",", "t"}], "]"}], 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{
           SuperscriptBox["F0", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", " ", 
          RowBox[{
           SuperscriptBox["F1", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", " ", 
          RowBox[{
           SuperscriptBox["F2", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "t"}], "]"}]}], " ", ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], " ", "r", " ", 
        RowBox[{"P", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["F0", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", " ", 
          RowBox[{
           SuperscriptBox["F1", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", " ", 
          RowBox[{
           SuperscriptBox["F2", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}], "+", "  ", 
       RowBox[{
        SuperscriptBox["X", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "t"}], "]"}], "+", 
       RowBox[{"P", "[", 
        RowBox[{"r", ",", "t"}], "]"}], "  ", "+", 
       RowBox[{"r", "  ", 
        RowBox[{
         SuperscriptBox["P", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}]}], " ", ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"F1", "[", 
       RowBox[{"r", ",", "t"}], "]"}]], " ", "q", " ", "r", " ", 
     RowBox[{"Sin", "[", "t", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          RowBox[{"F0", "[", 
           RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
        RowBox[{"Q", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"V", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{
           RowBox[{"Afi", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{"W", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          RowBox[{"F2", "[", 
           RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
        RowBox[{"Afi", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"X", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqQ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"1", "/", "4"}], ")"}]}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"F0", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "+", 
       RowBox[{"F2", "[", 
        RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"P", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["W", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"X", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"W", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "-", 
          RowBox[{"r", " ", 
           RowBox[{
            SuperscriptBox["W", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"F1", "[", 
       RowBox[{"r", ",", "t"}], "]"}]], 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"+", " ", "mu"}], " ", "r", " ", 
        RowBox[{"Q", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}]}], " ", "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          RowBox[{"F2", "[", 
           RowBox[{"r", ",", "t"}], "]"}]}]], " ", "nr", " ", 
        RowBox[{"Y", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          RowBox[{"F0", "[", 
           RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
        RowBox[{"P", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"r", " ", "w"}], "-", 
          RowBox[{"nr", " ", 
           RowBox[{"W", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}], " ", ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "2"}], ")"}], " ", 
     RowBox[{"Cos", "[", "t", "]"}], " ", 
     RowBox[{"Y", "[", 
      RowBox[{"r", ",", "t"}], "]"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"Sin", "[", "t", "]"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], " ", 
        RowBox[{"Y", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["F0", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", " ", 
          RowBox[{
           SuperscriptBox["F1", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", "  ", 
          RowBox[{
           SuperscriptBox["F2", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "t"}], "]"}]}], " ", ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], " ", "r", " ", 
        RowBox[{"Q", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{
           SuperscriptBox["F0", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", " ", 
          RowBox[{
           SuperscriptBox["F1", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", " ", 
          RowBox[{
           SuperscriptBox["F2", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "t"}], "]"}]}], " ", ")"}]}], "+", "  ", 
       RowBox[{
        SuperscriptBox["Y", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "t"}], "]"}], "+", 
       RowBox[{"Q", "[", 
        RowBox[{"r", ",", "t"}], "]"}], " ", "+", 
       RowBox[{"r", " ", 
        RowBox[{
         SuperscriptBox["Q", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "-", " ", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"F1", "[", 
       RowBox[{"r", ",", "t"}], "]"}]], " ", "q", " ", "r", " ", 
     RowBox[{"Sin", "[", "t", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          RowBox[{"F0", "[", 
           RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
        RowBox[{"P", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"V", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{
           RowBox[{"Afi", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{"W", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          RowBox[{"F2", "[", 
           RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
        RowBox[{"Afi", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"Y", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqX", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "4"}], ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"F0", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "+", 
       RowBox[{"F2", "[", 
        RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Y", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["W", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Q", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"W", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "+", 
          RowBox[{"r", " ", 
           RowBox[{
            SuperscriptBox["W", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"F1", "[", 
       RowBox[{"r", ",", "t"}], "]"}]], 
     RowBox[{"(", "   ", 
      RowBox[{
       RowBox[{
        RowBox[{"+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           RowBox[{"F2", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}]]}], " ", "nr", " ", 
        RowBox[{"P", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "+", " ", 
       RowBox[{"mu", " ", "r", " ", 
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        RowBox[{"X", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          RowBox[{"F0", "[", 
           RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"r", " ", "w"}], "-", 
          RowBox[{"nr", " ", 
           RowBox[{"W", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}], " ", 
        RowBox[{"Y", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}]}], " ", ")"}]}], " ", "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "2"}], ")"}], " ", 
     RowBox[{"Cos", "[", "t", "]"}], " ", 
     RowBox[{"P", "[", 
      RowBox[{"r", ",", "t"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"Sin", "[", "t", "]"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"1", "/", "2"}], ")"}]}], " ", 
        RowBox[{"P", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["F0", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{
           SuperscriptBox["F1", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{
           SuperscriptBox["F2", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}], " ", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], " ", "r", "  ", 
        RowBox[{"X", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["F0", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", " ", 
          RowBox[{
           SuperscriptBox["F1", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", " ", 
          RowBox[{
           SuperscriptBox["F2", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"1", ",", "0"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}], " ", "-", "  ", 
       RowBox[{
        SuperscriptBox["P", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "t"}], "]"}], " ", "+", " ", 
       RowBox[{"X", "[", 
        RowBox[{"r", ",", "t"}], "]"}], "+", 
       RowBox[{"r", "  ", 
        RowBox[{
         SuperscriptBox["X", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"F1", "[", 
       RowBox[{"r", ",", "t"}], "]"}]], " ", "q", " ", "r", " ", 
     RowBox[{"Sin", "[", "t", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          RowBox[{"F2", "[", 
           RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
        RowBox[{"Afi", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"P", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          RowBox[{"F0", "[", 
           RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"V", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{
           RowBox[{"Afi", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{"W", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}], " ", 
        RowBox[{"Y", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"eqY", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"1", "/", "4"}], ")"}]}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"F0", "[", 
          RowBox[{"r", ",", "t"}], "]"}]}], "+", 
        RowBox[{"F2", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"X", "[", 
          RowBox[{"r", ",", "t"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["W", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"r", ",", "t"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"P", "[", 
          RowBox[{"r", ",", "t"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"W", "[", 
             RowBox[{"r", ",", "t"}], "]"}]}], "+", 
           RowBox[{"r", " ", 
            RowBox[{
             SuperscriptBox["W", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"F1", "[", 
        RowBox[{"r", ",", "t"}], "]"}]], 
      RowBox[{"(", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{"+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            RowBox[{"F2", "[", 
             RowBox[{"r", ",", "t"}], "]"}]}]]}], " ", "nr", " ", 
         RowBox[{"Q", "[", 
          RowBox[{"r", ",", "t"}], "]"}]}], "-", " ", 
        RowBox[{"mu", " ", "r", " ", 
         RowBox[{"Sin", "[", "t", "]"}], " ", 
         RowBox[{"Y", "[", 
          RowBox[{"r", ",", "t"}], "]"}]}], " ", "-", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           RowBox[{"F0", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
         RowBox[{"Sin", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", " ", "w"}], "-", 
           RowBox[{"nr", " ", 
            RowBox[{"W", "[", 
             RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}], " ", 
         RowBox[{"X", "[", 
          RowBox[{"r", ",", "t"}], "]"}]}]}], " ", ")"}]}], " ", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}], " ", 
      RowBox[{"Cos", "[", "t", "]"}], " ", 
      RowBox[{"Q", "[", 
       RowBox[{"r", ",", "t"}], "]"}]}], " ", "+", 
     RowBox[{
      RowBox[{"Sin", "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"1", "/", "2"}], ")"}]}], " ", 
         RowBox[{"Q", "[", 
          RowBox[{"r", ",", "t"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["F0", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}], "+", " ", 
           RowBox[{
            SuperscriptBox["F1", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}], "+", " ", 
           RowBox[{
            SuperscriptBox["F2", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", "2"}], ")"}], " ", "r", "  ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Y", "[", 
             RowBox[{"r", ",", "t"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["F0", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"r", ",", "t"}], "]"}]}], "+", "  ", 
           RowBox[{
            RowBox[{"Y", "[", 
             RowBox[{"r", ",", "t"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["F1", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"r", ",", "t"}], "]"}]}], "+", " ", 
           RowBox[{
            RowBox[{"Y", "[", 
             RowBox[{"r", ",", "t"}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["F2", 
              TagBox[
               RowBox[{"(", 
                RowBox[{"1", ",", "0"}], ")"}],
               Derivative],
              MultilineFunction->None], "[", 
             RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", " ", 
        RowBox[{"Y", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", "-", "  ", 
        RowBox[{
         SuperscriptBox["Q", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", "+", 
        RowBox[{"r", "  ", 
         RowBox[{
          SuperscriptBox["Y", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"F1", "[", 
        RowBox[{"r", ",", "t"}], "]"}]], " ", "q", " ", "r", " ", 
      RowBox[{"Sin", "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            RowBox[{"F2", "[", 
             RowBox[{"r", ",", "t"}], "]"}]}]]}], " ", 
         RowBox[{"Afi", "[", 
          RowBox[{"r", ",", "t"}], "]"}], " ", 
         RowBox[{"Q", "[", 
          RowBox[{"r", ",", "t"}], "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           RowBox[{"F0", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"V", "[", 
            RowBox[{"r", ",", "t"}], "]"}], "+", 
           RowBox[{
            RowBox[{"Afi", "[", 
             RowBox[{"r", ",", "t"}], "]"}], " ", 
            RowBox[{"Sin", "[", "t", "]"}], " ", 
            RowBox[{"W", "[", 
             RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}], " ", 
         RowBox[{"X", "[", 
          RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}]}], 
   ";"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqF1", "=", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}]}], " ", 
     SuperscriptBox["alfa", "2"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"F0", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "+", 
       RowBox[{"F1", "[", 
        RowBox[{"r", ",", "t"}], "]"}], "-", 
       RowBox[{"F2", "[", 
        RowBox[{"r", ",", "t"}], "]"}]}]], " ", "r", " ", 
     RowBox[{"Sin", "[", "t", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"F2", "[", 
           RowBox[{"r", ",", "t"}], "]"}]]}], " ", 
        SuperscriptBox[
         RowBox[{"P", "[", 
          RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"F1", "[", 
             RowBox[{"r", ",", "t"}], "]"}]], " ", "r", " ", "w"}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"F1", "[", 
             RowBox[{"r", ",", "t"}], "]"}]], " ", "q", " ", "r", " ", 
           RowBox[{"V", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"F1", "[", 
             RowBox[{"r", ",", "t"}], "]"}]], " ", 
           RowBox[{"(", 
            RowBox[{"nr", "+", 
             RowBox[{"q", " ", "r", " ", 
              RowBox[{"Afi", "[", 
               RowBox[{"r", ",", "t"}], "]"}], " ", 
              RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}], " ", 
           RowBox[{"W", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"F2", "[", 
             RowBox[{"r", ",", "t"}], "]"}]], " ", 
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{
            SuperscriptBox["W", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"F2", "[", 
          RowBox[{"r", ",", "t"}], "]"}]], " ", 
        SuperscriptBox[
         RowBox[{"Q", "[", 
          RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"F1", "[", 
             RowBox[{"r", ",", "t"}], "]"}]], " ", "r", " ", "w"}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"F1", "[", 
             RowBox[{"r", ",", "t"}], "]"}]], " ", "q", " ", "r", " ", 
           RowBox[{"V", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"F1", "[", 
             RowBox[{"r", ",", "t"}], "]"}]], " ", 
           RowBox[{"(", 
            RowBox[{"nr", "+", 
             RowBox[{"q", " ", "r", " ", 
              RowBox[{"Afi", "[", 
               RowBox[{"r", ",", "t"}], "]"}], " ", 
              RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}], " ", 
           RowBox[{"W", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"F2", "[", 
             RowBox[{"r", ",", "t"}], "]"}]], " ", 
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{
            SuperscriptBox["W", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"P", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", 
             RowBox[{"F2", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
           RowBox[{"W", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           RowBox[{"X", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"F0", "[", 
              RowBox[{"r", ",", "t"}], "]"}], "+", 
             RowBox[{"F1", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
           RowBox[{"(", 
            RowBox[{"nr", "+", 
             RowBox[{"q", " ", "r", " ", 
              RowBox[{"Afi", "[", 
               RowBox[{"r", ",", "t"}], "]"}], " ", 
              RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}], " ", 
           RowBox[{"Y", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"F2", "[", 
             RowBox[{"r", ",", "t"}], "]"}]], " ", 
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F0", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", 
              RowBox[{
               SuperscriptBox["Y", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F0", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", "r", " ", 
              RowBox[{
               SuperscriptBox["Q", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F2", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", "r", " ", 
              RowBox[{"Sin", "[", "t", "]"}], " ", 
              RowBox[{"X", "[", 
               RowBox[{"r", ",", "t"}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["W", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Q", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"F0", "[", 
              RowBox[{"r", ",", "t"}], "]"}], "+", 
             RowBox[{"F1", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
           RowBox[{"(", 
            RowBox[{"nr", "+", 
             RowBox[{"q", " ", "r", " ", 
              RowBox[{"Afi", "[", 
               RowBox[{"r", ",", "t"}], "]"}], " ", 
              RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}], " ", 
           RowBox[{"X", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"F2", "[", 
             RowBox[{"r", ",", "t"}], "]"}]], " ", 
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F2", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", 
              RowBox[{"Sin", "[", "t", "]"}], " ", 
              RowBox[{"W", "[", 
               RowBox[{"r", ",", "t"}], "]"}], " ", 
              RowBox[{"Y", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F0", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", 
              RowBox[{
               SuperscriptBox["X", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F0", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", "r", " ", 
              RowBox[{
               SuperscriptBox["P", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "-", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F2", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", "r", " ", 
              RowBox[{"Sin", "[", "t", "]"}], " ", 
              RowBox[{"Y", "[", 
               RowBox[{"r", ",", "t"}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["W", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"F2", "[", 
          RowBox[{"r", ",", "t"}], "]"}]], " ", 
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"X", "[", 
             RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F1", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", "r", " ", "w"}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F1", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", "q", " ", "r", " ", 
              RowBox[{"V", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F1", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", 
              RowBox[{"(", 
               RowBox[{"nr", "+", 
                RowBox[{"q", " ", "r", " ", 
                 RowBox[{"Afi", "[", 
                  RowBox[{"r", ",", "t"}], "]"}], " ", 
                 RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}], " ", 
              RowBox[{"W", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F2", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", 
              RowBox[{"Sin", "[", "t", "]"}], " ", 
              RowBox[{
               SuperscriptBox["W", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"Y", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Y", "[", 
               RowBox[{"r", ",", "t"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"4", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F1", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", "r", " ", "w"}], "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F1", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", "q", " ", "r", " ", 
                 RowBox[{"V", "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F1", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", 
                 RowBox[{"(", 
                  RowBox[{"nr", "+", 
                   RowBox[{"q", " ", "r", " ", 
                    RowBox[{"Afi", "[", 
                    RowBox[{"r", ",", "t"}], "]"}], " ", 
                    RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}], " ", 
                 RowBox[{"W", "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "-", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F2", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", 
                 RowBox[{"Sin", "[", "t", "]"}], " ", 
                 RowBox[{
                  SuperscriptBox["W", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F0", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["P", 
                  TagBox[
                   RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                   Derivative],
                  MultilineFunction->None], "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "-", 
                RowBox[{"r", " ", 
                 RowBox[{
                  SuperscriptBox["X", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"F0", "[", 
             RowBox[{"r", ",", "t"}], "]"}]], " ", 
           RowBox[{"X", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["Q", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"r", ",", "t"}], "]"}], "-", 
             RowBox[{"r", " ", 
              RowBox[{
               SuperscriptBox["Y", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
      ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "4"}], ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"F0", "[", 
        RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", 
           RowBox[{"F2", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}]]}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "t", "]"}], "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["W", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"r", ",", "t"}], "]"}], "-", 
             RowBox[{"r", " ", 
              RowBox[{
               SuperscriptBox["W", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}], "2"]}], ")"}]}], 
       "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"F0", "[", 
           RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            SuperscriptBox["F0", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cot", "[", "t", "]"}], "+", 
             RowBox[{
              SuperscriptBox["F2", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["F1", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "2"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{"r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SuperscriptBox["F1", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{
               SuperscriptBox["F0", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"r", " ", 
                 RowBox[{
                  SuperscriptBox["F2", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "-", 
             RowBox[{"r", " ", 
              RowBox[{
               SuperscriptBox["F1", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"2", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
      ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqF2", "=", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "2"}], ")"}], " ", 
     SuperscriptBox["alfa", "2"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"F0", "[", 
          RowBox[{"r", ",", "t"}], "]"}], "+", 
         RowBox[{"F2", "[", 
          RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"Afi", "[", 
          RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", 
            RowBox[{"F0", "[", 
             RowBox[{"r", ",", "t"}], "]"}]}]], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", 
             RowBox[{"F2", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"W", "[", 
             RowBox[{"r", ",", "t"}], "]"}], "2"]}]}], ")"}]}], "+", 
       RowBox[{"4", " ", 
        RowBox[{"Afi", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"F0", "[", 
               RowBox[{"r", ",", "t"}], "]"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"F1", "[", 
                  RowBox[{"r", ",", "t"}], "]"}], "+", 
                 RowBox[{"F2", "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}]}]]}], " ", "q", 
           " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{"P", "[", 
             RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
           RowBox[{"W", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"F0", "[", 
              RowBox[{"r", ",", "t"}], "]"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"F1", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "+", 
                RowBox[{"F2", "[", 
                 RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}]}]], " ", "q", " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Q", "[", 
             RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
           RowBox[{"W", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"F0", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"F1", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "+", 
             RowBox[{"F2", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]], " ", "q", " ", 
           SuperscriptBox["r", "2"], " ", 
           RowBox[{"Q", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{"X", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"F0", "[", 
              RowBox[{"r", ",", "t"}], "]"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"F1", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "+", 
                RowBox[{"F2", "[", 
                 RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}]}]], " ", "q", " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
           RowBox[{"W", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{"X", "[", 
             RowBox[{"r", ",", "t"}], "]"}], "2"]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"F0", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"F1", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "+", 
             RowBox[{"F2", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]], " ", "q", " ", 
           SuperscriptBox["r", "2"], " ", 
           RowBox[{"P", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{"Y", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"F0", "[", 
              RowBox[{"r", ",", "t"}], "]"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"F1", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "+", 
                RowBox[{"F2", "[", 
                 RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}]}]], " ", "q", " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
           RowBox[{"W", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{"Y", "[", 
             RowBox[{"r", ",", "t"}], "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", 
             RowBox[{"F0", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
           RowBox[{"Cos", "[", "t", "]"}], " ", 
           RowBox[{
            SuperscriptBox["Afi", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", 
             RowBox[{"F2", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
           RowBox[{"Cos", "[", "t", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"W", "[", 
             RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
           RowBox[{
            SuperscriptBox["Afi", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", 
             RowBox[{"F2", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
           RowBox[{"Cos", "[", "t", "]"}], " ", 
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{"W", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["V", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", 
             RowBox[{"F0", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]], " ", "r", " ", 
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{
            SuperscriptBox["Afi", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", 
             RowBox[{"F2", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]], " ", "r", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "t", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"W", "[", 
             RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
           RowBox[{
            SuperscriptBox["Afi", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", 
             RowBox[{"F2", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]], " ", "r", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
           RowBox[{"W", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["V", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"F0", "[", 
               RowBox[{"r", ",", "t"}], "]"}], "+", 
              RowBox[{"F1", "[", 
               RowBox[{"r", ",", "t"}], "]"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"F2", "[", 
                RowBox[{"r", ",", "t"}], "]"}]}]}]]}], " ", "r", " ", 
           SuperscriptBox[
            RowBox[{"P", "[", 
             RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F1", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", "r", " ", "w"}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F1", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", "q", " ", "r", " ", 
              RowBox[{"V", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F1", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", "nr", " ", 
              RowBox[{"W", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F2", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", 
              RowBox[{"Sin", "[", "t", "]"}], " ", 
              RowBox[{
               SuperscriptBox["W", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"F0", "[", 
              RowBox[{"r", ",", "t"}], "]"}], "+", 
             RowBox[{"F1", "[", 
              RowBox[{"r", ",", "t"}], "]"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"F2", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}]}]], " ", "r", " ", 
           SuperscriptBox[
            RowBox[{"Q", "[", 
             RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F1", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", "r", " ", "w"}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F1", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", "q", " ", "r", " ", 
              RowBox[{"V", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F1", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", "nr", " ", 
              RowBox[{"W", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F2", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", 
              RowBox[{"Sin", "[", "t", "]"}], " ", 
              RowBox[{
               SuperscriptBox["W", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"F0", "[", 
              RowBox[{"r", ",", "t"}], "]"}], "+", 
             RowBox[{"F1", "[", 
              RowBox[{"r", ",", "t"}], "]"}], "+", 
             RowBox[{"F2", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]], " ", "r", " ", 
           RowBox[{"P", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "3"}], " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", 
                RowBox[{"F2", "[", 
                 RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
              RowBox[{"W", "[", 
               RowBox[{"r", ",", "t"}], "]"}], " ", 
              RowBox[{"X", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"F0", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "+", 
                RowBox[{"F1", "[", 
                 RowBox[{"r", ",", "t"}], "]"}]}]], " ", "nr", " ", 
              RowBox[{"Y", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F2", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", 
              RowBox[{"Sin", "[", "t", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F0", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", 
                 RowBox[{
                  SuperscriptBox["Y", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F0", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", "r", " ", 
                 RowBox[{
                  SuperscriptBox["Q", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                RowBox[{"3", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F2", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", "r", " ", 
                 RowBox[{"Sin", "[", "t", "]"}], " ", 
                 RowBox[{"X", "[", 
                  RowBox[{"r", ",", "t"}], "]"}], " ", 
                 RowBox[{
                  SuperscriptBox["W", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"F0", "[", 
              RowBox[{"r", ",", "t"}], "]"}], "+", 
             RowBox[{"F1", "[", 
              RowBox[{"r", ",", "t"}], "]"}], "+", 
             RowBox[{"F2", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]], " ", "r", " ", 
           RowBox[{"Q", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"F0", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "+", 
                RowBox[{"F1", "[", 
                 RowBox[{"r", ",", "t"}], "]"}]}]], " ", "nr", " ", 
              RowBox[{"X", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "-", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F2", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", 
              RowBox[{"Sin", "[", "t", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F2", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", 
                 RowBox[{"Sin", "[", "t", "]"}], " ", 
                 RowBox[{"W", "[", 
                  RowBox[{"r", ",", "t"}], "]"}], " ", 
                 RowBox[{"Y", "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F0", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", 
                 RowBox[{
                  SuperscriptBox["X", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F0", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", "r", " ", 
                 RowBox[{
                  SuperscriptBox["P", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "-", 
                RowBox[{"3", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F2", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", "r", " ", 
                 RowBox[{"Sin", "[", "t", "]"}], " ", 
                 RowBox[{"Y", "[", 
                  RowBox[{"r", ",", "t"}], "]"}], " ", 
                 RowBox[{
                  SuperscriptBox["W", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"F0", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "+", 
                RowBox[{"F1", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"F2", "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}]}]], " ", "r", " ", 
              SuperscriptBox[
               RowBox[{"X", "[", 
                RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"4", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F1", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", "r", " ", "w"}], "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F1", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", "q", " ", "r", " ", 
                 RowBox[{"V", "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F1", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", "nr", " ", 
                 RowBox[{"W", "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                RowBox[{"3", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F2", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", 
                 RowBox[{"Sin", "[", "t", "]"}], " ", 
                 RowBox[{
                  SuperscriptBox["W", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"F0", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "+", 
                RowBox[{"F1", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"F2", "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}]}]], " ", "r", " ", 
              SuperscriptBox[
               RowBox[{"Y", "[", 
                RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"4", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F1", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", "r", " ", "w"}], "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F1", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", "q", " ", "r", " ", 
                 RowBox[{"V", "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F1", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", "nr", " ", 
                 RowBox[{"W", "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                RowBox[{"3", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F2", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", 
                 RowBox[{"Sin", "[", "t", "]"}], " ", 
                 RowBox[{
                  SuperscriptBox["W", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", 
                    RowBox[{"F0", "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]], "+", 
                   RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", 
                    RowBox[{"F2", "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"W", "[", 
                    RowBox[{"r", ",", "t"}], "]"}], "2"]}]}], ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["Afi", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                   RowBox[{"r", ",", "t"}], "]"}], "2"]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"2", " ", 
                   RowBox[{"F2", "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
                 RowBox[{"Sin", "[", "t", "]"}], " ", 
                 RowBox[{"W", "[", 
                  RowBox[{"r", ",", "t"}], "]"}], " ", 
                 RowBox[{
                  SuperscriptBox["Afi", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}], " ", 
                 RowBox[{
                  SuperscriptBox["V", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"2", " ", 
                   RowBox[{"F2", "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["V", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                   RowBox[{"r", ",", "t"}], "]"}], "2"]}], "+", 
                RowBox[{
                 SuperscriptBox["r", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", 
                    RowBox[{"F0", "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]], "+", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", 
                    RowBox[{"F2", "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"W", "[", 
                    RowBox[{"r", ",", "t"}], "]"}], "2"]}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["Afi", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}], "2"]}], "+", 
                   RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", 
                    RowBox[{"F2", "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
                    RowBox[{"Sin", "[", "t", "]"}], " ", 
                    RowBox[{"W", "[", 
                    RowBox[{"r", ",", "t"}], "]"}], " ", 
                    RowBox[{
                    SuperscriptBox["Afi", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}], " ", 
                    RowBox[{
                    SuperscriptBox["V", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                   RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", 
                    RowBox[{"F2", "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
                    SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["V", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}], "2"]}]}], ")"}]}]}], 
               ")"}]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"F0", "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                RowBox[{"F1", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"F2", "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}]}]], " ", "r", " ", 
              RowBox[{"Y", "[", 
               RowBox[{"r", ",", "t"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{
                  SuperscriptBox["P", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                RowBox[{"r", " ", 
                 RowBox[{
                  SuperscriptBox["X", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"F0", "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                RowBox[{"F1", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"F2", "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}]}]], " ", "r", " ", 
              RowBox[{"X", "[", 
               RowBox[{"r", ",", "t"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{
                  SuperscriptBox["Q", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                RowBox[{"r", " ", 
                 RowBox[{
                  SuperscriptBox["Y", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "2"}], ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"F0", "[", 
        RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"F2", "[", 
           RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "t", "]"}], "4"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["W", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"r", ",", "t"}], "]"}], "-", 
             RowBox[{"r", " ", 
              RowBox[{
               SuperscriptBox["W", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}], "2"]}], ")"}]}], 
       "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"F0", "[", 
           RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", "t", "]"}], " ", 
           RowBox[{
            SuperscriptBox["F2", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{
            SuperscriptBox["F0", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", "t", "]"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", "t", "]"}], " ", 
              RowBox[{
               SuperscriptBox["F2", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["F2", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}], "2"], "+", 
             RowBox[{
              SuperscriptBox["F2", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "2"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"r", ",", "t"}], "]"}], "+", 
             RowBox[{"r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  SuperscriptBox["F0", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   RowBox[{"r", " ", 
                    RowBox[{
                    SuperscriptBox["F2", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["F2", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"3", "+", 
                   RowBox[{"r", " ", 
                    RowBox[{
                    SuperscriptBox["F2", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
                RowBox[{"r", " ", 
                 RowBox[{
                  SuperscriptBox["F2", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"2", ",", "0"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"eqF0", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}]}], " ", 
     SuperscriptBox["alfa", "2"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"F0", "[", 
          RowBox[{"r", ",", "t"}], "]"}], "+", 
         RowBox[{"F2", "[", 
          RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"Afi", "[", 
          RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", 
            RowBox[{"F0", "[", 
             RowBox[{"r", ",", "t"}], "]"}]}]], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", 
             RowBox[{"F2", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"W", "[", 
             RowBox[{"r", ",", "t"}], "]"}], "2"]}]}], ")"}]}], "+", 
       RowBox[{"4", " ", 
        RowBox[{"Afi", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"F0", "[", 
               RowBox[{"r", ",", "t"}], "]"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"F1", "[", 
                  RowBox[{"r", ",", "t"}], "]"}], "+", 
                 RowBox[{"F2", "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}]}]]}], " ", "q", 
           " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{"P", "[", 
             RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
           RowBox[{"W", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"F0", "[", 
              RowBox[{"r", ",", "t"}], "]"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"F1", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "+", 
                RowBox[{"F2", "[", 
                 RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}]}]], " ", "q", " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Q", "[", 
             RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
           RowBox[{"W", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"F0", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"F1", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "+", 
             RowBox[{"F2", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]], " ", "q", " ", 
           SuperscriptBox["r", "2"], " ", 
           RowBox[{"Q", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{"X", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"F0", "[", 
              RowBox[{"r", ",", "t"}], "]"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"F1", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "+", 
                RowBox[{"F2", "[", 
                 RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}]}]], " ", "q", " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
           RowBox[{"W", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{"X", "[", 
             RowBox[{"r", ",", "t"}], "]"}], "2"]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"F0", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"F1", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "+", 
             RowBox[{"F2", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]], " ", "q", " ", 
           SuperscriptBox["r", "2"], " ", 
           RowBox[{"P", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{"Y", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"F0", "[", 
              RowBox[{"r", ",", "t"}], "]"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"F1", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "+", 
                RowBox[{"F2", "[", 
                 RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}]}]], " ", "q", " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
           RowBox[{"W", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{"Y", "[", 
             RowBox[{"r", ",", "t"}], "]"}], "2"]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", 
             RowBox[{"F0", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
           RowBox[{"Cos", "[", "t", "]"}], " ", 
           RowBox[{
            SuperscriptBox["Afi", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", 
             RowBox[{"F2", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
           RowBox[{"Cos", "[", "t", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"W", "[", 
             RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
           RowBox[{
            SuperscriptBox["Afi", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", 
             RowBox[{"F2", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
           RowBox[{"Cos", "[", "t", "]"}], " ", 
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{"W", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["V", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", 
             RowBox[{"F0", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]], " ", "r", " ", 
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{
            SuperscriptBox["Afi", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", 
             RowBox[{"F2", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]], " ", "r", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "t", "]"}], "3"], " ", 
           SuperscriptBox[
            RowBox[{"W", "[", 
             RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
           RowBox[{
            SuperscriptBox["Afi", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", 
             RowBox[{"F2", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]], " ", "r", " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
           RowBox[{"W", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["V", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"F0", "[", 
               RowBox[{"r", ",", "t"}], "]"}], "+", 
              RowBox[{"F1", "[", 
               RowBox[{"r", ",", "t"}], "]"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"F2", "[", 
                RowBox[{"r", ",", "t"}], "]"}]}]}]]}], " ", "r", " ", 
           SuperscriptBox[
            RowBox[{"P", "[", 
             RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F1", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", "r", " ", "w"}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F1", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", "q", " ", "r", " ", 
              RowBox[{"V", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F1", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", "nr", " ", 
              RowBox[{"W", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F2", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", 
              RowBox[{"Sin", "[", "t", "]"}], " ", 
              RowBox[{
               SuperscriptBox["W", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"F0", "[", 
              RowBox[{"r", ",", "t"}], "]"}], "+", 
             RowBox[{"F1", "[", 
              RowBox[{"r", ",", "t"}], "]"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"F2", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}]}]], " ", "r", " ", 
           SuperscriptBox[
            RowBox[{"Q", "[", 
             RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F1", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", "r", " ", "w"}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F1", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", "q", " ", "r", " ", 
              RowBox[{"V", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F1", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", "nr", " ", 
              RowBox[{"W", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F2", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", 
              RowBox[{"Sin", "[", "t", "]"}], " ", 
              RowBox[{
               SuperscriptBox["W", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"F0", "[", 
              RowBox[{"r", ",", "t"}], "]"}], "+", 
             RowBox[{"F1", "[", 
              RowBox[{"r", ",", "t"}], "]"}], "+", 
             RowBox[{"F2", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]], " ", "r", " ", 
           RowBox[{"P", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                 RowBox[{"F2", "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}]]}], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
              RowBox[{"W", "[", 
               RowBox[{"r", ",", "t"}], "]"}], " ", 
              RowBox[{"X", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"F0", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "+", 
                RowBox[{"F1", "[", 
                 RowBox[{"r", ",", "t"}], "]"}]}]], " ", "nr", " ", 
              RowBox[{"Y", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F2", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", 
              RowBox[{"Sin", "[", "t", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F0", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", 
                 RowBox[{
                  SuperscriptBox["Y", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F0", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", "r", " ", 
                 RowBox[{
                  SuperscriptBox["Q", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F2", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", "r", " ", 
                 RowBox[{"Sin", "[", "t", "]"}], " ", 
                 RowBox[{"X", "[", 
                  RowBox[{"r", ",", "t"}], "]"}], " ", 
                 RowBox[{
                  SuperscriptBox["W", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"F0", "[", 
              RowBox[{"r", ",", "t"}], "]"}], "+", 
             RowBox[{"F1", "[", 
              RowBox[{"r", ",", "t"}], "]"}], "+", 
             RowBox[{"F2", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]], " ", "r", " ", 
           RowBox[{"Q", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"F0", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "+", 
                RowBox[{"F1", "[", 
                 RowBox[{"r", ",", "t"}], "]"}]}]], " ", "nr", " ", 
              RowBox[{"X", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "-", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F2", "[", 
                RowBox[{"r", ",", "t"}], "]"}]], " ", 
              RowBox[{"Sin", "[", "t", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F2", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", 
                 RowBox[{"Sin", "[", "t", "]"}], " ", 
                 RowBox[{"W", "[", 
                  RowBox[{"r", ",", "t"}], "]"}], " ", 
                 RowBox[{"Y", "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F0", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", 
                 RowBox[{
                  SuperscriptBox["X", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F0", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", "r", " ", 
                 RowBox[{
                  SuperscriptBox["P", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "-", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F2", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", "r", " ", 
                 RowBox[{"Sin", "[", "t", "]"}], " ", 
                 RowBox[{"Y", "[", 
                  RowBox[{"r", ",", "t"}], "]"}], " ", 
                 RowBox[{
                  SuperscriptBox["W", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"F0", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "+", 
                RowBox[{"F1", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"F2", "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}]}]], " ", "r", " ", 
              SuperscriptBox[
               RowBox[{"X", "[", 
                RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"4", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F1", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", "r", " ", "w"}], "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F1", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", "q", " ", "r", " ", 
                 RowBox[{"V", "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F1", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", "nr", " ", 
                 RowBox[{"W", "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F2", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", 
                 RowBox[{"Sin", "[", "t", "]"}], " ", 
                 RowBox[{
                  SuperscriptBox["W", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"F0", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "+", 
                RowBox[{"F1", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"F2", "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}]}]], " ", "r", " ", 
              SuperscriptBox[
               RowBox[{"Y", "[", 
                RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"4", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F1", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", "r", " ", "w"}], "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F1", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", "q", " ", "r", " ", 
                 RowBox[{"V", "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F1", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", "nr", " ", 
                 RowBox[{"W", "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"F2", "[", 
                   RowBox[{"r", ",", "t"}], "]"}]], " ", 
                 RowBox[{"Sin", "[", "t", "]"}], " ", 
                 RowBox[{
                  SuperscriptBox["W", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", 
                    RowBox[{"F0", "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]], "+", 
                   RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", 
                    RowBox[{"F2", "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"W", "[", 
                    RowBox[{"r", ",", "t"}], "]"}], "2"]}]}], ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["Afi", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                   RowBox[{"r", ",", "t"}], "]"}], "2"]}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"2", " ", 
                   RowBox[{"F2", "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
                 RowBox[{"Sin", "[", "t", "]"}], " ", 
                 RowBox[{"W", "[", 
                  RowBox[{"r", ",", "t"}], "]"}], " ", 
                 RowBox[{
                  SuperscriptBox["Afi", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}], " ", 
                 RowBox[{
                  SuperscriptBox["V", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"2", " ", 
                   RowBox[{"F2", "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
                 SuperscriptBox[
                  RowBox[{
                   SuperscriptBox["V", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                   RowBox[{"r", ",", "t"}], "]"}], "2"]}], "+", 
                RowBox[{
                 SuperscriptBox["r", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", 
                    RowBox[{"F0", "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]], "+", 
                    RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", 
                    RowBox[{"F2", "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
                    SuperscriptBox[
                    RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"W", "[", 
                    RowBox[{"r", ",", "t"}], "]"}], "2"]}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["Afi", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}], "2"]}], "+", 
                   RowBox[{"2", " ", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", 
                    RowBox[{"F2", "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
                    RowBox[{"Sin", "[", "t", "]"}], " ", 
                    RowBox[{"W", "[", 
                    RowBox[{"r", ",", "t"}], "]"}], " ", 
                    RowBox[{
                    SuperscriptBox["Afi", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}], " ", 
                    RowBox[{
                    SuperscriptBox["V", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                   RowBox[{
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"2", " ", 
                    RowBox[{"F2", "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
                    SuperscriptBox[
                    RowBox[{
                    SuperscriptBox["V", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}], "2"]}]}], ")"}]}]}], 
               ")"}]}], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"F0", "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                RowBox[{"F1", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"F2", "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}]}]], " ", "r", " ", 
              RowBox[{"Y", "[", 
               RowBox[{"r", ",", "t"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{
                  SuperscriptBox["P", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                RowBox[{"r", " ", 
                 RowBox[{
                  SuperscriptBox["X", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{"F0", "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                RowBox[{"F1", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"F2", "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}]}]], " ", "r", " ", 
              RowBox[{"X", "[", 
               RowBox[{"r", ",", "t"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{
                  SuperscriptBox["Q", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                RowBox[{"r", " ", 
                 RowBox[{
                  SuperscriptBox["Y", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}], "   ", "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "2"}], ")"}], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"F0", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"F2", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}]}]], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "t", "]"}], "4"], " ", 
     RowBox[{"(", " ", 
      RowBox[{
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["W", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"W", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "-", 
          RowBox[{"r", " ", 
           RowBox[{
            SuperscriptBox["W", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}], "2"]}], ")"}]}], " ", 
    "+", 
    RowBox[{
     RowBox[{"Sin", "[", "t", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["F0", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            SuperscriptBox["F0", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["F0", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"r", ",", "t"}], "]"}], "+", 
             RowBox[{
              SuperscriptBox["F2", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["F0", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "2"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{"r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               SuperscriptBox["F0", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", 
                RowBox[{"r", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["F0", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}], "+", 
                   RowBox[{
                    SuperscriptBox["F2", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}]}], ")"}]}], "+", 
             RowBox[{"r", " ", 
              RowBox[{
               SuperscriptBox["F0", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"2", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
      ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqW", "=", "   ", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["alfa", "2"], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"F2", "[", 
        RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        SuperscriptBox[
         RowBox[{"Afi", "[", 
          RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
        RowBox[{"W", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"F0", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"F1", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}]}]], " ", "nr", " ", "r", " ", 
        SuperscriptBox[
         RowBox[{"X", "[", 
          RowBox[{"r", ",", "t"}], "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"F0", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{"F1", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{"F2", "[", 
           RowBox[{"r", ",", "t"}], "]"}]}]], " ", "r", " ", 
        RowBox[{"Cos", "[", "t", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"X", "[", 
          RowBox[{"r", ",", "t"}], "]"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"F0", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"F1", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}]}]], " ", "q", " ", 
        SuperscriptBox["r", "2"], " ", 
        RowBox[{"Afi", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"X", "[", 
          RowBox[{"r", ",", "t"}], "]"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"F0", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"F1", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}]}]], " ", "nr", " ", "r", " ", 
        SuperscriptBox[
         RowBox[{"Y", "[", 
          RowBox[{"r", ",", "t"}], "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"F0", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{"F1", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{"F2", "[", 
           RowBox[{"r", ",", "t"}], "]"}]}]], " ", "r", " ", 
        RowBox[{"Cos", "[", "t", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Y", "[", 
          RowBox[{"r", ",", "t"}], "]"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"F0", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"F1", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}]}]], " ", "q", " ", 
        SuperscriptBox["r", "2"], " ", 
        RowBox[{"Afi", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Y", "[", 
          RowBox[{"r", ",", "t"}], "]"}], "2"]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Afi", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "t"}], "]"}], " ", 
        RowBox[{"W", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["Afi", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"W", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["Afi", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"r", ",", "t"}], "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "t"}], "]"}], " ", 
        RowBox[{"W", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["Afi", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"0", ",", "1"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"r", ",", "t"}], "]"}], "2"]}], "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"F0", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{"F1", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{"F2", "[", 
           RowBox[{"r", ",", "t"}], "]"}]}]], " ", "r", " ", 
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"X", "[", 
          RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
        RowBox[{
         SuperscriptBox["F0", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"F0", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{"F1", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{"F2", "[", 
           RowBox[{"r", ",", "t"}], "]"}]}]], " ", "r", " ", 
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Y", "[", 
          RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
        RowBox[{
         SuperscriptBox["F0", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"F0", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{"F1", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{"F2", "[", 
           RowBox[{"r", ",", "t"}], "]"}]}]], " ", "r", " ", 
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"X", "[", 
          RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
        RowBox[{
         SuperscriptBox["F2", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"F0", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{"F1", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{"F2", "[", 
           RowBox[{"r", ",", "t"}], "]"}]}]], " ", "r", " ", 
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Y", "[", 
          RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
        RowBox[{
         SuperscriptBox["F2", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"F0", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{"F1", "[", 
           RowBox[{"r", ",", "t"}], "]"}]}]], " ", "r", " ", 
        SuperscriptBox[
         RowBox[{"P", "[", 
          RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"F1", "[", 
             RowBox[{"r", ",", "t"}], "]"}]], " ", "nr"}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"F2", "[", 
             RowBox[{"r", ",", "t"}], "]"}]], " ", 
           RowBox[{"Cos", "[", "t", "]"}]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"F1", "[", 
             RowBox[{"r", ",", "t"}], "]"}]], " ", "q", " ", "r", " ", 
           RowBox[{"Afi", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           RowBox[{"Sin", "[", "t", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"F2", "[", 
             RowBox[{"r", ",", "t"}], "]"}]], " ", 
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{
            SuperscriptBox["F0", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"F2", "[", 
             RowBox[{"r", ",", "t"}], "]"}]], " ", 
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{
            SuperscriptBox["F2", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"F0", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{"F1", "[", 
           RowBox[{"r", ",", "t"}], "]"}]}]], " ", "r", " ", 
        SuperscriptBox[
         RowBox[{"Q", "[", 
          RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"F1", "[", 
             RowBox[{"r", ",", "t"}], "]"}]], " ", "nr"}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"F2", "[", 
             RowBox[{"r", ",", "t"}], "]"}]], " ", 
           RowBox[{"Cos", "[", "t", "]"}]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"F1", "[", 
             RowBox[{"r", ",", "t"}], "]"}]], " ", "q", " ", "r", " ", 
           RowBox[{"Afi", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           RowBox[{"Sin", "[", "t", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"F2", "[", 
             RowBox[{"r", ",", "t"}], "]"}]], " ", 
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{
            SuperscriptBox["F0", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"F2", "[", 
             RowBox[{"r", ",", "t"}], "]"}]], " ", 
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{
            SuperscriptBox["F2", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Afi", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"Cos", "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["V", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["Afi", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["V", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "-", 
       RowBox[{"2", " ", "r", " ", 
        RowBox[{"Afi", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"W", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["Afi", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "+", 
       RowBox[{"2", " ", "r", " ", 
        RowBox[{"Afi", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "t"}], "]"}], " ", 
        RowBox[{"W", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["Afi", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "-", 
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        RowBox[{"W", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["Afi", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"r", ",", "t"}], "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "t"}], "]"}], " ", 
        RowBox[{"W", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["Afi", 
           TagBox[
            RowBox[{"(", 
             RowBox[{"1", ",", "0"}], ")"}],
            Derivative],
           MultilineFunction->None], "[", 
          RowBox[{"r", ",", "t"}], "]"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"F1", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{"F2", "[", 
           RowBox[{"r", ",", "t"}], "]"}]}]], " ", "r", " ", 
        RowBox[{"P", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"F1", "[", 
             RowBox[{"r", ",", "t"}], "]"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"r", " ", "w"}], "-", 
             RowBox[{"q", " ", "r", " ", 
              RowBox[{"V", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"nr", "+", 
                RowBox[{"q", " ", "r", " ", 
                 RowBox[{"Afi", "[", 
                  RowBox[{"r", ",", "t"}], "]"}], " ", 
                 RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}], " ", 
              RowBox[{"W", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}], " ", 
           RowBox[{"Y", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"F0", "[", 
             RowBox[{"r", ",", "t"}], "]"}]], " ", 
           RowBox[{"X", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"r", " ", 
              RowBox[{
               SuperscriptBox["F0", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "-", 
             RowBox[{"r", " ", 
              RowBox[{
               SuperscriptBox["F2", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"F1", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{"F2", "[", 
           RowBox[{"r", ",", "t"}], "]"}]}]], " ", "r", " ", 
        RowBox[{"Q", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"F1", "[", 
             RowBox[{"r", ",", "t"}], "]"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"r", " ", "w"}], "-", 
             RowBox[{"q", " ", "r", " ", 
              RowBox[{"V", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"nr", "+", 
                RowBox[{"q", " ", "r", " ", 
                 RowBox[{"Afi", "[", 
                  RowBox[{"r", ",", "t"}], "]"}], " ", 
                 RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}], " ", 
              RowBox[{"W", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}], " ", 
           RowBox[{"X", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"F0", "[", 
             RowBox[{"r", ",", "t"}], "]"}]], " ", 
           RowBox[{"Y", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"r", " ", 
              RowBox[{
               SuperscriptBox["F0", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "-", 
             RowBox[{"r", " ", 
              RowBox[{
               SuperscriptBox["F2", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}], "-", 
       RowBox[{"2", " ", "r", " ", 
        RowBox[{"Afi", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["V", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["r", "2"], " ", 
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["Afi", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["V", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"Sin", "[", "t", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{"Cos", "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["W", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox["F0", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}], "-", 
              RowBox[{"3", " ", 
               RowBox[{
                SuperscriptBox["F2", 
                 TagBox[
                  RowBox[{"(", 
                   RowBox[{"0", ",", "1"}], ")"}],
                  Derivative],
                 MultilineFunction->None], "[", 
                RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], " ", 
           RowBox[{
            SuperscriptBox["W", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"0", ",", "1"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["W", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "2"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"r", " ", 
              RowBox[{
               SuperscriptBox["F0", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "-", 
             RowBox[{"3", " ", "r", " ", 
              RowBox[{
               SuperscriptBox["F2", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"W", "[", 
              RowBox[{"r", ",", "t"}], "]"}], "-", 
             RowBox[{"r", " ", 
              RowBox[{
               SuperscriptBox["W", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["r", "2"], " ", 
           RowBox[{
            SuperscriptBox["W", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"2", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqA", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "4"}], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"F1", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "+", 
       RowBox[{"F2", "[", 
        RowBox[{"r", ",", "t"}], "]"}]}]], " ", "q", " ", 
     SuperscriptBox["r", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Q", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"X", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"P", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"Y", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "   ", "+", 
    RowBox[{
     RowBox[{"Afi", "[", 
      RowBox[{"r", ",", "t"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "t", "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["F0", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "t"}], "]"}], "-", 
          RowBox[{
           SuperscriptBox["F2", 
            TagBox[
             RowBox[{"(", 
              RowBox[{"0", ",", "1"}], ")"}],
             Derivative],
            MultilineFunction->None], "[", 
           RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"Sin", "[", "t", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["Afi", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", "t", "]"}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["F0", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"r", ",", "t"}], "]"}], "-", 
             RowBox[{
              SuperscriptBox["F2", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"2", " ", "r", " ", 
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["Afi", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{"r", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Afi", "[", 
        RowBox[{"r", ",", "t"}], "]"}], "+", 
       RowBox[{"r", " ", 
        RowBox[{
         SuperscriptBox["Afi", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["F0", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "t"}], "]"}], "-", 
       RowBox[{
        SuperscriptBox["F2", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}], "  ", "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"F0", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"F2", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}]}]], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "t", "]"}], "3"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Afi", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"W", "[", 
          RowBox[{"r", ",", "t"}], "]"}], "2"]}], "-", 
       RowBox[{
        RowBox[{"Afi", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"Cos", "[", "t", "]"}], " ", 
        RowBox[{"W", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["W", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        RowBox[{"W", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["Afi", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["W", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{
         SuperscriptBox["V", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["W", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "+", 
       RowBox[{"r", " ", 
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"W", "[", 
          RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
        RowBox[{
         SuperscriptBox["Afi", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "+", 
       RowBox[{"r", " ", 
        RowBox[{"W", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["V", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "-", 
       RowBox[{"r", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{"W", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Afi", "[", 
              RowBox[{"r", ",", "t"}], "]"}], "+", 
             RowBox[{"r", " ", 
              RowBox[{
               SuperscriptBox["Afi", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{"r", " ", 
           RowBox[{
            SuperscriptBox["V", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}], " ", 
        RowBox[{
         SuperscriptBox["W", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
     RowBox[{
      SuperscriptBox["Afi", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "2"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"r", ",", "t"}], "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["r", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
     RowBox[{
      SuperscriptBox["Afi", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"2", ",", "0"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{"r", ",", "t"}], "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"eqV", "=", "      ", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "t", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Afi", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "t"}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["W", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"W", "[", 
               RowBox[{"r", ",", "t"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{"3", "+", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "t"}], "]"}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", " ", "t"}], "]"}], " ", 
                 RowBox[{
                  SuperscriptBox["F2", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "-", 
                RowBox[{"4", " ", 
                 RowBox[{"Sin", "[", "t", "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Cos", "[", "t", "]"}], " ", 
                    RowBox[{
                    SuperscriptBox["F0", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                   RowBox[{"r", " ", 
                    RowBox[{"Sin", "[", "t", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["F0", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}], "-", 
                    RowBox[{
                    SuperscriptBox["F2", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
               ")"}]}]}], ")"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Cos", "[", "t", "]"}], "+", 
                RowBox[{
                 RowBox[{"Sin", "[", "t", "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{
                    SuperscriptBox["F0", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                   RowBox[{
                    SuperscriptBox["F2", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}]}], ")"}], " ", 
              RowBox[{
               SuperscriptBox["V", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", "t", "]"}], " ", 
              RowBox[{"W", "[", 
               RowBox[{"r", ",", "t"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", 
                 RowBox[{
                  SuperscriptBox["Afi", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"Cos", "[", "t", "]"}], "+", 
                   RowBox[{
                    RowBox[{"Sin", "[", "t", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    SuperscriptBox["F0", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["F2", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}]}], ")"}]}], "+", 
                RowBox[{"r", " ", 
                 RowBox[{"Sin", "[", "t", "]"}], " ", 
                 RowBox[{
                  SuperscriptBox["Afi", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"2", " ", "r", " ", 
                    RowBox[{
                    SuperscriptBox["F0", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                   RowBox[{"2", " ", "r", " ", 
                    RowBox[{
                    SuperscriptBox["F2", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
             "+", 
             RowBox[{
              RowBox[{"Sin", "[", "t", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Sin", "[", "t", "]"}], " ", 
                 RowBox[{
                  SuperscriptBox["Afi", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}], " ", 
                 RowBox[{
                  SuperscriptBox["W", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                RowBox[{"r", " ", 
                 RowBox[{"(", 
                  RowBox[{"2", "-", 
                   RowBox[{"r", " ", 
                    RowBox[{
                    SuperscriptBox["F0", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                   RowBox[{"r", " ", 
                    RowBox[{
                    SuperscriptBox["F2", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}], " ", 
                 RowBox[{
                  SuperscriptBox["V", 
                   TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                   MultilineFunction->None], "[", 
                  RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"r", " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Afi", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "+", 
          RowBox[{"r", " ", 
           RowBox[{
            SuperscriptBox["Afi", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}], " ", 
        RowBox[{
         SuperscriptBox["W", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"F0", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"F2", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}]}]], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "t", "]"}], "4"], " ", 
     RowBox[{"W", "[", 
      RowBox[{"r", ",", "t"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Afi", "[", 
          RowBox[{"r", ",", "t"}], "]"}]}], " ", 
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"W", "[", 
          RowBox[{"r", ",", "t"}], "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"Afi", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"Cos", "[", "t", "]"}], " ", 
        RowBox[{"W", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["W", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        RowBox[{"W", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["Afi", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["W", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{
         SuperscriptBox["V", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["W", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "-", 
       RowBox[{"r", " ", 
        RowBox[{"Sin", "[", "t", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"W", "[", 
          RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
        RowBox[{
         SuperscriptBox["Afi", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "-", 
       RowBox[{"r", " ", 
        RowBox[{"W", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["V", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "+", 
       RowBox[{"r", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", "t", "]"}], " ", 
           RowBox[{"W", "[", 
            RowBox[{"r", ",", "t"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Afi", "[", 
              RowBox[{"r", ",", "t"}], "]"}], "+", 
             RowBox[{"r", " ", 
              RowBox[{
               SuperscriptBox["Afi", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"1", ",", "0"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{"r", " ", 
           RowBox[{
            SuperscriptBox["V", 
             TagBox[
              RowBox[{"(", 
               RowBox[{"1", ",", "0"}], ")"}],
              Derivative],
             MultilineFunction->None], "[", 
            RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}], " ", 
        RowBox[{
         SuperscriptBox["W", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"1", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"F1", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "+", 
       RowBox[{"F2", "[", 
        RowBox[{"r", ",", "t"}], "]"}]}]], " ", "q", " ", 
     SuperscriptBox["r", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "t", "]"}], "3"], " ", 
     RowBox[{"W", "[", 
      RowBox[{"r", ",", "t"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Q", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"X", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"P", "[", 
         RowBox[{"r", ",", "t"}], "]"}], " ", 
        RowBox[{"Y", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"F0", "[", 
        RowBox[{"r", ",", "t"}], "]"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"F1", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}]}]], " ", "q", " ", 
     SuperscriptBox["r", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"P", "[", 
         RowBox[{"r", ",", "t"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Q", "[", 
         RowBox[{"r", ",", "t"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"X", "[", 
         RowBox[{"r", ",", "t"}], "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"Y", "[", 
         RowBox[{"r", ",", "t"}], "]"}], "2"]}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Sin", "[", "t", "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["V", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"r", ",", "t"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        RowBox[{
         SuperscriptBox["V", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"2", ",", "0"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TDtot", "=", 
    RowBox[{"2", "\[Pi]", 
     RowBox[{"(", 
      FractionBox["con", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], "2"]], ")"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"F0", "[", 
          RowBox[{"r", ",", "t"}], "]"}], "+", 
         RowBox[{"2", 
          RowBox[{"F1", "[", 
           RowBox[{"r", ",", "t"}], "]"}]}], "+", 
         RowBox[{"F2", "[", 
          RowBox[{"r", ",", "t"}], "]"}]}], "]"}], 
       SuperscriptBox["r", "2"], 
       RowBox[{"Sin", "[", "t", "]"}]}], ")"}], 
     FractionBox["1", 
      RowBox[{"2", " ", "r"}]], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"F0", "[", 
           RowBox[{"r", ",", "t"}], "]"}]}], "-", 
         RowBox[{"F1", "[", 
          RowBox[{"r", ",", "t"}], "]"}], "-", 
         RowBox[{"F2", "[", 
          RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "8"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"F0", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}], "+", 
            RowBox[{"F1", "[", 
             RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"q", " ", "r", " ", 
             RowBox[{"Afi", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}], "+", 
            RowBox[{"nr", " ", 
             RowBox[{"Csc", "[", "t", "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Q", "[", 
              RowBox[{"r", ",", "t"}], "]"}], " ", 
             RowBox[{"X", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"P", "[", 
              RowBox[{"r", ",", "t"}], "]"}], " ", 
             RowBox[{"Y", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", 
            RowBox[{"F2", "[", 
             RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"8", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"F1", "[", 
               RowBox[{"r", ",", "t"}], "]"}]], " ", 
             RowBox[{"Sin", "[", "t", "]"}], " ", 
             RowBox[{"W", "[", 
              RowBox[{"r", ",", "t"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "r"}], " ", "w"}], "+", 
               RowBox[{"q", " ", "r", " ", 
                RowBox[{"V", "[", 
                 RowBox[{"r", ",", "t"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"nr", "+", 
                  RowBox[{"q", " ", "r", " ", 
                   RowBox[{"Afi", "[", 
                    RowBox[{"r", ",", "t"}], "]"}], " ", 
                   RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}], " ", 
                RowBox[{"W", "[", 
                 RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Q", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], " ", 
                RowBox[{"X", "[", 
                 RowBox[{"r", ",", "t"}], "]"}]}], "-", 
               RowBox[{
                RowBox[{"P", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], " ", 
                RowBox[{"Y", "[", 
                 RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"F0", "[", 
               RowBox[{"r", ",", "t"}], "]"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox[
                 RowBox[{"P", "[", 
                  RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   RowBox[{"W", "[", 
                    RowBox[{"r", ",", "t"}], "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cos", "[", "t", "]"}], "+", 
                    RowBox[{
                    RowBox[{"Sin", "[", "t", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    SuperscriptBox["F0", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["F2", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}]}], ")"}]}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", "t", "]"}], " ", 
                   RowBox[{
                    SuperscriptBox["W", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Q", "[", 
                  RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   RowBox[{"W", "[", 
                    RowBox[{"r", ",", "t"}], "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cos", "[", "t", "]"}], "+", 
                    RowBox[{
                    RowBox[{"Sin", "[", "t", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    SuperscriptBox["F0", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["F2", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}]}], ")"}]}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", "t", "]"}], " ", 
                   RowBox[{
                    SuperscriptBox["W", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"X", "[", 
                    RowBox[{"r", ",", "t"}], "]"}], "2"], "+", 
                  SuperscriptBox[
                   RowBox[{"Y", "[", 
                    RowBox[{"r", ",", "t"}], "]"}], "2"]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   RowBox[{"W", "[", 
                    RowBox[{"r", ",", "t"}], "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Cos", "[", "t", "]"}], "+", 
                    RowBox[{
                    RowBox[{"Sin", "[", "t", "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    SuperscriptBox["F0", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                    RowBox[{
                    SuperscriptBox["F2", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}]}], ")"}]}], "+", 
                  RowBox[{
                   RowBox[{"Sin", "[", "t", "]"}], " ", 
                   RowBox[{
                    SuperscriptBox["W", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"P", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], " ", 
                RowBox[{"Sin", "[", "t", "]"}], " ", 
                RowBox[{"X", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"W", "[", 
                    RowBox[{"r", ",", "t"}], "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "r", " ", 
                    RowBox[{
                    SuperscriptBox["F0", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}], "-", 
                    RowBox[{"2", " ", "r", " ", 
                    RowBox[{
                    SuperscriptBox["F2", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "-", 
                  RowBox[{"r", " ", 
                   RowBox[{
                    SuperscriptBox["W", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"Q", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], " ", 
                RowBox[{"Sin", "[", "t", "]"}], " ", 
                RowBox[{"Y", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"W", "[", 
                    RowBox[{"r", ",", "t"}], "]"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "r", " ", 
                    RowBox[{
                    SuperscriptBox["F0", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}], "-", 
                    RowBox[{"2", " ", "r", " ", 
                    RowBox[{
                    SuperscriptBox["F2", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "-", 
                  RowBox[{"r", " ", 
                   RowBox[{
                    SuperscriptBox["W", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"F0", "[", 
             RowBox[{"r", ",", "t"}], "]"}], "+", 
            RowBox[{"F2", "[", 
             RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"F1", "[", 
                RowBox[{"r", ",", "t"}], "]"}]]}], " ", "r", " ", 
             RowBox[{"(", 
              RowBox[{"w", "-", 
               RowBox[{"q", " ", 
                RowBox[{"V", "[", 
                 RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"P", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"Q", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"X", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"Y", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "2"]}], ")"}]}], "-", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"F0", "[", 
               RowBox[{"r", ",", "t"}], "]"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Q", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["X", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                   RowBox[{"r", ",", "t"}], "]"}], "+", 
                  RowBox[{"r", " ", 
                   RowBox[{
                    SuperscriptBox["P", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"P", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["Y", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                   RowBox[{"r", ",", "t"}], "]"}], "+", 
                  RowBox[{"r", " ", 
                   RowBox[{
                    SuperscriptBox["Q", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"Y", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["P", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                   RowBox[{"r", ",", "t"}], "]"}], "-", 
                  RowBox[{"r", " ", 
                   RowBox[{
                    SuperscriptBox["X", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"X", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{
                    SuperscriptBox["Q", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                  RowBox[{"r", " ", 
                   RowBox[{
                    SuperscriptBox["Y", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}]}], ")"}]}], ")"}]}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TD34", "=", 
   RowBox[{"2", "\[Pi]", 
    RowBox[{"(", 
     FractionBox["con", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "x"}], ")"}], "2"]], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"F0", "[", 
         RowBox[{"r", ",", "t"}], "]"}], "+", 
        RowBox[{"2", 
         RowBox[{"F1", "[", 
          RowBox[{"r", ",", "t"}], "]"}]}], "+", 
        RowBox[{"F2", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "]"}], 
      SuperscriptBox["r", "2"], 
      RowBox[{"Sin", "[", "t", "]"}]}], ")"}], 
    FractionBox["1", "2"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"F0", "[", 
        RowBox[{"r", ",", "t"}], "]"}]}], "-", 
      RowBox[{"F1", "[", 
       RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"F0", "[", 
          RowBox[{"r", ",", "t"}], "]"}], "+", 
         RowBox[{"F1", "[", 
          RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{"nr", "+", 
         RowBox[{"q", " ", "r", " ", 
          RowBox[{"Afi", "[", 
           RowBox[{"r", ",", "t"}], "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"P", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Q", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"X", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Y", "[", 
           RowBox[{"r", ",", "t"}], "]"}], "2"]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"F2", "[", 
         RowBox[{"r", ",", "t"}], "]"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"F1", "[", 
            RowBox[{"r", ",", "t"}], "]"}]], " ", 
          RowBox[{"Sin", "[", "t", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "r"}], " ", "w"}], "+", 
            RowBox[{"q", " ", "r", " ", 
             RowBox[{"V", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"nr", "+", 
               RowBox[{"q", " ", "r", " ", 
                RowBox[{"Afi", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], " ", 
                RowBox[{"Sin", "[", "t", "]"}]}]}], ")"}], " ", 
             RowBox[{"W", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Q", "[", 
              RowBox[{"r", ",", "t"}], "]"}], " ", 
             RowBox[{"X", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"P", "[", 
              RowBox[{"r", ",", "t"}], "]"}], " ", 
             RowBox[{"Y", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"F0", "[", 
            RowBox[{"r", ",", "t"}], "]"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox[
               RowBox[{"P", "[", 
                RowBox[{"r", ",", "t"}], "]"}], "2"]}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", "t", "]"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", "t", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{
                    SuperscriptBox["F0", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                  RowBox[{
                   SuperscriptBox["F2", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                   RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}]}], ")"}]}], "-", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Q", "[", 
               RowBox[{"r", ",", "t"}], "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", "t", "]"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", "t", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{
                    SuperscriptBox["F0", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                  RowBox[{
                   SuperscriptBox["F2", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                   RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"X", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"Y", "[", 
                 RowBox[{"r", ",", "t"}], "]"}], "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", "t", "]"}], "+", 
               RowBox[{
                RowBox[{"Sin", "[", "t", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{
                    SuperscriptBox["F0", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                    RowBox[{"r", ",", "t"}], "]"}]}], "+", 
                  RowBox[{
                   SuperscriptBox["F2", 
                    TagBox[
                    RowBox[{"(", 
                    RowBox[{"0", ",", "1"}], ")"}],
                    Derivative],
                    MultilineFunction->None], "[", 
                   RowBox[{"r", ",", "t"}], "]"}]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"P", "[", 
              RowBox[{"r", ",", "t"}], "]"}], " ", 
             RowBox[{"Sin", "[", "t", "]"}], " ", 
             RowBox[{"X", "[", 
              RowBox[{"r", ",", "t"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"r", " ", 
                RowBox[{
                 SuperscriptBox["F0", 
                  TagBox[
                   RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                   Derivative],
                  MultilineFunction->None], "[", 
                 RowBox[{"r", ",", "t"}], "]"}]}], "+", 
               RowBox[{"r", " ", 
                RowBox[{
                 SuperscriptBox["F2", 
                  TagBox[
                   RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                   Derivative],
                  MultilineFunction->None], "[", 
                 RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Q", "[", 
              RowBox[{"r", ",", "t"}], "]"}], " ", 
             RowBox[{"Sin", "[", "t", "]"}], " ", 
             RowBox[{"Y", "[", 
              RowBox[{"r", ",", "t"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"r", " ", 
                RowBox[{
                 SuperscriptBox["F0", 
                  TagBox[
                   RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                   Derivative],
                  MultilineFunction->None], "[", 
                 RowBox[{"r", ",", "t"}], "]"}]}], "+", 
               RowBox[{"r", " ", 
                RowBox[{
                 SuperscriptBox["F2", 
                  TagBox[
                   RowBox[{"(", 
                    RowBox[{"1", ",", "0"}], ")"}],
                   Derivative],
                  MultilineFunction->None], "[", 
                 RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
        ")"}]}]}], ")"}]}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Jt", "=", " ", 
   RowBox[{"2", "\[Pi]", 
    RowBox[{"(", 
     FractionBox["con", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "x"}], ")"}], "2"]], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"F0", "[", 
         RowBox[{"r", ",", "t"}], "]"}], "+", 
        RowBox[{"2", 
         RowBox[{"F1", "[", 
          RowBox[{"r", ",", "t"}], "]"}]}], "+", 
        RowBox[{"F2", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}], "]"}], 
      SuperscriptBox["r", "2"], 
      RowBox[{"Sin", "[", "t", "]"}]}], ")"}], "2", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      RowBox[{"F0", "[", 
       RowBox[{"r", ",", "t"}], "]"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"P", "[", 
        RowBox[{"r", ",", "t"}], "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"Q", "[", 
        RowBox[{"r", ",", "t"}], "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"X", "[", 
        RowBox[{"r", ",", "t"}], "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"Y", "[", 
        RowBox[{"r", ",", "t"}], "]"}], "2"]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "eqP", ",", "eqQ", ",", "eqX", ",", "eqY", ",", "eqF1", ",", "eqF2", ",", 
     "eqF0", ",", "eqW", ",", "eqA", ",", "eqV", ",", "TDtot", ",", "TD34", 
     ",", "Jt"}], "}"}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "eqP", ",", "eqQ", ",", "eqX", ",", "eqY", ",", "eqF1", ",", "eqF2", ",",
       "eqF0", ",", "eqW", ",", "eqA", ",", "eqV", ",", "TDtot", ",", "TD34", 
      ",", "Jt"}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Derivative", "[", 
          RowBox[{"1", ",", "ord_"}], "]"}], "[", "f_", "]"}], "[", 
        RowBox[{"r", ",", "t"}], "]"}], "\[Rule]", 
       RowBox[{
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "x"}], ")"}], "2"], "con"], 
        RowBox[{
         RowBox[{
          RowBox[{"Derivative", "[", 
           RowBox[{"1", ",", "ord"}], "]"}], "[", "f", "]"}], "[", 
         RowBox[{"x", ",", "t"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Derivative", "[", 
          RowBox[{"2", ",", "ord_"}], "]"}], "[", "f_", "]"}], "[", 
        RowBox[{"r", ",", "t"}], "]"}], "\[Rule]", 
       RowBox[{
        FractionBox["1", 
         SuperscriptBox["con", "2"]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", "x"}], ")"}], "4"], 
           RowBox[{
            RowBox[{
             RowBox[{"Derivative", "[", 
              RowBox[{"2", ",", "ord"}], "]"}], "[", "f", "]"}], "[", 
            RowBox[{"x", ",", "t"}], "]"}]}], "-", 
          RowBox[{"2", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", "x"}], ")"}], "3"], 
           RowBox[{
            RowBox[{
             RowBox[{"Derivative", "[", 
              RowBox[{"1", ",", "ord"}], "]"}], "[", "f", "]"}], "[", 
            RowBox[{"x", ",", "t"}], "]"}]}]}], ")"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f_", "[", 
        RowBox[{"r", ",", "t"}], "]"}], "\[Rule]", 
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "t"}], "]"}]}], ",", 
      RowBox[{"r", "\[Rule]", 
       RowBox[{"r", "[", 
        RowBox[{"x", ",", "t"}], "]"}]}]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{3.832249735623563*^9, 3.832249897894927*^9},
 CellLabel->
  "In[137]:=",ExpressionUUID->"f189cf5c-03ed-4aee-b7d1-1a17420f6f10"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StationaryProblem", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eqF0", ",", 
       RowBox[{
        RowBox[{"Left", "[", "x", "]"}], "->", 
        RowBox[{
         RowBox[{
          RowBox[{"Derivative", "[", 
           RowBox[{"1", ",", "0"}], "]"}], "[", "F0", "]"}], "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Right", "[", "x", "]"}], "\[Rule]", 
        RowBox[{"F0", "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Left", "[", "t", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{
          RowBox[{"Derivative", "[", 
           RowBox[{"0", ",", "1"}], "]"}], "[", "F0", "]"}], "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Right", "[", "t", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{
          RowBox[{"Derivative", "[", 
           RowBox[{"0", ",", "1"}], "]"}], "[", "F0", "]"}], "[", 
         RowBox[{"x", ",", "t"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"eqF1", ",", 
       RowBox[{
        RowBox[{"Left", "[", "x", "]"}], "->", 
        RowBox[{
         RowBox[{
          RowBox[{"Derivative", "[", 
           RowBox[{"1", ",", "0"}], "]"}], "[", "F1", "]"}], "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Right", "[", "x", "]"}], "\[Rule]", 
        RowBox[{"F1", "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Left", "[", "t", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"F1", "[", 
          RowBox[{"x", ",", "t"}], "]"}], "-", 
         RowBox[{"F2", "[", 
          RowBox[{"x", ",", "t"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"Right", "[", "t", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"F1", "[", 
          RowBox[{"x", ",", "t"}], "]"}], "-", 
         RowBox[{"F2", "[", 
          RowBox[{"x", ",", "t"}], "]"}]}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"eqF2", ",", 
       RowBox[{
        RowBox[{"Left", "[", "x", "]"}], "->", 
        RowBox[{
         RowBox[{
          RowBox[{"Derivative", "[", 
           RowBox[{"1", ",", "0"}], "]"}], "[", "F2", "]"}], "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Right", "[", "x", "]"}], "\[Rule]", 
        RowBox[{"F2", "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Left", "[", "t", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{
          RowBox[{"Derivative", "[", 
           RowBox[{"0", ",", "1"}], "]"}], "[", "F2", "]"}], "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Right", "[", "t", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{
          RowBox[{"Derivative", "[", 
           RowBox[{"0", ",", "1"}], "]"}], "[", "F2", "]"}], "[", 
         RowBox[{"x", ",", "t"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"eqW", ",", 
       RowBox[{
        RowBox[{"Left", "[", "x", "]"}], "\[Rule]", 
        RowBox[{"W", "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Right", "[", "x", "]"}], "\[Rule]", 
        RowBox[{"W", "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Left", "[", "t", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{
          RowBox[{"Derivative", "[", 
           RowBox[{"0", ",", "1"}], "]"}], "[", "W", "]"}], "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Right", "[", "t", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{
          RowBox[{"Derivative", "[", 
           RowBox[{"0", ",", "1"}], "]"}], "[", "W", "]"}], "[", 
         RowBox[{"x", ",", "t"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"eqX", ",", 
       RowBox[{
        RowBox[{"Left", "[", "x", "]"}], "->", 
        RowBox[{
         RowBox[{
          RowBox[{"Derivative", "[", 
           RowBox[{"1", ",", "0"}], "]"}], "[", "X", "]"}], "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Right", "[", "x", "]"}], "\[Rule]", 
        RowBox[{"X", "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Left", "[", "t", "]"}], "\[Rule]", 
        RowBox[{"X", "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Right", "[", "t", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{
          RowBox[{"Derivative", "[", 
           RowBox[{"0", ",", "1"}], "]"}], "[", "X", "]"}], "[", 
         RowBox[{"x", ",", "t"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"eqY", ",", 
       RowBox[{
        RowBox[{"Left", "[", "x", "]"}], "->", 
        RowBox[{
         RowBox[{
          RowBox[{"Derivative", "[", 
           RowBox[{"1", ",", "0"}], "]"}], "[", "Y", "]"}], "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Right", "[", "x", "]"}], "\[Rule]", 
        RowBox[{"Y", "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Left", "[", "t", "]"}], "\[Rule]", 
        RowBox[{"Y", "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Right", "[", "t", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{
          RowBox[{"Derivative", "[", 
           RowBox[{"0", ",", "1"}], "]"}], "[", "Y", "]"}], "[", 
         RowBox[{"x", ",", "t"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"eqP", ",", 
       RowBox[{
        RowBox[{"Left", "[", "x", "]"}], "->", 
        RowBox[{
         RowBox[{
          RowBox[{"Derivative", "[", 
           RowBox[{"1", ",", "0"}], "]"}], "[", "P", "]"}], "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Right", "[", "x", "]"}], "\[Rule]", 
        RowBox[{"P", "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Left", "[", "t", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{
          RowBox[{"Derivative", "[", 
           RowBox[{"0", ",", "1"}], "]"}], "[", "P", "]"}], "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Right", "[", "t", "]"}], "\[Rule]", 
        RowBox[{"P", "[", 
         RowBox[{"x", ",", "t"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"eqQ", ",", 
       RowBox[{
        RowBox[{"Left", "[", "x", "]"}], "->", 
        RowBox[{
         RowBox[{
          RowBox[{"Derivative", "[", 
           RowBox[{"1", ",", "0"}], "]"}], "[", "Q", "]"}], "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Right", "[", "x", "]"}], "\[Rule]", 
        RowBox[{"Q", "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Left", "[", "t", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{
          RowBox[{"Derivative", "[", 
           RowBox[{"0", ",", "1"}], "]"}], "[", "Q", "]"}], "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Right", "[", "t", "]"}], "\[Rule]", 
        RowBox[{"Q", "[", 
         RowBox[{"x", ",", "t"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"eqA", ",", 
       RowBox[{
        RowBox[{"Left", "[", "x", "]"}], "\[Rule]", 
        RowBox[{"Afi", "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Right", "[", "x", "]"}], "\[Rule]", 
        RowBox[{"Afi", "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Left", "[", "t", "]"}], "\[Rule]", 
        RowBox[{"Afi", "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Right", "[", "t", "]"}], "\[Rule]", 
        RowBox[{"Afi", "[", 
         RowBox[{"x", ",", "t"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"eqV", ",", 
       RowBox[{
        RowBox[{"Left", "[", "x", "]"}], "->", 
        RowBox[{
         RowBox[{
          RowBox[{"Derivative", "[", 
           RowBox[{"1", ",", "0"}], "]"}], "[", "V", "]"}], "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Right", "[", "x", "]"}], "\[Rule]", 
        RowBox[{"V", "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Left", "[", "t", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{
          RowBox[{"Derivative", "[", 
           RowBox[{"0", ",", "1"}], "]"}], "[", "V", "]"}], "[", 
         RowBox[{"x", ",", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Right", "[", "t", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{
          RowBox[{"Derivative", "[", 
           RowBox[{"0", ",", "1"}], "]"}], "[", "V", "]"}], "[", 
         RowBox[{"x", ",", "t"}], "]"}]}]}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
    "F0", ",", "F1", ",", "F2", ",", "W", ",", "X", ",", "Y", ",", "P", ",", 
     "Q", ",", "Afi", ",", "V"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", "t"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"DirectProductGrid", "[", 
    RowBox[{
     RowBox[{"UniformRange", "[", 
      RowBox[{"0", ",", "1", ",", "200"}], "]"}], ",", 
     RowBox[{"UniformRange", "[", 
      RowBox[{"0", ",", "\[Pi]", ",", "100"}], "]"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Parameters", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"con", ",", "alfa", ",", "w", ",", "q", ",", "nr", ",", "mu"}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Name", "\[Rule]", "\"\<EinsteinFermiMaxwell2d\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"LocalVIEs", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"r", "\[Rule]", 
      RowBox[{"x", " ", 
       RowBox[{"(", 
        RowBox[{"con", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x"}], ")"}]}], ")"}]}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"IntegralOutput", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<M_vol\>\"", "\[Rule]", "TDtot"}], ",", 
      RowBox[{"\"\<J_vol\>\"", "\[Rule]", "TD34"}], ",", 
      RowBox[{"\"\<Q_vol\>\"", "\[Rule]", "Jt"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"CalculateJacobian", "\[Rule]", "True"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PointOutput", "\[Rule]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<M_inf\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
         RowBox[{"4", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Pi]", " ", "con"}], ")"}], "/", 
            SuperscriptBox["alfa", "2"]}], ")"}], 
          RowBox[{
           RowBox[{
            RowBox[{"Derivative", "[", 
             RowBox[{"1", ",", "0"}], "]"}], "[", "F0", "]"}], "[", 
           RowBox[{"x", ",", "t"}], "]"}]}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<J_inf\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Pi]", " ", 
              SuperscriptBox["con", "2"]}], ")"}], "/", 
            SuperscriptBox["alfa", "2"]}], ")"}], 
          RowBox[{
           RowBox[{
            RowBox[{"Derivative", "[", 
             RowBox[{"2", ",", "0"}], "]"}], "[", "W", "]"}], "[", 
           RowBox[{"x", ",", "t"}], "]"}]}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Qe_inf\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
         RowBox[{
          RowBox[{"-", "con"}], " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Derivative", "[", 
             RowBox[{"1", ",", "0"}], "]"}], "[", "V", "]"}], "[", 
           RowBox[{"x", ",", "t"}], "]"}]}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Qm_inf\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["con", "2"], "/", "2"}], ")"}]}], " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Derivative", "[", 
             RowBox[{"2", ",", "0"}], "]"}], "[", "Afi", "]"}], "[", 
           RowBox[{"x", ",", "t"}], "]"}]}]}], "}"}]}]}], 
     "\[IndentingNewLine]", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.831970463126096*^9, 3.8319705015226355`*^9}, {
   3.83197053446546*^9, 3.8319706741342225`*^9}, {3.831974156813562*^9, 
   3.8319741648029656`*^9}, {3.832248447517318*^9, 3.832248467372142*^9}, {
   3.832248567002737*^9, 3.832248650435545*^9}, {3.832248881188974*^9, 
   3.8322488887491302`*^9}, 3.8322497563314123`*^9, {3.8322501242165995`*^9, 
   3.8322501278814096`*^9}, {3.8333741995755143`*^9, 
   3.8333742046870074`*^9}, {3.8333742433103933`*^9, 
   3.8333742929692855`*^9}, {3.833377464999022*^9, 3.833377482404575*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"bec186d2-1023-4496-8aa6-99708842a5fb"],

Cell[BoxData["\<\"auto descriptor = StationaryProblemDescriptor<2, double, \
double>(GridDescriptor<2, double>(5), Array<Array<std::array<size_t, \
2>>>{{{0, 1}, {0, 2}, {1, 0}, {2, 0}}, {{0, 2}, {1, 0}, {2, 0}, {0, 1}}, {{0, \
1}, {1, 0}, {0, 2}, {2, 0}}, {{0, 1}, {1, 0}, {0, 2}, {2, 0}}, {{0, 1}, {1, \
0}}, {{0, 1}, {1, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}, {{0, 1}, {1, 0}, \
{0, 2}, {2, 0}}, {{0, 1}, {1, 0}, {0, 2}, {2, 0}}}, 10, 6, 0, 0, 0, 1, 0, 0, \
0, 0);\\ndescriptor.SetProblemName(\\\"EinsteinFermiMaxwell2d\\\");\\\
ndescriptor.SetParameterName(0, \
\\\"con\\\");\\ndescriptor.SetParameterName(1, \
\\\"alfa\\\");\\ndescriptor.SetParameterName(2, \
\\\"w\\\");\\ndescriptor.SetParameterName(3, \
\\\"q\\\");\\ndescriptor.SetParameterName(4, \
\\\"nr\\\");\\ndescriptor.SetParameterName(5, \
\\\"mu\\\");\\ndescriptor.SetVariableName(0, \
\\\"F0\\\");\\ndescriptor.SetVariableName(1, \
\\\"F1\\\");\\ndescriptor.SetVariableName(2, \
\\\"F2\\\");\\ndescriptor.SetVariableName(3, \
\\\"W\\\");\\ndescriptor.SetVariableName(4, \
\\\"X\\\");\\ndescriptor.SetVariableName(5, \
\\\"Y\\\");\\ndescriptor.SetVariableName(6, \
\\\"P\\\");\\ndescriptor.SetVariableName(7, \
\\\"Q\\\");\\ndescriptor.SetVariableName(8, \
\\\"Afi\\\");\\ndescriptor.SetVariableName(9, \
\\\"V\\\");\\ndescriptor.SetLocalVariableIndependentExpression(0, [](const \
auto& l, const auto& g) {return (g.Parameters[0]*l.Point[0])/(1 - \
l.Point[0]);});\\ndescriptor.SetContinuousEquation(0, 0, [](const auto& l, \
const auto& g) {return -0.5*(pow(E,-2*l.FieldValues[0] + \
2*l.FieldValues[2])*pow(sin(l.Point[1]),4)*(pow(l.DerivativeValues[3][0],2) + \
pow(l.FieldValues[3] - (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])/g.Parameters[0],2))) - \
(pow(g.Parameters[1],2)*(2*pow(l.FieldValues[8],2)*(pow(E,2*l.FieldValues[0]) \
+ pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*pow(l.FieldValues[3],2)) + \
4*l.FieldValues[8]*sin(l.Point[1])*(-(pow(E,l.FieldValues[0] + \
2*(l.FieldValues[1] + \
l.FieldValues[2]))*g.Parameters[3]*pow(l.FieldValues[6],2)*pow(l.VIEValues[0],\
2)*pow(sin(l.Point[1]),2)*l.FieldValues[3]) - pow(E,l.FieldValues[0] + \
2*(l.FieldValues[1] + \
l.FieldValues[2]))*g.Parameters[3]*pow(l.FieldValues[7],2)*pow(l.VIEValues[0],\
2)*pow(sin(l.Point[1]),2)*l.FieldValues[3] + 2*pow(E,2*l.FieldValues[0] + \
2*l.FieldValues[1] + \
l.FieldValues[2])*g.Parameters[3]*l.FieldValues[7]*pow(l.VIEValues[0],2)*sin(\
l.Point[1])*l.FieldValues[4] - pow(E,l.FieldValues[0] + 2*(l.FieldValues[1] + \
l.FieldValues[2]))*g.Parameters[3]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),\
2)*l.FieldValues[3]*pow(l.FieldValues[4],2) - 2*pow(E,2*l.FieldValues[0] + \
2*l.FieldValues[1] + \
l.FieldValues[2])*g.Parameters[3]*l.FieldValues[6]*pow(l.VIEValues[0],2)*sin(\
l.Point[1])*l.FieldValues[5] - pow(E,l.FieldValues[0] + 2*(l.FieldValues[1] + \
l.FieldValues[2]))*g.Parameters[3]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),\
2)*l.FieldValues[3]*pow(l.FieldValues[5],2) + \
pow(E,2*l.FieldValues[0])*cos(l.Point[1])*l.DerivativeValues[8][0] + \
pow(E,2*l.FieldValues[2])*cos(l.Point[1])*pow(sin(l.Point[1]),2)*pow(l.\
FieldValues[3],2)*l.DerivativeValues[8][0] + \
pow(E,2*l.FieldValues[2])*cos(l.Point[1])*sin(l.Point[1])*l.FieldValues[3]*l.\
DerivativeValues[9][0] + (pow(E,2*l.FieldValues[0])*pow(1 - \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*l.DerivativeValues[8][1])/g.\
Parameters[0] + (pow(E,2*l.FieldValues[2])*pow(1 - \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),3)*pow(l.FieldValues[3],2)*l.\
DerivativeValues[8][1])/g.Parameters[0] + (pow(E,2*l.FieldValues[2])*pow(1 - \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),2)*l.FieldValues[3]*l.\
DerivativeValues[9][1])/g.Parameters[0]) + \
sin(l.Point[1])*(-(pow(E,l.FieldValues[0] + l.FieldValues[1] + \
2*l.FieldValues[2])*pow(l.FieldValues[6],2)*l.VIEValues[0]*sin(l.Point[1])*(-\
4*pow(E,l.FieldValues[1])*g.Parameters[2]*l.VIEValues[0] + \
4*pow(E,l.FieldValues[1])*g.Parameters[3]*l.VIEValues[0]*l.FieldValues[9] + \
4*pow(E,l.FieldValues[1])*g.Parameters[4]*l.FieldValues[3] + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0])) - \
pow(E,l.FieldValues[0] + l.FieldValues[1] + \
2*l.FieldValues[2])*pow(l.FieldValues[7],2)*l.VIEValues[0]*sin(l.Point[1])*(-\
4*pow(E,l.FieldValues[1])*g.Parameters[2]*l.VIEValues[0] + \
4*pow(E,l.FieldValues[1])*g.Parameters[3]*l.VIEValues[0]*l.FieldValues[9] + \
4*pow(E,l.FieldValues[1])*g.Parameters[4]*l.FieldValues[3] + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) + \
2*pow(E,l.FieldValues[0] + l.FieldValues[1] + \
l.FieldValues[2])*l.FieldValues[6]*l.VIEValues[0]*(-(pow(E,2*l.FieldValues[2])\
*pow(sin(l.Point[1]),2)*l.FieldValues[3]*l.FieldValues[4]) - \
4*pow(E,l.FieldValues[0] + l.FieldValues[1])*g.Parameters[4]*l.FieldValues[5] \
+ pow(E,l.FieldValues[2])*sin(l.Point[1])*(-2*pow(E,l.FieldValues[0])*l.\
DerivativeValues[5][0] - (2*pow(E,l.FieldValues[0])*pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[7][0])/g.Parameters[0] + \
(pow(E,l.FieldValues[2])*pow(1 - \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*l.FieldValues[4]*l.\
DerivativeValues[3][1])/g.Parameters[0])) + 2*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
l.FieldValues[2])*l.FieldValues[7]*l.VIEValues[0]*(4*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*g.Parameters[4]*l.FieldValues[4] - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*(pow(E,l.FieldValues[2])*sin(l.Point[\
1])*l.FieldValues[3]*l.FieldValues[5] - \
2*pow(E,l.FieldValues[0])*l.DerivativeValues[4][0] - \
(2*pow(E,l.FieldValues[0])*pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[6][0])/g.Parameters[0] - \
(pow(E,l.FieldValues[2])*pow(1 - \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*l.FieldValues[5]*l.\
DerivativeValues[3][1])/g.Parameters[0])) + \
sin(l.Point[1])*(pow(E,l.FieldValues[0] + l.FieldValues[1] + \
2*l.FieldValues[2])*l.VIEValues[0]*pow(l.FieldValues[4],2)*(4*pow(E,l.\
FieldValues[1])*g.Parameters[2]*l.VIEValues[0] - \
4*pow(E,l.FieldValues[1])*g.Parameters[3]*l.VIEValues[0]*l.FieldValues[9] - \
4*pow(E,l.FieldValues[1])*g.Parameters[4]*l.FieldValues[3] + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) + \
pow(E,l.FieldValues[0] + l.FieldValues[1] + \
2*l.FieldValues[2])*l.VIEValues[0]*pow(l.FieldValues[5],2)*(4*pow(E,l.\
FieldValues[1])*g.Parameters[2]*l.VIEValues[0] - \
4*pow(E,l.FieldValues[1])*g.Parameters[3]*l.VIEValues[0]*l.FieldValues[9] - \
4*pow(E,l.FieldValues[1])*g.Parameters[4]*l.FieldValues[3] + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) + \
2*((pow(E,2*l.FieldValues[0]) + \
pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*pow(l.FieldValues[3],2))*pow(\
l.DerivativeValues[8][0],2) + \
2*pow(E,2*l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[3]*l.\
DerivativeValues[8][0]*l.DerivativeValues[9][0] + \
pow(E,2*l.FieldValues[2])*pow(l.DerivativeValues[9][0],2) + \
pow(l.VIEValues[0],2)*((pow(1 - l.Point[0],4)*(pow(E,2*l.FieldValues[0]) + \
pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*pow(l.FieldValues[3],2))*pow(\
l.DerivativeValues[8][1],2))/pow(g.Parameters[0],2) + \
(2*pow(E,2*l.FieldValues[2])*pow(1 - \
l.Point[0],4)*sin(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[8][1]*l.\
DerivativeValues[9][1])/pow(g.Parameters[0],2) + \
(pow(E,2*l.FieldValues[2])*pow(1 - \
l.Point[0],4)*pow(l.DerivativeValues[9][1],2))/pow(g.Parameters[0],2))) - \
4*pow(E,2*l.FieldValues[0] + l.FieldValues[1] + \
2*l.FieldValues[2])*l.VIEValues[0]*l.FieldValues[5]*(-l.DerivativeValues[6][1]\
 + (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[4][1])/g.Parameters[0]) + \
4*pow(E,2*l.FieldValues[0] + l.FieldValues[1] + \
2*l.FieldValues[2])*l.VIEValues[0]*l.FieldValues[4]*(-l.DerivativeValues[7][1]\
 + (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[5][1])/g.Parameters[0])))))/(\
2.*pow(E,2*(l.FieldValues[0] + l.FieldValues[2]))) + \
sin(l.Point[1])*(cos(l.Point[1])*l.DerivativeValues[0][0] + \
sin(l.Point[1])*(l.DerivativeValues[0][0]*(l.DerivativeValues[0][0] + \
l.DerivativeValues[2][0]) + l.DerivativeValues[0][1] + l.VIEValues[0]*((pow(1 \
- l.Point[0],2)*l.DerivativeValues[0][2]*(2 + l.VIEValues[0]*((pow(1 - \
l.Point[0],2)*l.DerivativeValues[0][2])/g.Parameters[0] + (pow(1 - \
l.Point[0],2)*l.DerivativeValues[2][1])/g.Parameters[0])))/g.Parameters[0] + \
(l.VIEValues[0]*(-2*pow(1 - l.Point[0],3)*l.DerivativeValues[0][2] + pow(1 - \
l.Point[0],4)*l.DerivativeValues[0][3]))/pow(g.Parameters[0],2))));});\\\
ndescriptor.SetContinuousEquation(0, 1, [](const auto& l, const auto& g) \
{return l.DerivativeValues[0][2];});\\ndescriptor.SetContinuousEquation(0, 2, \
[](const auto& l, const auto& g) {return \
l.FieldValues[0];});\\ndescriptor.SetContinuousEquation(0, 3, [](const auto& \
l, const auto& g) {return \
l.DerivativeValues[0][0];});\\ndescriptor.SetContinuousEquation(0, 4, \
[](const auto& l, const auto& g) {return \
l.DerivativeValues[0][0];});\\ndescriptor.SetContinuousEquation(1, 0, \
[](const auto& l, const auto& g) {return \
-0.5*(pow(g.Parameters[1],2)*pow(E,-l.FieldValues[0] + l.FieldValues[1] - \
l.FieldValues[2])*l.VIEValues[0]*sin(l.Point[1])*(-(pow(E,l.FieldValues[2])*\
pow(l.FieldValues[6],2)*sin(l.Point[1])*(4*pow(E,l.FieldValues[1])*g.\
Parameters[2]*l.VIEValues[0] - \
4*pow(E,l.FieldValues[1])*g.Parameters[3]*l.VIEValues[0]*l.FieldValues[9] - \
4*pow(E,l.FieldValues[1])*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*l.\
FieldValues[3] + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0])) - \
pow(E,l.FieldValues[2])*pow(l.FieldValues[7],2)*sin(l.Point[1])*(4*pow(E,l.\
FieldValues[1])*g.Parameters[2]*l.VIEValues[0] - \
4*pow(E,l.FieldValues[1])*g.Parameters[3]*l.VIEValues[0]*l.FieldValues[9] - \
4*pow(E,l.FieldValues[1])*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*l.\
FieldValues[3] + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) + \
l.FieldValues[6]*(-2*pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*l.\
FieldValues[3]*l.FieldValues[4] - 8*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*l.\
FieldValues[5] + \
2*pow(E,l.FieldValues[2])*sin(l.Point[1])*(2*pow(E,l.FieldValues[0])*l.\
DerivativeValues[5][0] + (2*pow(E,l.FieldValues[0])*pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[7][0])/g.Parameters[0] + \
(pow(E,l.FieldValues[2])*pow(1 - \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*l.FieldValues[4]*l.\
DerivativeValues[3][1])/g.Parameters[0])) + \
2*l.FieldValues[7]*(4*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*l.\
FieldValues[4] - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*(pow(E,l.FieldValues[2])*sin(l.Point[\
1])*l.FieldValues[3]*l.FieldValues[5] + \
2*pow(E,l.FieldValues[0])*l.DerivativeValues[4][0] + \
(2*pow(E,l.FieldValues[0])*pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[6][0])/g.Parameters[0] - \
(pow(E,l.FieldValues[2])*pow(1 - \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*l.FieldValues[5]*l.\
DerivativeValues[3][1])/g.Parameters[0])) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*(pow(l.FieldValues[4],2)*(-4*pow(E,l.\
FieldValues[1])*g.Parameters[2]*l.VIEValues[0] + \
4*pow(E,l.FieldValues[1])*g.Parameters[3]*l.VIEValues[0]*l.FieldValues[9] + \
4*pow(E,l.FieldValues[1])*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*l.\
FieldValues[3] + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) - \
l.FieldValues[5]*(l.FieldValues[5]*(4*pow(E,l.FieldValues[1])*g.Parameters[2]*\
l.VIEValues[0] - \
4*pow(E,l.FieldValues[1])*g.Parameters[3]*l.VIEValues[0]*l.FieldValues[9] - \
4*pow(E,l.FieldValues[1])*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*l.\
FieldValues[3] - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) + \
4*pow(E,l.FieldValues[0])*(l.DerivativeValues[6][1] - (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[4][1])/g.Parameters[0])) + \
4*pow(E,l.FieldValues[0])*l.FieldValues[4]*(l.DerivativeValues[7][1] - (pow(1 \
- l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[5][1])/g.Parameters[0])))) \
+ (-(pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),4)*(pow(l.DerivativeValues[\
3][0],2) + pow(l.FieldValues[3] - (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])/g.Parameters[0],2))) - \
4*pow(E,2*l.FieldValues[0])*pow(sin(l.Point[1]),2)*(l.DerivativeValues[0][0]*(\
cot(l.Point[1]) + l.DerivativeValues[2][0]) - l.DerivativeValues[1][0] + \
l.VIEValues[0]*(-((pow(1 - \
l.Point[0],2)*l.DerivativeValues[1][1])/g.Parameters[0]) + (pow(1 - \
l.Point[0],2)*l.DerivativeValues[0][2]*(1 + (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[2][1])/g.Parameters[0]))/g.\
Parameters[0] - (l.VIEValues[0]*(-2*pow(1 - \
l.Point[0],3)*l.DerivativeValues[1][1] + pow(1 - \
l.Point[0],4)*l.DerivativeValues[1][2]))/pow(g.Parameters[0],2))))/(4.*pow(E,\
2*l.FieldValues[0]));});\\ndescriptor.SetContinuousEquation(1, 1, [](const \
auto& l, const auto& g) {return \
l.DerivativeValues[1][1];});\\ndescriptor.SetContinuousEquation(1, 2, \
[](const auto& l, const auto& g) {return \
l.FieldValues[1];});\\ndescriptor.SetContinuousEquation(1, 3, [](const auto& \
l, const auto& g) {return l.FieldValues[1] - \
l.FieldValues[2];});\\ndescriptor.SetContinuousEquation(1, 4, [](const auto& \
l, const auto& g) {return l.FieldValues[1] - \
l.FieldValues[2];});\\ndescriptor.SetContinuousEquation(2, 0, [](const auto& \
l, const auto& g) {return \
(pow(g.Parameters[1],2)*(2*pow(l.FieldValues[8],2)*(pow(E,2*l.FieldValues[0]) \
+ pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*pow(l.FieldValues[3],2)) + \
4*l.FieldValues[8]*sin(l.Point[1])*(-(pow(E,l.FieldValues[0] + \
2*(l.FieldValues[1] + \
l.FieldValues[2]))*g.Parameters[3]*pow(l.FieldValues[6],2)*pow(l.VIEValues[0],\
2)*pow(sin(l.Point[1]),2)*l.FieldValues[3]) - pow(E,l.FieldValues[0] + \
2*(l.FieldValues[1] + \
l.FieldValues[2]))*g.Parameters[3]*pow(l.FieldValues[7],2)*pow(l.VIEValues[0],\
2)*pow(sin(l.Point[1]),2)*l.FieldValues[3] + 2*pow(E,2*l.FieldValues[0] + \
2*l.FieldValues[1] + \
l.FieldValues[2])*g.Parameters[3]*l.FieldValues[7]*pow(l.VIEValues[0],2)*sin(\
l.Point[1])*l.FieldValues[4] - pow(E,l.FieldValues[0] + 2*(l.FieldValues[1] + \
l.FieldValues[2]))*g.Parameters[3]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),\
2)*l.FieldValues[3]*pow(l.FieldValues[4],2) - 2*pow(E,2*l.FieldValues[0] + \
2*l.FieldValues[1] + \
l.FieldValues[2])*g.Parameters[3]*l.FieldValues[6]*pow(l.VIEValues[0],2)*sin(\
l.Point[1])*l.FieldValues[5] - pow(E,l.FieldValues[0] + 2*(l.FieldValues[1] + \
l.FieldValues[2]))*g.Parameters[3]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),\
2)*l.FieldValues[3]*pow(l.FieldValues[5],2) + \
pow(E,2*l.FieldValues[0])*cos(l.Point[1])*l.DerivativeValues[8][0] + \
pow(E,2*l.FieldValues[2])*cos(l.Point[1])*pow(sin(l.Point[1]),2)*pow(l.\
FieldValues[3],2)*l.DerivativeValues[8][0] + \
pow(E,2*l.FieldValues[2])*cos(l.Point[1])*sin(l.Point[1])*l.FieldValues[3]*l.\
DerivativeValues[9][0] + (pow(E,2*l.FieldValues[0])*pow(1 - \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*l.DerivativeValues[8][1])/g.\
Parameters[0] + (pow(E,2*l.FieldValues[2])*pow(1 - \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),3)*pow(l.FieldValues[3],2)*l.\
DerivativeValues[8][1])/g.Parameters[0] + (pow(E,2*l.FieldValues[2])*pow(1 - \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),2)*l.FieldValues[3]*l.\
DerivativeValues[9][1])/g.Parameters[0]) + \
sin(l.Point[1])*(-(pow(E,l.FieldValues[0] + l.FieldValues[1] + \
2*l.FieldValues[2])*pow(l.FieldValues[6],2)*l.VIEValues[0]*sin(l.Point[1])*(-\
4*pow(E,l.FieldValues[1])*g.Parameters[2]*l.VIEValues[0] + \
4*pow(E,l.FieldValues[1])*g.Parameters[3]*l.VIEValues[0]*l.FieldValues[9] + \
4*pow(E,l.FieldValues[1])*g.Parameters[4]*l.FieldValues[3] + \
3*pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0])) - \
pow(E,l.FieldValues[0] + l.FieldValues[1] + \
2*l.FieldValues[2])*pow(l.FieldValues[7],2)*l.VIEValues[0]*sin(l.Point[1])*(-\
4*pow(E,l.FieldValues[1])*g.Parameters[2]*l.VIEValues[0] + \
4*pow(E,l.FieldValues[1])*g.Parameters[3]*l.VIEValues[0]*l.FieldValues[9] + \
4*pow(E,l.FieldValues[1])*g.Parameters[4]*l.FieldValues[3] + \
3*pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) + \
2*pow(E,l.FieldValues[0] + l.FieldValues[1] + \
l.FieldValues[2])*l.FieldValues[6]*l.VIEValues[0]*(-3*pow(E,2*l.FieldValues[2]\
)*pow(sin(l.Point[1]),2)*l.FieldValues[3]*l.FieldValues[4] - \
4*pow(E,l.FieldValues[0] + l.FieldValues[1])*g.Parameters[4]*l.FieldValues[5] \
+ pow(E,l.FieldValues[2])*sin(l.Point[1])*(2*pow(E,l.FieldValues[0])*l.\
DerivativeValues[5][0] + (2*pow(E,l.FieldValues[0])*pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[7][0])/g.Parameters[0] + \
(3*pow(E,l.FieldValues[2])*pow(1 - \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*l.FieldValues[4]*l.\
DerivativeValues[3][1])/g.Parameters[0])) + 2*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
l.FieldValues[2])*l.FieldValues[7]*l.VIEValues[0]*(4*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*g.Parameters[4]*l.FieldValues[4] - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*(3*pow(E,l.FieldValues[2])*sin(l.\
Point[1])*l.FieldValues[3]*l.FieldValues[5] + \
2*pow(E,l.FieldValues[0])*l.DerivativeValues[4][0] + \
(2*pow(E,l.FieldValues[0])*pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[6][0])/g.Parameters[0] - \
(3*pow(E,l.FieldValues[2])*pow(1 - \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*l.FieldValues[5]*l.\
DerivativeValues[3][1])/g.Parameters[0])) + \
sin(l.Point[1])*(pow(E,l.FieldValues[0] + l.FieldValues[1] + \
2*l.FieldValues[2])*l.VIEValues[0]*pow(l.FieldValues[4],2)*(4*pow(E,l.\
FieldValues[1])*g.Parameters[2]*l.VIEValues[0] - \
4*pow(E,l.FieldValues[1])*g.Parameters[3]*l.VIEValues[0]*l.FieldValues[9] - \
4*pow(E,l.FieldValues[1])*g.Parameters[4]*l.FieldValues[3] + \
3*pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) + \
pow(E,l.FieldValues[0] + l.FieldValues[1] + \
2*l.FieldValues[2])*l.VIEValues[0]*pow(l.FieldValues[5],2)*(4*pow(E,l.\
FieldValues[1])*g.Parameters[2]*l.VIEValues[0] - \
4*pow(E,l.FieldValues[1])*g.Parameters[3]*l.VIEValues[0]*l.FieldValues[9] - \
4*pow(E,l.FieldValues[1])*g.Parameters[4]*l.FieldValues[3] + \
3*pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) + \
2*((pow(E,2*l.FieldValues[0]) + \
pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*pow(l.FieldValues[3],2))*pow(\
l.DerivativeValues[8][0],2) + \
2*pow(E,2*l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[3]*l.\
DerivativeValues[8][0]*l.DerivativeValues[9][0] + \
pow(E,2*l.FieldValues[2])*pow(l.DerivativeValues[9][0],2) + \
pow(l.VIEValues[0],2)*((pow(1 - l.Point[0],4)*(pow(E,2*l.FieldValues[0]) + \
pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*pow(l.FieldValues[3],2))*pow(\
l.DerivativeValues[8][1],2))/pow(g.Parameters[0],2) + \
(2*pow(E,2*l.FieldValues[2])*pow(1 - \
l.Point[0],4)*sin(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[8][1]*l.\
DerivativeValues[9][1])/pow(g.Parameters[0],2) + \
(pow(E,2*l.FieldValues[2])*pow(1 - \
l.Point[0],4)*pow(l.DerivativeValues[9][1],2))/pow(g.Parameters[0],2))) + \
4*pow(E,2*l.FieldValues[0] + l.FieldValues[1] + \
2*l.FieldValues[2])*l.VIEValues[0]*l.FieldValues[5]*(-l.DerivativeValues[6][1]\
 + (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[4][1])/g.Parameters[0]) - \
4*pow(E,2*l.FieldValues[0] + l.FieldValues[1] + \
2*l.FieldValues[2])*l.VIEValues[0]*l.FieldValues[4]*(-l.DerivativeValues[7][1]\
 + (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[5][1])/g.Parameters[0])))))/(\
2.*pow(E,2*(l.FieldValues[0] + l.FieldValues[2]))) + \
(pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),4)*(pow(l.DerivativeValues[3][\
0],2) + pow(l.FieldValues[3] - (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])/g.Parameters[0],2)) + \
2*pow(E,2*l.FieldValues[0])*sin(l.Point[1])*(2*cos(l.Point[1])*l.\
DerivativeValues[2][0] + l.DerivativeValues[0][0]*(cos(l.Point[1]) + \
sin(l.Point[1])*l.DerivativeValues[2][0]) + \
sin(l.Point[1])*(pow(l.DerivativeValues[2][0],2) + l.DerivativeValues[2][2] + \
l.VIEValues[0]*((pow(1 - l.Point[0],2)*l.DerivativeValues[0][2]*(1 + (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[2][1])/g.Parameters[0]))/g.\
Parameters[0] + (pow(1 - l.Point[0],2)*l.DerivativeValues[2][1]*(3 + (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[2][1])/g.Parameters[0]))/g.\
Parameters[0] + (l.VIEValues[0]*(-2*pow(1 - \
l.Point[0],3)*l.DerivativeValues[2][1] + pow(1 - \
l.Point[0],4)*l.DerivativeValues[2][3]))/pow(g.Parameters[0],2)))))/(2.*pow(E,\
2*l.FieldValues[0]));});\\ndescriptor.SetContinuousEquation(2, 1, [](const \
auto& l, const auto& g) {return \
l.DerivativeValues[2][1];});\\ndescriptor.SetContinuousEquation(2, 2, \
[](const auto& l, const auto& g) {return \
l.FieldValues[2];});\\ndescriptor.SetContinuousEquation(2, 3, [](const auto& \
l, const auto& g) {return \
l.DerivativeValues[2][0];});\\ndescriptor.SetContinuousEquation(2, 4, \
[](const auto& l, const auto& g) {return \
l.DerivativeValues[2][0];});\\ndescriptor.SetContinuousEquation(3, 0, \
[](const auto& l, const auto& g) {return \
(2*pow(g.Parameters[1],2)*(-2*pow(l.FieldValues[8],2)*l.FieldValues[3] + \
2*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[4]*l.VIEValues[0]*pow(l.FieldValues[4],2) + \
pow(E,l.FieldValues[0] + l.FieldValues[1] + \
l.FieldValues[2])*cos(l.Point[1])*l.VIEValues[0]*pow(l.FieldValues[4],2) + \
2*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[3]*l.FieldValues[8]*pow(l.VIEValues[0],2)*\
sin(l.Point[1])*pow(l.FieldValues[4],2) + 2*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[4]*l.VIEValues[0]*pow(l.FieldValues[5],2) + \
pow(E,l.FieldValues[0] + l.FieldValues[1] + \
l.FieldValues[2])*cos(l.Point[1])*l.VIEValues[0]*pow(l.FieldValues[5],2) + \
2*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[3]*l.FieldValues[8]*pow(l.VIEValues[0],2)*\
sin(l.Point[1])*pow(l.FieldValues[5],2) - \
2*l.FieldValues[8]*sin(2*l.Point[1])*l.FieldValues[3]*l.DerivativeValues[8][0]\
 - l.FieldValues[3]*pow(l.DerivativeValues[8][0],2) + \
cos(2*l.Point[1])*l.FieldValues[3]*pow(l.DerivativeValues[8][0],2) - \
pow(E,l.FieldValues[0] + l.FieldValues[1] + \
l.FieldValues[2])*l.VIEValues[0]*sin(l.Point[1])*pow(l.FieldValues[4],2)*l.\
DerivativeValues[0][0] - pow(E,l.FieldValues[0] + l.FieldValues[1] + \
l.FieldValues[2])*l.VIEValues[0]*sin(l.Point[1])*pow(l.FieldValues[5],2)*l.\
DerivativeValues[0][0] + pow(E,l.FieldValues[0] + l.FieldValues[1] + \
l.FieldValues[2])*l.VIEValues[0]*sin(l.Point[1])*pow(l.FieldValues[4],2)*l.\
DerivativeValues[2][0] + pow(E,l.FieldValues[0] + l.FieldValues[1] + \
l.FieldValues[2])*l.VIEValues[0]*sin(l.Point[1])*pow(l.FieldValues[5],2)*l.\
DerivativeValues[2][0] + pow(E,l.FieldValues[0] + \
l.FieldValues[1])*pow(l.FieldValues[6],2)*l.VIEValues[0]*(2*pow(E,l.\
FieldValues[1])*g.Parameters[4] - pow(E,l.FieldValues[2])*cos(l.Point[1]) + \
2*pow(E,l.FieldValues[1])*g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(\
l.Point[1]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[0][0] - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[2][0]) + \
pow(E,l.FieldValues[0] + \
l.FieldValues[1])*pow(l.FieldValues[7],2)*l.VIEValues[0]*(2*pow(E,l.\
FieldValues[1])*g.Parameters[4] - pow(E,l.FieldValues[2])*cos(l.Point[1]) + \
2*pow(E,l.FieldValues[1])*g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(\
l.Point[1]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[0][0] - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[2][0]) - \
2*l.FieldValues[8]*cos(l.Point[1])*l.DerivativeValues[9][0] - \
2*sin(l.Point[1])*l.DerivativeValues[8][0]*l.DerivativeValues[9][0] - \
(2*pow(1 - \
l.Point[0],2)*l.FieldValues[8]*l.VIEValues[0]*l.FieldValues[3]*l.\
DerivativeValues[8][1])/g.Parameters[0] + (2*pow(1 - \
l.Point[0],2)*l.FieldValues[8]*cos(2*l.Point[1])*l.VIEValues[0]*l.FieldValues[\
3]*l.DerivativeValues[8][1])/g.Parameters[0] - (pow(1 - \
l.Point[0],4)*pow(l.VIEValues[0],2)*l.FieldValues[3]*pow(l.DerivativeValues[8]\
[1],2))/pow(g.Parameters[0],2) + (pow(1 - \
l.Point[0],4)*cos(2*l.Point[1])*pow(l.VIEValues[0],2)*l.FieldValues[3]*pow(l.\
DerivativeValues[8][1],2))/pow(g.Parameters[0],2) + 2*pow(E,l.FieldValues[1] \
+ l.FieldValues[2])*l.FieldValues[6]*l.VIEValues[0]*sin(l.Point[1])*(-2*pow(E,\
l.FieldValues[1])*(g.Parameters[2]*l.VIEValues[0] - \
g.Parameters[3]*l.VIEValues[0]*l.FieldValues[9] - (g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*l.\
FieldValues[3])*l.FieldValues[5] - \
pow(E,l.FieldValues[0])*l.FieldValues[4]*(-1 + (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[0][2])/g.Parameters[0] - \
(pow(1 - l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[2][1])/g.Parameters[\
0])) - 2*pow(E,l.FieldValues[1] + \
l.FieldValues[2])*l.FieldValues[7]*l.VIEValues[0]*sin(l.Point[1])*(-2*pow(E,l.\
FieldValues[1])*(g.Parameters[2]*l.VIEValues[0] - \
g.Parameters[3]*l.VIEValues[0]*l.FieldValues[9] - (g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*l.\
FieldValues[3])*l.FieldValues[4] + \
pow(E,l.FieldValues[0])*l.FieldValues[5]*(-1 + (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[0][2])/g.Parameters[0] - \
(pow(1 - l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[2][1])/g.Parameters[\
0])) - (2*pow(1 - \
l.Point[0],2)*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1])*l.\
DerivativeValues[9][1])/g.Parameters[0] - (2*pow(1 - \
l.Point[0],4)*pow(l.VIEValues[0],2)*sin(l.Point[1])*l.DerivativeValues[8][1]*\
l.DerivativeValues[9][1])/pow(g.Parameters[0],2)))/pow(E,2*l.FieldValues[2]) \
+ sin(l.Point[1])*(3*cos(l.Point[1])*l.DerivativeValues[3][0] + \
sin(l.Point[1])*((-l.DerivativeValues[0][0] + \
3*l.DerivativeValues[2][0])*l.DerivativeValues[3][0] + \
l.DerivativeValues[3][2] + (-2 + (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[0][2])/g.Parameters[0] - \
(3*pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[2][1])/g.Parameters[0])*(l.\
FieldValues[3] - (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])/g.Parameters[0]) + \
(pow(l.VIEValues[0],2)*(-2*pow(1 - l.Point[0],3)*l.DerivativeValues[3][1] + \
pow(1 - l.Point[0],4)*l.DerivativeValues[3][3]))/pow(g.Parameters[0],2)));});\
\\ndescriptor.SetContinuousEquation(3, 1, [](const auto& l, const auto& g) \
{return l.FieldValues[3];});\\ndescriptor.SetContinuousEquation(3, 2, \
[](const auto& l, const auto& g) {return \
l.FieldValues[3];});\\ndescriptor.SetContinuousEquation(3, 3, [](const auto& \
l, const auto& g) {return \
l.DerivativeValues[3][0];});\\ndescriptor.SetContinuousEquation(3, 4, \
[](const auto& l, const auto& g) {return \
l.DerivativeValues[3][0];});\\ndescriptor.SetContinuousEquation(4, 0, \
[](const auto& l, const auto& g) {return \
-0.5*(cos(l.Point[1])*l.FieldValues[6]) + \
pow(E,l.FieldValues[1])*((g.Parameters[4]*l.FieldValues[6])/pow(E,l.\
FieldValues[2]) + \
g.Parameters[5]*l.VIEValues[0]*sin(l.Point[1])*l.FieldValues[4] + \
(sin(l.Point[1])*(g.Parameters[2]*l.VIEValues[0] - \
g.Parameters[4]*l.FieldValues[3])*l.FieldValues[5])/pow(E,l.FieldValues[0])) \
+ pow(E,l.FieldValues[1])*g.Parameters[3]*l.VIEValues[0]*sin(l.Point[1])*((l.\
FieldValues[8]*l.FieldValues[6])/pow(E,l.FieldValues[2]) - ((l.FieldValues[9] \
+ l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3])*l.FieldValues[5])/pow(E,\
l.FieldValues[0])) + (pow(E,-l.FieldValues[0] + \
l.FieldValues[2])*pow(sin(l.Point[1]),2)*(l.FieldValues[5]*l.DerivativeValues[\
3][0] + l.FieldValues[7]*(-l.FieldValues[3] + (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])/g.Parameters[0])))/4. \
+ sin(l.Point[1])*(l.FieldValues[4] - \
(l.FieldValues[6]*(l.DerivativeValues[0][0] + l.DerivativeValues[1][3] + \
l.DerivativeValues[2][0]))/2. - l.DerivativeValues[6][1] + \
(l.VIEValues[0]*l.FieldValues[4]*((pow(1 - \
l.Point[0],2)*l.DerivativeValues[0][2])/g.Parameters[0] + (pow(1 - \
l.Point[0],2)*l.DerivativeValues[1][1])/g.Parameters[0] + (pow(1 - \
l.Point[0],2)*l.DerivativeValues[2][1])/g.Parameters[0]))/2. + (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[4][1])/g.Parameters[0]);});\\\
ndescriptor.SetContinuousEquation(4, 1, [](const auto& l, const auto& g) \
{return l.DerivativeValues[4][1];});\\ndescriptor.SetContinuousEquation(4, 2, \
[](const auto& l, const auto& g) {return \
l.FieldValues[4];});\\ndescriptor.SetContinuousEquation(4, 3, [](const auto& \
l, const auto& g) {return \
l.FieldValues[4];});\\ndescriptor.SetContinuousEquation(4, 4, [](const auto& \
l, const auto& g) {return \
l.DerivativeValues[4][0];});\\ndescriptor.SetContinuousEquation(5, 0, \
[](const auto& l, const auto& g) {return \
-0.5*(cos(l.Point[1])*l.FieldValues[7]) - \
pow(E,l.FieldValues[1])*g.Parameters[3]*l.VIEValues[0]*sin(l.Point[1])*(-((l.\
FieldValues[8]*l.FieldValues[7])/pow(E,l.FieldValues[2])) - \
((l.FieldValues[9] + \
l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3])*l.FieldValues[4])/pow(E,l.\
FieldValues[0])) + \
pow(E,l.FieldValues[1])*((g.Parameters[4]*l.FieldValues[7])/pow(E,l.\
FieldValues[2]) - (sin(l.Point[1])*(g.Parameters[2]*l.VIEValues[0] - \
g.Parameters[4]*l.FieldValues[3])*l.FieldValues[4])/pow(E,l.FieldValues[0]) - \
g.Parameters[5]*l.VIEValues[0]*sin(l.Point[1])*l.FieldValues[5]) - \
(pow(E,-l.FieldValues[0] + \
l.FieldValues[2])*pow(sin(l.Point[1]),2)*(l.FieldValues[4]*l.DerivativeValues[\
3][0] + l.FieldValues[6]*(-l.FieldValues[3] + (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])/g.Parameters[0])))/4. \
+ sin(l.Point[1])*(l.FieldValues[5] - \
(l.FieldValues[7]*(l.DerivativeValues[0][0] + l.DerivativeValues[1][3] + \
l.DerivativeValues[2][0]))/2. - l.DerivativeValues[7][1] + \
(l.VIEValues[0]*((pow(1 - \
l.Point[0],2)*l.FieldValues[5]*l.DerivativeValues[0][2])/g.Parameters[0] + \
(pow(1 - l.Point[0],2)*l.FieldValues[5]*l.DerivativeValues[1][1])/g.\
Parameters[0] + (pow(1 - \
l.Point[0],2)*l.FieldValues[5]*l.DerivativeValues[2][1])/g.Parameters[0]))/2. \
+ (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[5][1])/g.Parameters[0]);});\\\
ndescriptor.SetContinuousEquation(5, 1, [](const auto& l, const auto& g) \
{return l.DerivativeValues[5][1];});\\ndescriptor.SetContinuousEquation(5, 2, \
[](const auto& l, const auto& g) {return \
l.FieldValues[5];});\\ndescriptor.SetContinuousEquation(5, 3, [](const auto& \
l, const auto& g) {return \
l.FieldValues[5];});\\ndescriptor.SetContinuousEquation(5, 4, [](const auto& \
l, const auto& g) {return \
l.DerivativeValues[5][0];});\\ndescriptor.SetContinuousEquation(6, 0, \
[](const auto& l, const auto& g) {return \
(cos(l.Point[1])*l.FieldValues[4])/2. + \
pow(E,l.FieldValues[1])*(-(g.Parameters[5]*l.FieldValues[6]*l.VIEValues[0]*\
sin(l.Point[1])) - \
(l.FieldValues[7]*sin(l.Point[1])*(g.Parameters[2]*l.VIEValues[0] - \
g.Parameters[4]*l.FieldValues[3]))/pow(E,l.FieldValues[0]) + \
(g.Parameters[4]*l.FieldValues[4])/pow(E,l.FieldValues[2])) + \
pow(E,l.FieldValues[1])*g.Parameters[3]*l.VIEValues[0]*sin(l.Point[1])*((l.\
FieldValues[7]*(l.FieldValues[9] + \
l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]))/pow(E,l.FieldValues[0]) + \
(l.FieldValues[8]*l.FieldValues[4])/pow(E,l.FieldValues[2])) + \
sin(l.Point[1])*(l.FieldValues[6] + \
(l.FieldValues[4]*(l.DerivativeValues[0][0] + l.DerivativeValues[1][3] + \
l.DerivativeValues[2][0]))/2. + l.DerivativeValues[4][0] + \
(l.FieldValues[6]*l.VIEValues[0]*((pow(1 - \
l.Point[0],2)*l.DerivativeValues[0][2])/g.Parameters[0] + (pow(1 - \
l.Point[0],2)*l.DerivativeValues[1][1])/g.Parameters[0] + (pow(1 - \
l.Point[0],2)*l.DerivativeValues[2][1])/g.Parameters[0]))/2. + (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[6][0])/g.Parameters[0]) + \
(pow(E,-l.FieldValues[0] + \
l.FieldValues[2])*pow(sin(l.Point[1]),2)*(l.FieldValues[7]*l.DerivativeValues[\
3][0] + l.FieldValues[5]*(l.FieldValues[3] - (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])/g.Parameters[0])))/4.;}\
);\\ndescriptor.SetContinuousEquation(6, 1, [](const auto& l, const auto& g) \
{return l.DerivativeValues[6][0];});\\ndescriptor.SetContinuousEquation(6, 2, \
[](const auto& l, const auto& g) {return \
l.FieldValues[6];});\\ndescriptor.SetContinuousEquation(6, 3, [](const auto& \
l, const auto& g) {return \
l.DerivativeValues[6][1];});\\ndescriptor.SetContinuousEquation(6, 4, \
[](const auto& l, const auto& g) {return \
l.FieldValues[6];});\\ndescriptor.SetContinuousEquation(7, 0, [](const auto& \
l, const auto& g) {return (cos(l.Point[1])*l.FieldValues[5])/2. + \
pow(E,l.FieldValues[1])*(g.Parameters[5]*l.FieldValues[7]*l.VIEValues[0]*sin(\
l.Point[1]) + \
(l.FieldValues[6]*sin(l.Point[1])*(g.Parameters[2]*l.VIEValues[0] - \
g.Parameters[4]*l.FieldValues[3]))/pow(E,l.FieldValues[0]) + \
(g.Parameters[4]*l.FieldValues[5])/pow(E,l.FieldValues[2])) - \
pow(E,l.FieldValues[1])*g.Parameters[3]*l.VIEValues[0]*sin(l.Point[1])*((l.\
FieldValues[6]*(l.FieldValues[9] + \
l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]))/pow(E,l.FieldValues[0]) - \
(l.FieldValues[8]*l.FieldValues[5])/pow(E,l.FieldValues[2])) + \
sin(l.Point[1])*(l.FieldValues[7] + \
(l.FieldValues[5]*(l.DerivativeValues[0][0] + l.DerivativeValues[1][3] + \
l.DerivativeValues[2][0]))/2. + l.DerivativeValues[5][0] + \
(l.FieldValues[7]*l.VIEValues[0]*((pow(1 - \
l.Point[0],2)*l.DerivativeValues[0][2])/g.Parameters[0] + (pow(1 - \
l.Point[0],2)*l.DerivativeValues[1][1])/g.Parameters[0] + (pow(1 - \
l.Point[0],2)*l.DerivativeValues[2][1])/g.Parameters[0]))/2. + (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[7][0])/g.Parameters[0]) - \
(pow(E,-l.FieldValues[0] + \
l.FieldValues[2])*pow(sin(l.Point[1]),2)*(l.FieldValues[6]*l.DerivativeValues[\
3][0] + l.FieldValues[4]*(l.FieldValues[3] - (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])/g.Parameters[0])))/4.;}\
);\\ndescriptor.SetContinuousEquation(7, 1, [](const auto& l, const auto& g) \
{return l.DerivativeValues[7][0];});\\ndescriptor.SetContinuousEquation(7, 2, \
[](const auto& l, const auto& g) {return \
l.FieldValues[7];});\\ndescriptor.SetContinuousEquation(7, 3, [](const auto& \
l, const auto& g) {return \
l.DerivativeValues[7][1];});\\ndescriptor.SetContinuousEquation(7, 4, \
[](const auto& l, const auto& g) {return \
l.FieldValues[7];});\\ndescriptor.SetContinuousEquation(8, 0, [](const auto& \
l, const auto& g) {return -4*pow(E,2*l.FieldValues[1] + \
l.FieldValues[2])*g.Parameters[3]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2)\
*(l.FieldValues[7]*l.FieldValues[4] - l.FieldValues[6]*l.FieldValues[5]) + \
l.FieldValues[8]*(-1 + \
cos(l.Point[1])*sin(l.Point[1])*(l.DerivativeValues[0][0] - \
l.DerivativeValues[2][0])) + pow(sin(l.Point[1]),2)*l.DerivativeValues[8][2] \
+ sin(l.Point[1])*(l.DerivativeValues[8][0]*(cos(l.Point[1]) + \
sin(l.Point[1])*(l.DerivativeValues[0][0] - l.DerivativeValues[2][0])) + \
(2*pow(1 - \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*l.DerivativeValues[8][1])/g.\
Parameters[0]) + l.VIEValues[0]*pow(sin(l.Point[1]),2)*(l.FieldValues[8] + \
(pow(1 - l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[8][1])/g.Parameters[\
0])*((pow(1 - l.Point[0],2)*l.DerivativeValues[0][2])/g.Parameters[0] - \
(pow(1 - l.Point[0],2)*l.DerivativeValues[2][1])/g.Parameters[0]) + \
pow(E,-2*l.FieldValues[0] + \
2*l.FieldValues[2])*pow(sin(l.Point[1]),3)*(l.FieldValues[8]*sin(l.Point[1])*\
pow(l.FieldValues[3],2) - \
l.FieldValues[8]*cos(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[3][0] - \
sin(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[8][0]*l.DerivativeValues[\
3][0] - l.DerivativeValues[9][0]*l.DerivativeValues[3][0] + (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*pow(l.FieldValues[3],2)*l.\
DerivativeValues[8][1])/g.Parameters[0] + (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.FieldValues[3]*l.DerivativeValues[9][1])/g.\
Parameters[0] - (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*(sin(l.Point[1])*l.FieldValues[3]*(l.FieldValues[\
8] + (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[8][1])/g.Parameters[0]) + \
(pow(1 - l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[9][1])/g.Parameters[\
0])*l.DerivativeValues[3][1])/g.Parameters[0]) + \
(pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2)*(-2*pow(1 - \
l.Point[0],3)*l.DerivativeValues[8][1] + pow(1 - \
l.Point[0],4)*l.DerivativeValues[8][3]))/pow(g.Parameters[0],2);});\\\
ndescriptor.SetContinuousEquation(8, 1, [](const auto& l, const auto& g) \
{return l.FieldValues[8];});\\ndescriptor.SetContinuousEquation(8, 2, \
[](const auto& l, const auto& g) {return \
l.FieldValues[8];});\\ndescriptor.SetContinuousEquation(8, 3, [](const auto& \
l, const auto& g) {return \
l.FieldValues[8];});\\ndescriptor.SetContinuousEquation(8, 4, [](const auto& \
l, const auto& g) {return \
l.FieldValues[8];});\\ndescriptor.SetContinuousEquation(9, 0, [](const auto& \
l, const auto& g) {return 4*pow(E,2*l.FieldValues[1] + \
l.FieldValues[2])*g.Parameters[3]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),3)\
*l.FieldValues[3]*(l.FieldValues[7]*l.FieldValues[4] - \
l.FieldValues[6]*l.FieldValues[5]) + 2*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[3]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),\
2)*(pow(l.FieldValues[6],2) + pow(l.FieldValues[7],2) + \
pow(l.FieldValues[4],2) + pow(l.FieldValues[5],2)) + \
sin(l.Point[1])*((l.FieldValues[8]*(sin(2*l.Point[1])*l.DerivativeValues[3][0]\
 + l.FieldValues[3]*(3 + cos(2*l.Point[1]) + \
2*sin(2*l.Point[1])*l.DerivativeValues[2][0] - \
4*sin(l.Point[1])*(cos(l.Point[1])*l.DerivativeValues[0][0] + \
l.VIEValues[0]*sin(l.Point[1])*((pow(1 - \
l.Point[0],2)*l.DerivativeValues[0][2])/g.Parameters[0] - (pow(1 - \
l.Point[0],2)*l.DerivativeValues[2][1])/g.Parameters[0])))) + \
2*((cos(l.Point[1]) + sin(l.Point[1])*(-l.DerivativeValues[0][0] + \
l.DerivativeValues[2][0]))*l.DerivativeValues[9][0] + \
sin(l.Point[1])*l.FieldValues[3]*(2*l.DerivativeValues[8][0]*(cos(l.Point[1]) \
+ sin(l.Point[1])*(-l.DerivativeValues[0][0] + l.DerivativeValues[2][0])) + \
(pow(1 - l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*l.DerivativeValues[8][1]\
*(1 - (2*pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[0][2])/g.Parameters[0] + \
(2*pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[2][1])/g.Parameters[0]))/g.\
Parameters[0]) + \
sin(l.Point[1])*(sin(l.Point[1])*l.DerivativeValues[8][0]*l.DerivativeValues[\
3][0] + (pow(1 - l.Point[0],2)*l.VIEValues[0]*(2 - (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[0][2])/g.Parameters[0] + \
(pow(1 - l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[2][1])/g.Parameters[\
0])*l.DerivativeValues[9][1])/g.Parameters[0])))/2. + (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),2)*(l.FieldValues[8] + \
(pow(1 - l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[8][1])/g.Parameters[\
0])*l.DerivativeValues[3][1])/g.Parameters[0]) + pow(E,-2*l.FieldValues[0] + \
2*l.FieldValues[2])*pow(sin(l.Point[1]),4)*l.FieldValues[3]*(-(l.FieldValues[\
8]*sin(l.Point[1])*pow(l.FieldValues[3],2)) + \
l.FieldValues[8]*cos(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[3][0] + \
sin(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[8][0]*l.DerivativeValues[\
3][0] + l.DerivativeValues[9][0]*l.DerivativeValues[3][0] - (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*pow(l.FieldValues[3],2)*l.\
DerivativeValues[8][1])/g.Parameters[0] - (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.FieldValues[3]*l.DerivativeValues[9][1])/g.\
Parameters[0] + (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*(sin(l.Point[1])*l.FieldValues[3]*(l.FieldValues[\
8] + (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[8][1])/g.Parameters[0]) + \
(pow(1 - l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[9][1])/g.Parameters[\
0])*l.DerivativeValues[3][1])/g.Parameters[0]) + \
pow(sin(l.Point[1]),2)*(l.DerivativeValues[9][2] + \
(pow(l.VIEValues[0],2)*(-2*pow(1 - l.Point[0],3)*l.DerivativeValues[9][1] + \
pow(1 - l.Point[0],4)*l.DerivativeValues[9][3]))/pow(g.Parameters[0],2));});\\\
ndescriptor.SetContinuousEquation(9, 1, [](const auto& l, const auto& g) \
{return l.DerivativeValues[9][1];});\\ndescriptor.SetContinuousEquation(9, 2, \
[](const auto& l, const auto& g) {return \
l.FieldValues[9];});\\ndescriptor.SetContinuousEquation(9, 3, [](const auto& \
l, const auto& g) {return \
l.DerivativeValues[9][0];});\\ndescriptor.SetContinuousEquation(9, 4, \
[](const auto& l, const auto& g) {return \
l.DerivativeValues[9][0];});\\ndescriptor.SetJacobianComponent(0, 0, 0, 0, \
[](const auto& l, const auto& g) {return \
(pow(sin(l.Point[1]),2)*(4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(\
l.FieldValues[8],2)*pow(l.FieldValues[3],2) + \
2*pow(g.Parameters[0],2)*pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*pow(\
l.FieldValues[3],2) + \
4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[2]*pow(l.VIEValues[0],2)*pow(l.FieldValues[4]\
,2) - 4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] \
+ 2*l.FieldValues[1])*g.Parameters[3]*pow(l.VIEValues[0],2)*l.FieldValues[9]*\
pow(l.FieldValues[4],2) - \
4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[4]*l.VIEValues[0]*l.FieldValues[3]*pow(l.\
FieldValues[4],2) - \
4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[3]*l.FieldValues[8]*pow(l.VIEValues[0],2)*\
sin(l.Point[1])*l.FieldValues[3]*pow(l.FieldValues[4],2) + \
4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[2]*pow(l.VIEValues[0],2)*pow(l.FieldValues[5]\
,2) - 4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] \
+ 2*l.FieldValues[1])*g.Parameters[3]*pow(l.VIEValues[0],2)*l.FieldValues[9]*\
pow(l.FieldValues[5],2) - \
4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[4]*l.VIEValues[0]*l.FieldValues[3]*pow(l.\
FieldValues[5],2) - \
4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[3]*l.FieldValues[8]*pow(l.VIEValues[0],2)*\
sin(l.Point[1])*l.FieldValues[3]*pow(l.FieldValues[5],2) + \
8*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*l.FieldValues[8]*cos(l.Point[\
1])*sin(l.Point[1])*pow(l.FieldValues[3],2)*l.DerivativeValues[8][0] + \
4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(sin(l.Point[1]),2)*pow(l.\
FieldValues[3],2)*pow(l.DerivativeValues[8][0],2) + \
8*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*l.FieldValues[8]*cos(l.Point[\
1])*l.FieldValues[3]*l.DerivativeValues[9][0] + \
8*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*sin(l.Point[1])*l.FieldValues[\
3]*l.DerivativeValues[8][0]*l.DerivativeValues[9][0] + \
4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(l.DerivativeValues[9][0],\
2) + pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
l.FieldValues[2])*l.VIEValues[0]*sin(l.Point[1])*pow(l.FieldValues[4],2)*l.\
DerivativeValues[3][0] + \
pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
l.FieldValues[2])*l.VIEValues[0]*sin(l.Point[1])*pow(l.FieldValues[5],2)*l.\
DerivativeValues[3][0] + \
2*pow(g.Parameters[0],2)*pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*pow(\
l.DerivativeValues[3][0],2) + \
pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*pow(l.FieldValues[6],2)*l.VIEValues[0]*(-4*pow(E,l.\
FieldValues[1])*g.Parameters[4]*l.FieldValues[3] + \
4*pow(E,l.FieldValues[1])*l.VIEValues[0]*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]) - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) + \
pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*pow(l.FieldValues[7],2)*l.VIEValues[0]*(-4*pow(E,l.\
FieldValues[1])*g.Parameters[4]*l.FieldValues[3] + \
4*pow(E,l.FieldValues[1])*l.VIEValues[0]*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]) - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) + \
8*pow(g.Parameters[1],2)*g.Parameters[0]*l.FieldValues[8]*l.VIEValues[0]*pow(\
sin(l.Point[1]),2)*pow(l.FieldValues[3],2)*l.DerivativeValues[8][1] - \
16*pow(g.Parameters[1],2)*g.Parameters[0]*l.Point[0]*l.FieldValues[8]*l.\
VIEValues[0]*pow(sin(l.Point[1]),2)*pow(l.FieldValues[3],2)*l.\
DerivativeValues[8][1] + \
8*pow(g.Parameters[1],2)*g.Parameters[0]*pow(l.Point[0],2)*l.FieldValues[8]*l.\
VIEValues[0]*pow(sin(l.Point[1]),2)*pow(l.FieldValues[3],2)*l.\
DerivativeValues[8][1] + \
4*pow(g.Parameters[1],2)*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2)*pow(l.\
FieldValues[3],2)*pow(l.DerivativeValues[8][1],2) - \
16*pow(g.Parameters[1],2)*l.Point[0]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1])\
,2)*pow(l.FieldValues[3],2)*pow(l.DerivativeValues[8][1],2) + \
24*pow(g.Parameters[1],2)*pow(l.Point[0],2)*pow(l.VIEValues[0],2)*pow(sin(l.\
Point[1]),2)*pow(l.FieldValues[3],2)*pow(l.DerivativeValues[8][1],2) - \
16*pow(g.Parameters[1],2)*pow(l.Point[0],3)*pow(l.VIEValues[0],2)*pow(sin(l.\
Point[1]),2)*pow(l.FieldValues[3],2)*pow(l.DerivativeValues[8][1],2) + \
4*pow(g.Parameters[1],2)*pow(l.Point[0],4)*pow(l.VIEValues[0],2)*pow(sin(l.\
Point[1]),2)*pow(l.FieldValues[3],2)*pow(l.DerivativeValues[8][1],2) + \
8*pow(g.Parameters[1],2)*g.Parameters[0]*l.FieldValues[8]*l.VIEValues[0]*sin(\
l.Point[1])*l.FieldValues[3]*l.DerivativeValues[9][1] - \
16*pow(g.Parameters[1],2)*g.Parameters[0]*l.Point[0]*l.FieldValues[8]*l.\
VIEValues[0]*sin(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[9][1] + \
8*pow(g.Parameters[1],2)*g.Parameters[0]*pow(l.Point[0],2)*l.FieldValues[8]*l.\
VIEValues[0]*sin(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[9][1] + \
8*pow(g.Parameters[1],2)*pow(l.VIEValues[0],2)*sin(l.Point[1])*l.FieldValues[\
3]*l.DerivativeValues[8][1]*l.DerivativeValues[9][1] - \
32*pow(g.Parameters[1],2)*l.Point[0]*pow(l.VIEValues[0],2)*sin(l.Point[1])*l.\
FieldValues[3]*l.DerivativeValues[8][1]*l.DerivativeValues[9][1] + \
48*pow(g.Parameters[1],2)*pow(l.Point[0],2)*pow(l.VIEValues[0],2)*sin(l.Point[\
1])*l.FieldValues[3]*l.DerivativeValues[8][1]*l.DerivativeValues[9][1] - \
32*pow(g.Parameters[1],2)*pow(l.Point[0],3)*pow(l.VIEValues[0],2)*sin(l.Point[\
1])*l.FieldValues[3]*l.DerivativeValues[8][1]*l.DerivativeValues[9][1] + \
8*pow(g.Parameters[1],2)*pow(l.Point[0],4)*pow(l.VIEValues[0],2)*sin(l.Point[\
1])*l.FieldValues[3]*l.DerivativeValues[8][1]*l.DerivativeValues[9][1] + \
4*pow(g.Parameters[1],2)*pow(l.VIEValues[0],2)*pow(l.DerivativeValues[9][1],2)\
 - 16*pow(g.Parameters[1],2)*l.Point[0]*pow(l.VIEValues[0],2)*pow(l.\
DerivativeValues[9][1],2) + \
24*pow(g.Parameters[1],2)*pow(l.Point[0],2)*pow(l.VIEValues[0],2)*pow(l.\
DerivativeValues[9][1],2) - \
16*pow(g.Parameters[1],2)*pow(l.Point[0],3)*pow(l.VIEValues[0],2)*pow(l.\
DerivativeValues[9][1],2) + \
4*pow(g.Parameters[1],2)*pow(l.Point[0],4)*pow(l.VIEValues[0],2)*pow(l.\
DerivativeValues[9][1],2) - \
4*g.Parameters[0]*pow(E,2*l.FieldValues[2])*l.VIEValues[0]*pow(sin(l.Point[1])\
,2)*l.FieldValues[3]*l.DerivativeValues[3][1] + \
8*g.Parameters[0]*pow(E,2*l.FieldValues[2])*l.Point[0]*l.VIEValues[0]*pow(sin(\
l.Point[1]),2)*l.FieldValues[3]*l.DerivativeValues[3][1] - \
4*g.Parameters[0]*pow(E,2*l.FieldValues[2])*pow(l.Point[0],2)*l.VIEValues[0]*\
pow(sin(l.Point[1]),2)*l.FieldValues[3]*l.DerivativeValues[3][1] + \
2*pow(E,2*l.FieldValues[2])*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2)*pow(\
l.DerivativeValues[3][1],2) - \
8*pow(E,2*l.FieldValues[2])*l.Point[0]*pow(l.VIEValues[0],2)*pow(sin(l.Point[\
1]),2)*pow(l.DerivativeValues[3][1],2) + \
12*pow(E,2*l.FieldValues[2])*pow(l.Point[0],2)*pow(l.VIEValues[0],2)*pow(sin(\
l.Point[1]),2)*pow(l.DerivativeValues[3][1],2) - \
8*pow(E,2*l.FieldValues[2])*pow(l.Point[0],3)*pow(l.VIEValues[0],2)*pow(sin(l.\
Point[1]),2)*pow(l.DerivativeValues[3][1],2) + \
2*pow(E,2*l.FieldValues[2])*pow(l.Point[0],4)*pow(l.VIEValues[0],2)*pow(sin(l.\
Point[1]),2)*pow(l.DerivativeValues[3][1],2) - \
2*pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
l.FieldValues[2])*l.FieldValues[6]*l.VIEValues[0]*sin(l.Point[1])*l.\
FieldValues[4]*(g.Parameters[0]*l.FieldValues[3] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1]) - \
2*pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
l.FieldValues[2])*l.FieldValues[7]*l.VIEValues[0]*sin(l.Point[1])*l.\
FieldValues[5]*(g.Parameters[0]*l.FieldValues[3] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])))/(2.*pow(g.Parameters[\
0],2)*pow(E,2*l.FieldValues[0]));});\\ndescriptor.SetJacobianComponent(0, 1, \
0, 0, [](const auto& l, const auto& g) {return \
(pow(g.Parameters[1],2)*pow(E,-l.FieldValues[0] + l.FieldValues[1] - \
l.FieldValues[2])*l.VIEValues[0]*sin(l.Point[1])*(g.Parameters[0]*pow(E,l.\
FieldValues[2])*pow(l.FieldValues[6],2)*sin(l.Point[1])*(8*pow(E,l.\
FieldValues[1])*g.Parameters[4]*l.FieldValues[3] - \
8*pow(E,l.FieldValues[1])*l.VIEValues[0]*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) + \
g.Parameters[0]*pow(E,l.FieldValues[2])*pow(l.FieldValues[7],2)*sin(l.Point[1]\
)*(8*pow(E,l.FieldValues[1])*g.Parameters[4]*l.FieldValues[3] - \
8*pow(E,l.FieldValues[1])*l.VIEValues[0]*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) + \
2*l.FieldValues[6]*(g.Parameters[0]*pow(E,2*l.FieldValues[2])*pow(sin(l.Point[\
1]),2)*l.FieldValues[3]*l.FieldValues[4] + \
8*g.Parameters[0]*pow(E,l.FieldValues[0] + l.FieldValues[1])*(g.Parameters[4] \
+ g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*l.\
FieldValues[5] + 2*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[5][0] + \
pow(E,l.FieldValues[2])*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*(2*pow(E,l.FieldValues[0])*l.\
DerivativeValues[7][0] - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[4]*l.DerivativeValues[3]\
[1])) - 2*l.FieldValues[7]*(8*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*l.\
FieldValues[4] - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*(g.Parameters[0]*pow(E,l.FieldValues[\
2])*sin(l.Point[1])*l.FieldValues[3]*l.FieldValues[5] - \
2*g.Parameters[0]*pow(E,l.FieldValues[0])*l.DerivativeValues[4][0] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(2*pow(E,l.FieldValues[0])*l.DerivativeValues[6][\
0] + pow(E,l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[5]*l.\
DerivativeValues[3][1]))) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*(g.Parameters[0]*(8*pow(E,l.\
FieldValues[1])*g.Parameters[4]*l.FieldValues[3]*(pow(l.FieldValues[4],2) + \
pow(l.FieldValues[5],2)) - \
4*pow(E,l.FieldValues[0])*l.FieldValues[5]*l.DerivativeValues[6][1] + \
4*pow(E,l.FieldValues[0])*l.FieldValues[4]*l.DerivativeValues[7][1] - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*pow(l.FieldValues[4],2)*l.\
DerivativeValues[3][0] - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*pow(l.FieldValues[5],2)*l.\
DerivativeValues[3][0]) + \
l.VIEValues[0]*(-8*g.Parameters[0]*pow(E,l.FieldValues[1])*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3])*pow(l.\
FieldValues[4],2) + \
4*l.FieldValues[5]*(-2*g.Parameters[0]*pow(E,l.FieldValues[1])*(g.Parameters[\
2] - g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3])*l.\
FieldValues[5] + pow(E,l.FieldValues[0])*pow(-1 + \
l.Point[0],2)*l.DerivativeValues[4][1]) - 4*pow(E,l.FieldValues[0])*pow(-1 + \
l.Point[0],2)*l.FieldValues[4]*l.DerivativeValues[5][1]))))/(2.*g.Parameters[\
0]);});\\ndescriptor.SetJacobianComponent(0, 2, 0, 0, [](const auto& l, const \
auto& g) {return \
(4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,2*l.FieldValues[0])*\
pow(l.FieldValues[8],2) + \
8*pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,2*l.FieldValues[0])*l.\
FieldValues[8]*sin(l.Point[1])*(g.Parameters[0]*pow(E,2*l.FieldValues[1] + \
l.FieldValues[2])*g.Parameters[3]*l.FieldValues[7]*pow(l.VIEValues[0],2)*sin(\
l.Point[1])*l.FieldValues[4] - g.Parameters[0]*pow(E,2*l.FieldValues[1] + \
l.FieldValues[2])*g.Parameters[3]*l.FieldValues[6]*pow(l.VIEValues[0],2)*sin(\
l.Point[1])*l.FieldValues[5] + \
g.Parameters[0]*cos(l.Point[1])*l.DerivativeValues[8][0] + \
l.VIEValues[0]*sin(l.Point[1])*l.DerivativeValues[8][1] - \
2*l.Point[0]*l.VIEValues[0]*sin(l.Point[1])*l.DerivativeValues[8][1] + \
pow(l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*l.DerivativeValues[8][1]) + \
sin(l.Point[1])*(-2*pow(g.Parameters[0],2)*pow(E,4*l.FieldValues[2])*pow(sin(\
l.Point[1]),3)*pow(l.FieldValues[3],2) - \
8*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,2*l.FieldValues[0] + \
2*l.FieldValues[1] + \
l.FieldValues[2])*g.Parameters[4]*l.FieldValues[6]*l.VIEValues[0]*l.\
FieldValues[5] + \
4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,2*l.FieldValues[0])*sin(\
l.Point[1])*pow(l.DerivativeValues[8][0],2) + \
pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
3*l.FieldValues[2])*pow(l.FieldValues[6],2)*l.VIEValues[0]*pow(sin(l.Point[1])\
,2)*l.DerivativeValues[3][0] + \
pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
3*l.FieldValues[2])*pow(l.FieldValues[7],2)*l.VIEValues[0]*pow(sin(l.Point[1])\
,2)*l.DerivativeValues[3][0] - \
pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
3*l.FieldValues[2])*l.VIEValues[0]*pow(sin(l.Point[1]),2)*pow(l.FieldValues[4]\
,2)*l.DerivativeValues[3][0] - \
pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
3*l.FieldValues[2])*l.VIEValues[0]*pow(sin(l.Point[1]),2)*pow(l.FieldValues[5]\
,2)*l.DerivativeValues[3][0] - \
2*pow(g.Parameters[0],2)*pow(E,4*l.FieldValues[2])*pow(sin(l.Point[1]),3)*pow(\
l.DerivativeValues[3][0],2) + \
4*pow(g.Parameters[1],2)*pow(E,2*l.FieldValues[0])*pow(l.VIEValues[0],2)*sin(\
l.Point[1])*pow(l.DerivativeValues[8][1],2) - \
16*pow(g.Parameters[1],2)*pow(E,2*l.FieldValues[0])*l.Point[0]*pow(l.\
VIEValues[0],2)*sin(l.Point[1])*pow(l.DerivativeValues[8][1],2) + \
24*pow(g.Parameters[1],2)*pow(E,2*l.FieldValues[0])*pow(l.Point[0],2)*pow(l.\
VIEValues[0],2)*sin(l.Point[1])*pow(l.DerivativeValues[8][1],2) - \
16*pow(g.Parameters[1],2)*pow(E,2*l.FieldValues[0])*pow(l.Point[0],3)*pow(l.\
VIEValues[0],2)*sin(l.Point[1])*pow(l.DerivativeValues[8][1],2) + \
4*pow(g.Parameters[1],2)*pow(E,2*l.FieldValues[0])*pow(l.Point[0],4)*pow(l.\
VIEValues[0],2)*sin(l.Point[1])*pow(l.DerivativeValues[8][1],2) - \
2*pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
3*l.FieldValues[2])*l.FieldValues[6]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1])\
,2)*l.FieldValues[4]*l.DerivativeValues[3][1] + \
4*pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
3*l.FieldValues[2])*l.Point[0]*l.FieldValues[6]*pow(l.VIEValues[0],2)*pow(sin(\
l.Point[1]),2)*l.FieldValues[4]*l.DerivativeValues[3][1] - \
2*pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
3*l.FieldValues[2])*pow(l.Point[0],2)*l.FieldValues[6]*pow(l.VIEValues[0],2)*\
pow(sin(l.Point[1]),2)*l.FieldValues[4]*l.DerivativeValues[3][1] - \
2*pow(E,4*l.FieldValues[2])*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),3)*pow(\
l.DerivativeValues[3][1],2) + \
8*pow(E,4*l.FieldValues[2])*l.Point[0]*pow(l.VIEValues[0],2)*pow(sin(l.Point[\
1]),3)*pow(l.DerivativeValues[3][1],2) - \
12*pow(E,4*l.FieldValues[2])*pow(l.Point[0],2)*pow(l.VIEValues[0],2)*pow(sin(\
l.Point[1]),3)*pow(l.DerivativeValues[3][1],2) + \
8*pow(E,4*l.FieldValues[2])*pow(l.Point[0],3)*pow(l.VIEValues[0],2)*pow(sin(l.\
Point[1]),3)*pow(l.DerivativeValues[3][1],2) - \
2*pow(E,4*l.FieldValues[2])*pow(l.Point[0],4)*pow(l.VIEValues[0],2)*pow(sin(l.\
Point[1]),3)*pow(l.DerivativeValues[3][1],2) + \
2*g.Parameters[0]*pow(E,3*l.FieldValues[2])*l.VIEValues[0]*pow(sin(l.Point[1])\
,2)*l.FieldValues[3]*(pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,l.\
FieldValues[0] + l.FieldValues[1])*l.FieldValues[6]*l.FieldValues[4] + \
pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*l.FieldValues[7]*l.FieldValues[5] + \
2*pow(E,l.FieldValues[2])*pow(-1 + \
l.Point[0],2)*sin(l.Point[1])*l.DerivativeValues[3][1]) - \
2*pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
l.FieldValues[2])*l.FieldValues[7]*l.VIEValues[0]*(-4*g.Parameters[0]*pow(E,l.\
FieldValues[0] + l.FieldValues[1])*g.Parameters[4]*l.FieldValues[4] + \
pow(E,2*l.FieldValues[2])*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),2)*l.FieldValues[5]*l.\
DerivativeValues[3][1])))/(2.*pow(g.Parameters[0],2)*pow(E,2*(l.FieldValues[0]\
 + l.FieldValues[2])));});\\ndescriptor.SetJacobianComponent(0, 3, 0, 0, \
[](const auto& l, const auto& g) {return \
(pow(sin(l.Point[1]),2)*(2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*pow(l.FieldValues[6],2)*l.VIEValues[0]*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1])) + \
2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*pow(l.FieldValues[7],2)*l.VIEValues[0]*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1])) + \
pow(g.Parameters[1],2)*pow(E,l.FieldValues[0] + l.FieldValues[1] + \
l.FieldValues[2])*l.FieldValues[6]*l.VIEValues[0]*sin(l.Point[1])*l.\
FieldValues[4] + pow(g.Parameters[1],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
l.FieldValues[2])*l.FieldValues[7]*l.VIEValues[0]*sin(l.Point[1])*l.\
FieldValues[5] - \
(2*pow(g.Parameters[1],2)*(pow(g.Parameters[0],2)*pow(l.FieldValues[8],2)*l.\
FieldValues[3] - pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[4]*l.VIEValues[0]*(pow(l.FieldValues[4],2) + \
pow(l.FieldValues[5],2)) + \
pow(g.Parameters[0],2)*sin(l.Point[1])*l.DerivativeValues[8][0]*(sin(l.Point[\
1])*l.FieldValues[3]*l.DerivativeValues[8][0] + l.DerivativeValues[9][0]) + \
pow(-1 + l.Point[0],4)*pow(l.VIEValues[0],2)*sin(l.Point[1])*l.\
DerivativeValues[8][1]*(sin(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[8]\
[1] + l.DerivativeValues[9][1]) - \
g.Parameters[0]*l.FieldValues[8]*(g.Parameters[0]*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[3]*pow(l.VIEValues[0],2)*sin(l.Point[1])*(\
pow(l.FieldValues[4],2) + pow(l.FieldValues[5],2)) - \
g.Parameters[0]*cos(l.Point[1])*(2*sin(l.Point[1])*l.FieldValues[3]*l.\
DerivativeValues[8][0] + l.DerivativeValues[9][0]) - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*(2*sin(l.Point[1])*l.FieldValues[\
3]*l.DerivativeValues[8][1] + \
l.DerivativeValues[9][1]))))/pow(g.Parameters[0],2) - \
pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*(l.FieldValues[3] - (pow(-1 \
+ l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])/g.Parameters[0])))/\
pow(E,2*l.FieldValues[0]);});\\ndescriptor.SetJacobianComponent(0, 4, 0, 0, \
[](const auto& l, const auto& g) {return \
(pow(g.Parameters[1],2)*pow(E,-l.FieldValues[0] + l.FieldValues[1] - \
l.FieldValues[2])*l.VIEValues[0]*sin(l.Point[1])*(-4*g.Parameters[0]*pow(E,l.\
FieldValues[0] + l.FieldValues[1])*l.FieldValues[7]*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1])) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*(g.Parameters[0]*(4*pow(E,l.\
FieldValues[1])*g.Parameters[4]*l.FieldValues[3]*l.FieldValues[4] + \
2*pow(E,l.FieldValues[0])*l.DerivativeValues[7][1] - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[4]*l.DerivativeValues[3]\
[0]) + pow(E,l.FieldValues[2])*l.FieldValues[6]*sin(l.Point[1])*(g.Parameters[\
0]*l.FieldValues[3] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1]) - \
2*l.VIEValues[0]*(2*g.Parameters[0]*pow(E,l.FieldValues[1])*(g.Parameters[2] \
- g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3])*l.\
FieldValues[4] + pow(E,l.FieldValues[0])*pow(-1 + \
l.Point[0],2)*l.DerivativeValues[5][1]))))/g.Parameters[0];});\\ndescriptor.\
SetJacobianComponent(0, 5, 0, 0, [](const auto& l, const auto& g) {return \
(pow(g.Parameters[1],2)*pow(E,-l.FieldValues[0] + l.FieldValues[1] - \
l.FieldValues[2])*l.VIEValues[0]*sin(l.Point[1])*(4*g.Parameters[0]*pow(E,l.\
FieldValues[0] + l.FieldValues[1])*l.FieldValues[6]*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1])) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*(g.Parameters[0]*(4*pow(E,l.\
FieldValues[1])*g.Parameters[4]*l.FieldValues[3]*l.FieldValues[5] - \
2*pow(E,l.FieldValues[0])*l.DerivativeValues[6][1] - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[5]*l.DerivativeValues[3]\
[0]) + pow(E,l.FieldValues[2])*l.FieldValues[7]*sin(l.Point[1])*(g.Parameters[\
0]*l.FieldValues[3] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1]) + \
l.VIEValues[0]*(-4*g.Parameters[0]*pow(E,l.FieldValues[1])*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3])*l.\
FieldValues[5] + 2*pow(E,l.FieldValues[0])*pow(-1 + \
l.Point[0],2)*l.DerivativeValues[4][1]))))/g.Parameters[0];});\\ndescriptor.\
SetJacobianComponent(0, 6, 0, 0, [](const auto& l, const auto& g) {return \
-(pow(g.Parameters[1],2)*pow(E,-l.FieldValues[0] + l.FieldValues[1] - \
l.FieldValues[2])*l.VIEValues[0]*sin(l.Point[1])*(-4*pow(E,l.FieldValues[1])*\
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1])*(pow(E,l.\
FieldValues[2])*l.FieldValues[6]*sin(l.Point[1])*l.FieldValues[3] + \
pow(E,l.FieldValues[0])*l.FieldValues[5]) - \
pow(E,l.FieldValues[2])*l.FieldValues[6]*sin(l.Point[1])*(-4*pow(E,l.\
FieldValues[1])*l.VIEValues[0]*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9]) + \
4*pow(E,l.FieldValues[1])*g.Parameters[4]*l.FieldValues[3] + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) - \
(g.Parameters[0]*pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*l.\
FieldValues[3]*l.FieldValues[4] + 4*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*g.Parameters[4]*l.FieldValues[5] + \
2*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[5][0] + \
pow(E,l.FieldValues[2])*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*(2*pow(E,l.FieldValues[0])*l.\
DerivativeValues[7][0] - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[4]*l.DerivativeValues[3]\
[1]))/g.Parameters[0]));});\\ndescriptor.SetJacobianComponent(0, 7, 0, 0, \
[](const auto& l, const auto& g) {return \
(pow(g.Parameters[1],2)*pow(E,-l.FieldValues[0] + l.FieldValues[1] - \
l.FieldValues[2])*l.VIEValues[0]*sin(l.Point[1])*(-4*g.Parameters[0]*pow(E,l.\
FieldValues[0] + l.FieldValues[1])*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*l.\
FieldValues[4] + \
g.Parameters[0]*pow(E,l.FieldValues[2])*l.FieldValues[7]*sin(l.Point[1])*(4*\
pow(E,l.FieldValues[1])*g.Parameters[4]*l.FieldValues[3] - \
4*pow(E,l.FieldValues[1])*l.VIEValues[0]*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*(g.Parameters[0]*pow(E,l.FieldValues[\
2])*sin(l.Point[1])*l.FieldValues[3]*l.FieldValues[5] - \
2*g.Parameters[0]*pow(E,l.FieldValues[0])*l.DerivativeValues[4][0] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(2*pow(E,l.FieldValues[0])*l.DerivativeValues[6][\
0] + pow(E,l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[5]*l.\
DerivativeValues[3][1]))))/g.Parameters[0];});\\ndescriptor.\
SetJacobianComponent(0, 8, 0, 0, [](const auto& l, const auto& g) {return \
-0.5*(pow(g.Parameters[1],2)*(4*l.FieldValues[8]*(pow(E,2*l.FieldValues[0]) + \
pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*pow(l.FieldValues[3],2)) + \
4*sin(l.Point[1])*(-(pow(E,l.FieldValues[0] + 2*(l.FieldValues[1] + \
l.FieldValues[2]))*g.Parameters[3]*pow(l.FieldValues[6],2)*pow(l.VIEValues[0],\
2)*pow(sin(l.Point[1]),2)*l.FieldValues[3]) - pow(E,l.FieldValues[0] + \
2*(l.FieldValues[1] + \
l.FieldValues[2]))*g.Parameters[3]*pow(l.FieldValues[7],2)*pow(l.VIEValues[0],\
2)*pow(sin(l.Point[1]),2)*l.FieldValues[3] + 2*pow(E,2*l.FieldValues[0] + \
2*l.FieldValues[1] + \
l.FieldValues[2])*g.Parameters[3]*l.FieldValues[7]*pow(l.VIEValues[0],2)*sin(\
l.Point[1])*l.FieldValues[4] - pow(E,l.FieldValues[0] + 2*(l.FieldValues[1] + \
l.FieldValues[2]))*g.Parameters[3]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),\
2)*l.FieldValues[3]*pow(l.FieldValues[4],2) - 2*pow(E,2*l.FieldValues[0] + \
2*l.FieldValues[1] + \
l.FieldValues[2])*g.Parameters[3]*l.FieldValues[6]*pow(l.VIEValues[0],2)*sin(\
l.Point[1])*l.FieldValues[5] - pow(E,l.FieldValues[0] + 2*(l.FieldValues[1] + \
l.FieldValues[2]))*g.Parameters[3]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),\
2)*l.FieldValues[3]*pow(l.FieldValues[5],2) + \
pow(E,2*l.FieldValues[0])*cos(l.Point[1])*l.DerivativeValues[8][0] + \
pow(E,2*l.FieldValues[2])*cos(l.Point[1])*pow(sin(l.Point[1]),2)*pow(l.\
FieldValues[3],2)*l.DerivativeValues[8][0] + \
pow(E,2*l.FieldValues[2])*cos(l.Point[1])*sin(l.Point[1])*l.FieldValues[3]*l.\
DerivativeValues[9][0] + (pow(E,2*l.FieldValues[0])*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*l.DerivativeValues[8][1])/g.\
Parameters[0] + (pow(E,2*l.FieldValues[2])*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),3)*pow(l.FieldValues[3],2)*l.\
DerivativeValues[8][1])/g.Parameters[0] + (pow(E,2*l.FieldValues[2])*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),2)*l.FieldValues[3]*l.\
DerivativeValues[9][1])/g.Parameters[0])))/pow(E,2*(l.FieldValues[0] + \
l.FieldValues[2]));});\\ndescriptor.SetJacobianComponent(0, 9, 0, 0, [](const \
auto& l, const auto& g) {return \
2*pow(g.Parameters[1],2)*pow(E,-l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[3]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),\
2)*(pow(l.FieldValues[6],2) + pow(l.FieldValues[7],2) + \
pow(l.FieldValues[4],2) + \
pow(l.FieldValues[5],2));});\\ndescriptor.SetJacobianComponent(0, 0, 1, 0, \
[](const auto& l, const auto& g) {return sin(l.Point[1])*(cos(l.Point[1]) + \
sin(l.Point[1])*(2*l.DerivativeValues[0][0] + \
l.DerivativeValues[2][0]));});\\ndescriptor.SetJacobianComponent(0, 0, 2, 0, \
[](const auto& l, const auto& g) {return \
pow(sin(l.Point[1]),2);});\\ndescriptor.SetJacobianComponent(0, 0, 3, 0, \
[](const auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),2)*(2*g.Parameters[0] + (-1 \
+ l.Point[0])*l.VIEValues[0]*(2 + 2*(-1 + \
l.Point[0])*l.DerivativeValues[0][2] + (-1 + \
l.Point[0])*l.DerivativeValues[2][1])))/pow(g.Parameters[0],2);});\\\
ndescriptor.SetJacobianComponent(0, 0, 4, 0, [](const auto& l, const auto& g) \
{return (pow(-1 + \
l.Point[0],4)*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2))/pow(g.Parameters[\
0],2);});\\ndescriptor.SetJacobianComponent(0, 2, 1, 0, [](const auto& l, \
const auto& g) {return \
pow(sin(l.Point[1]),2)*l.DerivativeValues[0][0];});\\ndescriptor.\
SetJacobianComponent(0, 2, 2, 0, [](const auto& l, const auto& g) {return \
(pow(-1 + \
l.Point[0],4)*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2)*l.DerivativeValues[\
0][2])/pow(g.Parameters[0],2);});\\ndescriptor.SetJacobianComponent(0, 3, 1, \
0, [](const auto& l, const auto& g) {return -0.5*(pow(E,-2*l.FieldValues[0] + \
l.FieldValues[2])*pow(sin(l.Point[1]),3)*(-(pow(g.Parameters[1],2)*pow(E,l.\
FieldValues[0] + l.FieldValues[1])*pow(l.FieldValues[6],2)*l.VIEValues[0]) - \
pow(g.Parameters[1],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*pow(l.FieldValues[7],2)*l.VIEValues[0] + \
pow(g.Parameters[1],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*l.VIEValues[0]*pow(l.FieldValues[4],2) + \
pow(g.Parameters[1],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*l.VIEValues[0]*pow(l.FieldValues[5],2) + \
2*pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]));});\\\
ndescriptor.SetJacobianComponent(0, 3, 2, 0, [](const auto& l, const auto& g) \
{return -((pow(E,-2*l.FieldValues[0] + l.FieldValues[2])*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),3)*(-(g.Parameters[0]*pow(E,\
l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[3]) + \
l.VIEValues[0]*(pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,l.FieldValues[0] \
+ l.FieldValues[1])*l.FieldValues[6]*l.FieldValues[4] + \
pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*l.FieldValues[7]*l.FieldValues[5] + \
pow(E,l.FieldValues[2])*pow(-1 + \
l.Point[0],2)*sin(l.Point[1])*l.DerivativeValues[3][1])))/pow(g.Parameters[0],\
2));});\\ndescriptor.SetJacobianComponent(0, 4, 1, 0, [](const auto& l, const \
auto& g) {return \
-2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1])*l.FieldValues[7]*l.\
VIEValues[0]*pow(sin(l.Point[1]),2);});\\ndescriptor.SetJacobianComponent(0, \
4, 2, 0, [](const auto& l, const auto& g) {return \
(2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1])*pow(-1 + \
l.Point[0],2)*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2)*l.FieldValues[5])/\
g.Parameters[0];});\\ndescriptor.SetJacobianComponent(0, 5, 1, 0, [](const \
auto& l, const auto& g) {return \
2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1])*l.FieldValues[6]*l.VIEValues[\
0]*pow(sin(l.Point[1]),2);});\\ndescriptor.SetJacobianComponent(0, 5, 2, 0, \
[](const auto& l, const auto& g) {return \
(-2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1])*pow(-1 + \
l.Point[0],2)*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2)*l.FieldValues[4])/\
g.Parameters[0];});\\ndescriptor.SetJacobianComponent(0, 6, 1, 0, [](const \
auto& l, const auto& g) {return \
(-2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1])*pow(-1 + \
l.Point[0],2)*l.FieldValues[7]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2))/\
g.Parameters[0];});\\ndescriptor.SetJacobianComponent(0, 6, 2, 0, [](const \
auto& l, const auto& g) {return \
-2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1])*l.VIEValues[0]*pow(sin(l.\
Point[1]),2)*l.FieldValues[5];});\\ndescriptor.SetJacobianComponent(0, 7, 1, \
0, [](const auto& l, const auto& g) {return \
(2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1])*pow(-1 + \
l.Point[0],2)*l.FieldValues[6]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2))/\
g.Parameters[0];});\\ndescriptor.SetJacobianComponent(0, 7, 2, 0, [](const \
auto& l, const auto& g) {return \
2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1])*l.VIEValues[0]*pow(sin(l.\
Point[1]),2)*l.FieldValues[4];});\\ndescriptor.SetJacobianComponent(0, 8, 1, \
0, [](const auto& l, const auto& g) {return \
(-2*pow(g.Parameters[1],2)*sin(l.Point[1])*(l.FieldValues[8]*cos(l.Point[1])*(\
pow(E,2*l.FieldValues[0]) + \
pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*pow(l.FieldValues[3],2)) + \
sin(l.Point[1])*((pow(E,2*l.FieldValues[0]) + \
pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*pow(l.FieldValues[3],2))*l.\
DerivativeValues[8][0] + \
pow(E,2*l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[\
9][0])))/pow(E,2*(l.FieldValues[0] + \
l.FieldValues[2]));});\\ndescriptor.SetJacobianComponent(0, 8, 2, 0, [](const \
auto& l, const auto& g) {return (-2*pow(g.Parameters[1],2)*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),2)*(g.Parameters[0]*l.\
FieldValues[8]*(pow(E,2*l.FieldValues[0]) + \
pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*pow(l.FieldValues[3],2)) + \
pow(-1 + l.Point[0],2)*l.VIEValues[0]*((pow(E,2*l.FieldValues[0]) + \
pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*pow(l.FieldValues[3],2))*l.\
DerivativeValues[8][1] + \
pow(E,2*l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[\
9][1])))/(pow(g.Parameters[0],2)*pow(E,2*(l.FieldValues[0] + \
l.FieldValues[2])));});\\ndescriptor.SetJacobianComponent(0, 9, 1, 0, \
[](const auto& l, const auto& g) {return \
(-2*pow(g.Parameters[1],2)*pow(sin(l.Point[1]),2)*(l.FieldValues[8]*cos(l.\
Point[1])*l.FieldValues[3] + \
sin(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[8][0] + \
l.DerivativeValues[9][0]))/pow(E,2*l.FieldValues[0]);});\\ndescriptor.\
SetJacobianComponent(0, 9, 2, 0, [](const auto& l, const auto& g) {return \
(-2*pow(g.Parameters[1],2)*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),2)*(g.Parameters[0]*l.\
FieldValues[8]*sin(l.Point[1])*l.FieldValues[3] + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(sin(l.Point[1])*l.FieldValues[3]*l.\
DerivativeValues[8][1] + \
l.DerivativeValues[9][1])))/(pow(g.Parameters[0],2)*pow(E,2*l.FieldValues[0]))\
;});\\ndescriptor.SetJacobianComponent(0, 0, 3, 1, [](const auto& l, const \
auto& g) {return 1;});\\ndescriptor.SetJacobianComponent(0, 0, 0, 2, [](const \
auto& l, const auto& g) {return 1;});\\ndescriptor.SetJacobianComponent(0, 0, \
1, 3, [](const auto& l, const auto& g) {return \
1;});\\ndescriptor.SetJacobianComponent(0, 0, 1, 4, [](const auto& l, const \
auto& g) {return 1;});\\ndescriptor.SetJacobianComponent(1, 0, 0, 0, [](const \
auto& l, const auto& g) {return \
(pow(sin(l.Point[1]),2)*(pow(g.Parameters[0],2)*pow(E,2*l.FieldValues[2])*pow(\
sin(l.Point[1]),2)*pow(l.FieldValues[3],2) - \
4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[2]*pow(l.VIEValues[0],2)*pow(l.FieldValues[4]\
,2) + 4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] \
+ 2*l.FieldValues[1])*g.Parameters[3]*pow(l.VIEValues[0],2)*l.FieldValues[9]*\
pow(l.FieldValues[4],2) + \
4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[4]*l.VIEValues[0]*l.FieldValues[3]*pow(l.\
FieldValues[4],2) + \
4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[3]*l.FieldValues[8]*pow(l.VIEValues[0],2)*\
sin(l.Point[1])*l.FieldValues[3]*pow(l.FieldValues[4],2) - \
4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[2]*pow(l.VIEValues[0],2)*pow(l.FieldValues[5]\
,2) + 4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] \
+ 2*l.FieldValues[1])*g.Parameters[3]*pow(l.VIEValues[0],2)*l.FieldValues[9]*\
pow(l.FieldValues[5],2) + \
4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[4]*l.VIEValues[0]*l.FieldValues[3]*pow(l.\
FieldValues[5],2) + \
4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[3]*l.FieldValues[8]*pow(l.VIEValues[0],2)*\
sin(l.Point[1])*l.FieldValues[3]*pow(l.FieldValues[5],2) + \
pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
l.FieldValues[2])*l.VIEValues[0]*sin(l.Point[1])*pow(l.FieldValues[4],2)*l.\
DerivativeValues[3][0] + \
pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
l.FieldValues[2])*l.VIEValues[0]*sin(l.Point[1])*pow(l.FieldValues[5],2)*l.\
DerivativeValues[3][0] + \
pow(g.Parameters[0],2)*pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*pow(l.\
DerivativeValues[3][0],2) - \
pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*pow(l.FieldValues[6],2)*l.VIEValues[0]*(-4*pow(E,l.\
FieldValues[1])*g.Parameters[4]*l.FieldValues[3] + \
4*pow(E,l.FieldValues[1])*l.VIEValues[0]*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) - \
pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*pow(l.FieldValues[7],2)*l.VIEValues[0]*(-4*pow(E,l.\
FieldValues[1])*g.Parameters[4]*l.FieldValues[3] + \
4*pow(E,l.FieldValues[1])*l.VIEValues[0]*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) - \
2*g.Parameters[0]*pow(E,2*l.FieldValues[2])*l.VIEValues[0]*pow(sin(l.Point[1])\
,2)*l.FieldValues[3]*l.DerivativeValues[3][1] + \
4*g.Parameters[0]*pow(E,2*l.FieldValues[2])*l.Point[0]*l.VIEValues[0]*pow(sin(\
l.Point[1]),2)*l.FieldValues[3]*l.DerivativeValues[3][1] - \
2*g.Parameters[0]*pow(E,2*l.FieldValues[2])*pow(l.Point[0],2)*l.VIEValues[0]*\
pow(sin(l.Point[1]),2)*l.FieldValues[3]*l.DerivativeValues[3][1] + \
pow(E,2*l.FieldValues[2])*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2)*pow(l.\
DerivativeValues[3][1],2) - \
4*pow(E,2*l.FieldValues[2])*l.Point[0]*pow(l.VIEValues[0],2)*pow(sin(l.Point[\
1]),2)*pow(l.DerivativeValues[3][1],2) + \
6*pow(E,2*l.FieldValues[2])*pow(l.Point[0],2)*pow(l.VIEValues[0],2)*pow(sin(l.\
Point[1]),2)*pow(l.DerivativeValues[3][1],2) - \
4*pow(E,2*l.FieldValues[2])*pow(l.Point[0],3)*pow(l.VIEValues[0],2)*pow(sin(l.\
Point[1]),2)*pow(l.DerivativeValues[3][1],2) + \
pow(E,2*l.FieldValues[2])*pow(l.Point[0],4)*pow(l.VIEValues[0],2)*pow(sin(l.\
Point[1]),2)*pow(l.DerivativeValues[3][1],2) - \
2*pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
l.FieldValues[2])*l.FieldValues[6]*l.VIEValues[0]*sin(l.Point[1])*l.\
FieldValues[4]*(g.Parameters[0]*l.FieldValues[3] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1]) - \
2*pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
l.FieldValues[2])*l.FieldValues[7]*l.VIEValues[0]*sin(l.Point[1])*l.\
FieldValues[5]*(g.Parameters[0]*l.FieldValues[3] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])))/(2.*pow(g.Parameters[\
0],2)*pow(E,2*l.FieldValues[0]));});\\ndescriptor.SetJacobianComponent(1, 1, \
0, 0, [](const auto& l, const auto& g) {return \
-0.5*(pow(g.Parameters[1],2)*pow(E,-l.FieldValues[0] + l.FieldValues[1] - \
l.FieldValues[2])*l.VIEValues[0]*sin(l.Point[1])*(-(g.Parameters[0]*pow(E,l.\
FieldValues[2])*pow(l.FieldValues[6],2)*sin(l.Point[1])*(-8*pow(E,l.\
FieldValues[1])*g.Parameters[4]*l.FieldValues[3] + \
8*pow(E,l.FieldValues[1])*l.VIEValues[0]*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0])) - \
g.Parameters[0]*pow(E,l.FieldValues[2])*pow(l.FieldValues[7],2)*sin(l.Point[1]\
)*(-8*pow(E,l.FieldValues[1])*g.Parameters[4]*l.FieldValues[3] + \
8*pow(E,l.FieldValues[1])*l.VIEValues[0]*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) - \
2*l.FieldValues[6]*(g.Parameters[0]*pow(E,2*l.FieldValues[2])*pow(sin(l.Point[\
1]),2)*l.FieldValues[3]*l.FieldValues[4] + \
8*g.Parameters[0]*pow(E,l.FieldValues[0] + l.FieldValues[1])*(g.Parameters[4] \
+ g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*l.\
FieldValues[5] - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*(2*g.Parameters[0]*pow(E,l.\
FieldValues[0])*l.DerivativeValues[5][0] + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(2*pow(E,l.FieldValues[0])*l.DerivativeValues[7][\
0] + pow(E,l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[4]*l.\
DerivativeValues[3][1]))) + \
2*l.FieldValues[7]*(8*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*l.\
FieldValues[4] - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*(g.Parameters[0]*pow(E,l.FieldValues[\
2])*sin(l.Point[1])*l.FieldValues[3]*l.FieldValues[5] + \
2*g.Parameters[0]*pow(E,l.FieldValues[0])*l.DerivativeValues[4][0] + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(2*pow(E,l.FieldValues[0])*l.DerivativeValues[6][\
0] - pow(E,l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[5]*l.\
DerivativeValues[3][1]))) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*(g.Parameters[0]*(8*pow(E,l.\
FieldValues[1])*g.Parameters[4]*l.FieldValues[3]*(pow(l.FieldValues[4],2) + \
pow(l.FieldValues[5],2)) - \
4*pow(E,l.FieldValues[0])*l.FieldValues[5]*l.DerivativeValues[6][1] + \
4*pow(E,l.FieldValues[0])*l.FieldValues[4]*l.DerivativeValues[7][1] + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*pow(l.FieldValues[4],2)*l.\
DerivativeValues[3][0] + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*pow(l.FieldValues[5],2)*l.\
DerivativeValues[3][0]) + \
l.VIEValues[0]*(-8*g.Parameters[0]*pow(E,l.FieldValues[1])*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3])*pow(l.\
FieldValues[4],2) + \
4*l.FieldValues[5]*(-2*g.Parameters[0]*pow(E,l.FieldValues[1])*(g.Parameters[\
2] - g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3])*l.\
FieldValues[5] + pow(E,l.FieldValues[0])*pow(-1 + \
l.Point[0],2)*l.DerivativeValues[4][1]) - 4*pow(E,l.FieldValues[0])*pow(-1 + \
l.Point[0],2)*l.FieldValues[4]*l.DerivativeValues[5][1]))))/g.Parameters[0];})\
;\\ndescriptor.SetJacobianComponent(1, 2, 0, 0, [](const auto& l, const auto& \
g) {return -0.5*(pow(E,-2*l.FieldValues[0] - \
l.FieldValues[2])*sin(l.Point[1])*(pow(g.Parameters[0],2)*pow(E,3*l.\
FieldValues[2])*pow(sin(l.Point[1]),3)*pow(l.FieldValues[3],2) + \
8*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,2*(l.FieldValues[0] + \
l.FieldValues[1]))*g.Parameters[4]*l.FieldValues[6]*l.VIEValues[0]*l.\
FieldValues[5] + \
8*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,2*(l.FieldValues[0] + \
l.FieldValues[1]))*g.Parameters[3]*l.FieldValues[8]*l.FieldValues[6]*pow(l.\
VIEValues[0],2)*sin(l.Point[1])*l.FieldValues[5] - \
pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
2*l.FieldValues[2])*pow(l.FieldValues[6],2)*l.VIEValues[0]*pow(sin(l.Point[1])\
,2)*l.DerivativeValues[3][0] - \
pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
2*l.FieldValues[2])*pow(l.FieldValues[7],2)*l.VIEValues[0]*pow(sin(l.Point[1])\
,2)*l.DerivativeValues[3][0] + \
pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
2*l.FieldValues[2])*l.VIEValues[0]*pow(sin(l.Point[1]),2)*pow(l.FieldValues[4]\
,2)*l.DerivativeValues[3][0] + \
pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
2*l.FieldValues[2])*l.VIEValues[0]*pow(sin(l.Point[1]),2)*pow(l.FieldValues[5]\
,2)*l.DerivativeValues[3][0] + \
pow(g.Parameters[0],2)*pow(E,3*l.FieldValues[2])*pow(sin(l.Point[1]),3)*pow(l.\
DerivativeValues[3][0],2) + \
2*pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
2*l.FieldValues[2])*l.FieldValues[6]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1])\
,2)*l.FieldValues[4]*l.DerivativeValues[3][1] - \
4*pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
2*l.FieldValues[2])*l.Point[0]*l.FieldValues[6]*pow(l.VIEValues[0],2)*pow(sin(\
l.Point[1]),2)*l.FieldValues[4]*l.DerivativeValues[3][1] + \
2*pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
2*l.FieldValues[2])*pow(l.Point[0],2)*l.FieldValues[6]*pow(l.VIEValues[0],2)*\
pow(sin(l.Point[1]),2)*l.FieldValues[4]*l.DerivativeValues[3][1] + \
pow(E,3*l.FieldValues[2])*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),3)*pow(l.\
DerivativeValues[3][1],2) - \
4*pow(E,3*l.FieldValues[2])*l.Point[0]*pow(l.VIEValues[0],2)*pow(sin(l.Point[\
1]),3)*pow(l.DerivativeValues[3][1],2) + \
6*pow(E,3*l.FieldValues[2])*pow(l.Point[0],2)*pow(l.VIEValues[0],2)*pow(sin(l.\
Point[1]),3)*pow(l.DerivativeValues[3][1],2) - \
4*pow(E,3*l.FieldValues[2])*pow(l.Point[0],3)*pow(l.VIEValues[0],2)*pow(sin(l.\
Point[1]),3)*pow(l.DerivativeValues[3][1],2) + \
pow(E,3*l.FieldValues[2])*pow(l.Point[0],4)*pow(l.VIEValues[0],2)*pow(sin(l.\
Point[1]),3)*pow(l.DerivativeValues[3][1],2) - \
2*g.Parameters[0]*pow(E,2*l.FieldValues[2])*l.VIEValues[0]*pow(sin(l.Point[1])\
,2)*l.FieldValues[3]*(pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,l.\
FieldValues[0] + l.FieldValues[1])*l.FieldValues[6]*l.FieldValues[4] + \
pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*l.FieldValues[7]*l.FieldValues[5] + \
pow(E,l.FieldValues[2])*pow(-1 + \
l.Point[0],2)*sin(l.Point[1])*l.DerivativeValues[3][1]) - \
2*pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*l.FieldValues[7]*l.VIEValues[0]*(4*g.Parameters[0]*pow(E,l.\
FieldValues[0] + l.FieldValues[1])*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*l.\
FieldValues[4] - pow(E,2*l.FieldValues[2])*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),2)*l.FieldValues[5]*l.\
DerivativeValues[3][1])))/pow(g.Parameters[0],2);});\\ndescriptor.\
SetJacobianComponent(1, 3, 0, 0, [](const auto& l, const auto& g) {return \
(pow(sin(l.Point[1]),2)*(-(pow(g.Parameters[1],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*l.VIEValues[0]*(4*pow(E,l.FieldValues[1])*pow(l.FieldValues[\
6],2)*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1])) + \
4*pow(E,l.FieldValues[1])*pow(l.FieldValues[7],2)*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1])) - \
2*pow(E,l.FieldValues[2])*l.FieldValues[6]*sin(l.Point[1])*l.FieldValues[4] - \
2*pow(E,l.FieldValues[2])*l.FieldValues[7]*sin(l.Point[1])*l.FieldValues[5] + \
4*pow(E,l.FieldValues[1])*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*(pow(l.\
FieldValues[4],2) + pow(l.FieldValues[5],2)))) - \
pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*(l.FieldValues[3] - (pow(-1 \
+ l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])/g.Parameters[0])))/(\
2.*pow(E,2*l.FieldValues[0]));});\\ndescriptor.SetJacobianComponent(1, 4, 0, \
0, [](const auto& l, const auto& g) {return \
pow(g.Parameters[1],2)*pow(E,l.FieldValues[1])*l.VIEValues[0]*sin(l.Point[1])*\
(-4*pow(E,l.FieldValues[1] - \
l.FieldValues[2])*l.FieldValues[7]*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1])) + \
(sin(l.Point[1])*(-(g.Parameters[0]*(4*pow(E,l.FieldValues[1])*g.Parameters[4]\
*l.FieldValues[3]*l.FieldValues[4] + \
2*pow(E,l.FieldValues[0])*l.DerivativeValues[7][1] + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[4]*l.DerivativeValues[3]\
[0])) + pow(E,l.FieldValues[2])*l.FieldValues[6]*sin(l.Point[1])*(g.\
Parameters[0]*l.FieldValues[3] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1]) + \
2*l.VIEValues[0]*(2*g.Parameters[0]*pow(E,l.FieldValues[1])*(g.Parameters[2] \
- g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3])*l.\
FieldValues[4] + pow(E,l.FieldValues[0])*pow(-1 + \
l.Point[0],2)*l.DerivativeValues[5][1])))/(g.Parameters[0]*pow(E,l.\
FieldValues[0])));});\\ndescriptor.SetJacobianComponent(1, 5, 0, 0, [](const \
auto& l, const auto& g) {return \
pow(g.Parameters[1],2)*pow(E,l.FieldValues[1])*l.VIEValues[0]*sin(l.Point[1])*\
(4*pow(E,l.FieldValues[1] - \
l.FieldValues[2])*l.FieldValues[6]*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1])) + \
(sin(l.Point[1])*(-(g.Parameters[0]*(4*pow(E,l.FieldValues[1])*g.Parameters[4]\
*l.FieldValues[3]*l.FieldValues[5] - \
2*pow(E,l.FieldValues[0])*l.DerivativeValues[6][1] + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[5]*l.DerivativeValues[3]\
[0])) + pow(E,l.FieldValues[2])*l.FieldValues[7]*sin(l.Point[1])*(g.\
Parameters[0]*l.FieldValues[3] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1]) + \
l.VIEValues[0]*(4*g.Parameters[0]*pow(E,l.FieldValues[1])*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3])*l.\
FieldValues[5] - 2*pow(E,l.FieldValues[0])*pow(-1 + \
l.Point[0],2)*l.DerivativeValues[4][1])))/(g.Parameters[0]*pow(E,l.\
FieldValues[0])));});\\ndescriptor.SetJacobianComponent(1, 6, 0, 0, [](const \
auto& l, const auto& g) {return \
-0.5*(pow(g.Parameters[1],2)*pow(E,-l.FieldValues[0] + l.FieldValues[1] - \
l.FieldValues[2])*l.VIEValues[0]*sin(l.Point[1])*(-2*pow(E,2*l.FieldValues[2])\
*pow(sin(l.Point[1]),2)*l.FieldValues[3]*l.FieldValues[4] - \
8*pow(E,l.FieldValues[0] + l.FieldValues[1])*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*l.\
FieldValues[5] - \
2*pow(E,l.FieldValues[2])*l.FieldValues[6]*sin(l.Point[1])*(-4*pow(E,l.\
FieldValues[1])*g.Parameters[4]*l.FieldValues[3] + \
4*pow(E,l.FieldValues[1])*l.VIEValues[0]*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) + \
(2*pow(E,l.FieldValues[2])*sin(l.Point[1])*(2*g.Parameters[0]*pow(E,l.\
FieldValues[0])*l.DerivativeValues[5][0] + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(2*pow(E,l.FieldValues[0])*l.DerivativeValues[7][\
0] + pow(E,l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[4]*l.\
DerivativeValues[3][1])))/g.Parameters[0]));});\\ndescriptor.\
SetJacobianComponent(1, 7, 0, 0, [](const auto& l, const auto& g) {return \
(pow(g.Parameters[1],2)*pow(E,-l.FieldValues[0] + l.FieldValues[1] - \
l.FieldValues[2])*l.VIEValues[0]*sin(l.Point[1])*(-4*g.Parameters[0]*pow(E,l.\
FieldValues[0] + l.FieldValues[1])*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*l.\
FieldValues[4] + \
g.Parameters[0]*pow(E,l.FieldValues[2])*l.FieldValues[7]*sin(l.Point[1])*(-4*\
pow(E,l.FieldValues[1])*g.Parameters[4]*l.FieldValues[3] + \
4*pow(E,l.FieldValues[1])*l.VIEValues[0]*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*(g.Parameters[0]*pow(E,l.FieldValues[\
2])*sin(l.Point[1])*l.FieldValues[3]*l.FieldValues[5] + \
2*g.Parameters[0]*pow(E,l.FieldValues[0])*l.DerivativeValues[4][0] + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(2*pow(E,l.FieldValues[0])*l.DerivativeValues[6][\
0] - pow(E,l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[5]*l.\
DerivativeValues[3][1]))))/g.Parameters[0];});\\ndescriptor.\
SetJacobianComponent(1, 8, 0, 0, [](const auto& l, const auto& g) {return \
-2*pow(g.Parameters[1],2)*pow(E,-l.FieldValues[0] + 2*l.FieldValues[1] - \
l.FieldValues[2])*g.Parameters[3]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2)\
*(pow(E,l.FieldValues[2])*pow(l.FieldValues[6],2)*sin(l.Point[1])*l.\
FieldValues[3] + \
pow(E,l.FieldValues[2])*pow(l.FieldValues[7],2)*sin(l.Point[1])*l.FieldValues[\
3] + 2*pow(E,l.FieldValues[0])*l.FieldValues[7]*l.FieldValues[4] - \
2*pow(E,l.FieldValues[0])*l.FieldValues[6]*l.FieldValues[5] + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[3]*(pow(l.FieldValues[4]\
,2) + pow(l.FieldValues[5],2)));});\\ndescriptor.SetJacobianComponent(1, 9, \
0, 0, [](const auto& l, const auto& g) {return \
-2*pow(g.Parameters[1],2)*pow(E,-l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[3]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),\
2)*(pow(l.FieldValues[6],2) + pow(l.FieldValues[7],2) + \
pow(l.FieldValues[4],2) + \
pow(l.FieldValues[5],2));});\\ndescriptor.SetJacobianComponent(1, 0, 1, 0, \
[](const auto& l, const auto& g) {return \
-(pow(sin(l.Point[1]),2)*(cot(l.Point[1]) + \
l.DerivativeValues[2][0]));});\\ndescriptor.SetJacobianComponent(1, 0, 3, 0, \
[](const auto& l, const auto& g) {return -((pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),2)*(g.Parameters[0] + pow(-1 \
+ l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[2][1]))/pow(g.Parameters[0],\
2));});\\ndescriptor.SetJacobianComponent(1, 1, 1, 0, [](const auto& l, const \
auto& g) {return \
pow(sin(l.Point[1]),2);});\\ndescriptor.SetJacobianComponent(1, 1, 2, 0, \
[](const auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(g.Parameters[0] + 2*(-1 + \
l.Point[0])*l.VIEValues[0])*pow(sin(l.Point[1]),2))/pow(g.Parameters[0],2);});\
\\ndescriptor.SetJacobianComponent(1, 1, 3, 0, [](const auto& l, const auto& \
g) {return (pow(-1 + \
l.Point[0],4)*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2))/pow(g.Parameters[\
0],2);});\\ndescriptor.SetJacobianComponent(1, 2, 1, 0, [](const auto& l, \
const auto& g) {return -(pow(sin(l.Point[1]),2)*l.DerivativeValues[0][0]);});\
\\ndescriptor.SetJacobianComponent(1, 2, 2, 0, [](const auto& l, const auto& \
g) {return -((pow(-1 + \
l.Point[0],4)*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2)*l.DerivativeValues[\
0][2])/pow(g.Parameters[0],2));});\\ndescriptor.SetJacobianComponent(1, 3, 1, \
0, [](const auto& l, const auto& g) {return -0.5*(pow(E,-2*l.FieldValues[0] + \
l.FieldValues[2])*pow(sin(l.Point[1]),3)*(-(pow(g.Parameters[1],2)*pow(E,l.\
FieldValues[0] + l.FieldValues[1])*pow(l.FieldValues[6],2)*l.VIEValues[0]) - \
pow(g.Parameters[1],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*pow(l.FieldValues[7],2)*l.VIEValues[0] + \
pow(g.Parameters[1],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*l.VIEValues[0]*pow(l.FieldValues[4],2) + \
pow(g.Parameters[1],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*l.VIEValues[0]*pow(l.FieldValues[5],2) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]));});\\\
ndescriptor.SetJacobianComponent(1, 3, 2, 0, [](const auto& l, const auto& g) \
{return (pow(E,-2*l.FieldValues[0] + l.FieldValues[2])*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),3)*(-2*pow(g.Parameters[1],2)\
*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*l.VIEValues[0]*(l.FieldValues[6]*l.FieldValues[4] + \
l.FieldValues[7]*l.FieldValues[5]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*(g.Parameters[0]*l.FieldValues[3] - \
pow(-1 + l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])))/(2.*pow(g.\
Parameters[0],2));});\\ndescriptor.SetJacobianComponent(1, 4, 1, 0, [](const \
auto& l, const auto& g) {return \
2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1])*l.FieldValues[7]*l.VIEValues[\
0]*pow(sin(l.Point[1]),2);});\\ndescriptor.SetJacobianComponent(1, 4, 2, 0, \
[](const auto& l, const auto& g) {return \
(-2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1])*pow(-1 + \
l.Point[0],2)*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2)*l.FieldValues[5])/\
g.Parameters[0];});\\ndescriptor.SetJacobianComponent(1, 5, 1, 0, [](const \
auto& l, const auto& g) {return \
-2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1])*l.FieldValues[6]*l.\
VIEValues[0]*pow(sin(l.Point[1]),2);});\\ndescriptor.SetJacobianComponent(1, \
5, 2, 0, [](const auto& l, const auto& g) {return \
(2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1])*pow(-1 + \
l.Point[0],2)*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2)*l.FieldValues[4])/\
g.Parameters[0];});\\ndescriptor.SetJacobianComponent(1, 6, 1, 0, [](const \
auto& l, const auto& g) {return \
(2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1])*pow(-1 + \
l.Point[0],2)*l.FieldValues[7]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2))/\
g.Parameters[0];});\\ndescriptor.SetJacobianComponent(1, 6, 2, 0, [](const \
auto& l, const auto& g) {return \
2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1])*l.VIEValues[0]*pow(sin(l.\
Point[1]),2)*l.FieldValues[5];});\\ndescriptor.SetJacobianComponent(1, 7, 1, \
0, [](const auto& l, const auto& g) {return \
(-2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1])*pow(-1 + \
l.Point[0],2)*l.FieldValues[6]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2))/\
g.Parameters[0];});\\ndescriptor.SetJacobianComponent(1, 7, 2, 0, [](const \
auto& l, const auto& g) {return \
-2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1])*l.VIEValues[0]*pow(sin(l.\
Point[1]),2)*l.FieldValues[4];});\\ndescriptor.SetJacobianComponent(1, 1, 2, \
1, [](const auto& l, const auto& g) {return \
1;});\\ndescriptor.SetJacobianComponent(1, 1, 0, 2, [](const auto& l, const \
auto& g) {return 1;});\\ndescriptor.SetJacobianComponent(1, 1, 0, 3, [](const \
auto& l, const auto& g) {return 1;});\\ndescriptor.SetJacobianComponent(1, 2, \
0, 3, [](const auto& l, const auto& g) {return \
-1;});\\ndescriptor.SetJacobianComponent(1, 1, 0, 4, [](const auto& l, const \
auto& g) {return 1;});\\ndescriptor.SetJacobianComponent(1, 2, 0, 4, [](const \
auto& l, const auto& g) {return -1;});\\ndescriptor.SetJacobianComponent(2, \
0, 0, 0, [](const auto& l, const auto& g) {return \
-0.5*(pow(sin(l.Point[1]),2)*(4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*\
pow(l.FieldValues[8],2)*pow(l.FieldValues[3],2) + \
2*pow(g.Parameters[0],2)*pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*pow(\
l.FieldValues[3],2) + \
4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[2]*pow(l.VIEValues[0],2)*pow(l.FieldValues[4]\
,2) - 4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] \
+ 2*l.FieldValues[1])*g.Parameters[3]*pow(l.VIEValues[0],2)*l.FieldValues[9]*\
pow(l.FieldValues[4],2) - \
4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[4]*l.VIEValues[0]*l.FieldValues[3]*pow(l.\
FieldValues[4],2) - \
4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[3]*l.FieldValues[8]*pow(l.VIEValues[0],2)*\
sin(l.Point[1])*l.FieldValues[3]*pow(l.FieldValues[4],2) + \
4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[2]*pow(l.VIEValues[0],2)*pow(l.FieldValues[5]\
,2) - 4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] \
+ 2*l.FieldValues[1])*g.Parameters[3]*pow(l.VIEValues[0],2)*l.FieldValues[9]*\
pow(l.FieldValues[5],2) - \
4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[4]*l.VIEValues[0]*l.FieldValues[3]*pow(l.\
FieldValues[5],2) - \
4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[3]*l.FieldValues[8]*pow(l.VIEValues[0],2)*\
sin(l.Point[1])*l.FieldValues[3]*pow(l.FieldValues[5],2) + \
8*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*l.FieldValues[8]*cos(l.Point[\
1])*sin(l.Point[1])*pow(l.FieldValues[3],2)*l.DerivativeValues[8][0] + \
4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(sin(l.Point[1]),2)*pow(l.\
FieldValues[3],2)*pow(l.DerivativeValues[8][0],2) + \
8*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*l.FieldValues[8]*cos(l.Point[\
1])*l.FieldValues[3]*l.DerivativeValues[9][0] + \
8*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*sin(l.Point[1])*l.FieldValues[\
3]*l.DerivativeValues[8][0]*l.DerivativeValues[9][0] + \
4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(l.DerivativeValues[9][0],\
2) + 3*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
l.FieldValues[2])*l.VIEValues[0]*sin(l.Point[1])*pow(l.FieldValues[4],2)*l.\
DerivativeValues[3][0] + \
3*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
l.FieldValues[2])*l.VIEValues[0]*sin(l.Point[1])*pow(l.FieldValues[5],2)*l.\
DerivativeValues[3][0] + \
2*pow(g.Parameters[0],2)*pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*pow(\
l.DerivativeValues[3][0],2) + \
pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*pow(l.FieldValues[6],2)*l.VIEValues[0]*(-4*pow(E,l.\
FieldValues[1])*g.Parameters[4]*l.FieldValues[3] + \
4*pow(E,l.FieldValues[1])*l.VIEValues[0]*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]) - \
3*pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) + \
pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*pow(l.FieldValues[7],2)*l.VIEValues[0]*(-4*pow(E,l.\
FieldValues[1])*g.Parameters[4]*l.FieldValues[3] + \
4*pow(E,l.FieldValues[1])*l.VIEValues[0]*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]) - \
3*pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) + \
8*pow(g.Parameters[1],2)*g.Parameters[0]*l.FieldValues[8]*l.VIEValues[0]*pow(\
sin(l.Point[1]),2)*pow(l.FieldValues[3],2)*l.DerivativeValues[8][1] - \
16*pow(g.Parameters[1],2)*g.Parameters[0]*l.Point[0]*l.FieldValues[8]*l.\
VIEValues[0]*pow(sin(l.Point[1]),2)*pow(l.FieldValues[3],2)*l.\
DerivativeValues[8][1] + \
8*pow(g.Parameters[1],2)*g.Parameters[0]*pow(l.Point[0],2)*l.FieldValues[8]*l.\
VIEValues[0]*pow(sin(l.Point[1]),2)*pow(l.FieldValues[3],2)*l.\
DerivativeValues[8][1] + \
4*pow(g.Parameters[1],2)*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2)*pow(l.\
FieldValues[3],2)*pow(l.DerivativeValues[8][1],2) - \
16*pow(g.Parameters[1],2)*l.Point[0]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1])\
,2)*pow(l.FieldValues[3],2)*pow(l.DerivativeValues[8][1],2) + \
24*pow(g.Parameters[1],2)*pow(l.Point[0],2)*pow(l.VIEValues[0],2)*pow(sin(l.\
Point[1]),2)*pow(l.FieldValues[3],2)*pow(l.DerivativeValues[8][1],2) - \
16*pow(g.Parameters[1],2)*pow(l.Point[0],3)*pow(l.VIEValues[0],2)*pow(sin(l.\
Point[1]),2)*pow(l.FieldValues[3],2)*pow(l.DerivativeValues[8][1],2) + \
4*pow(g.Parameters[1],2)*pow(l.Point[0],4)*pow(l.VIEValues[0],2)*pow(sin(l.\
Point[1]),2)*pow(l.FieldValues[3],2)*pow(l.DerivativeValues[8][1],2) + \
8*pow(g.Parameters[1],2)*g.Parameters[0]*l.FieldValues[8]*l.VIEValues[0]*sin(\
l.Point[1])*l.FieldValues[3]*l.DerivativeValues[9][1] - \
16*pow(g.Parameters[1],2)*g.Parameters[0]*l.Point[0]*l.FieldValues[8]*l.\
VIEValues[0]*sin(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[9][1] + \
8*pow(g.Parameters[1],2)*g.Parameters[0]*pow(l.Point[0],2)*l.FieldValues[8]*l.\
VIEValues[0]*sin(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[9][1] + \
8*pow(g.Parameters[1],2)*pow(l.VIEValues[0],2)*sin(l.Point[1])*l.FieldValues[\
3]*l.DerivativeValues[8][1]*l.DerivativeValues[9][1] - \
32*pow(g.Parameters[1],2)*l.Point[0]*pow(l.VIEValues[0],2)*sin(l.Point[1])*l.\
FieldValues[3]*l.DerivativeValues[8][1]*l.DerivativeValues[9][1] + \
48*pow(g.Parameters[1],2)*pow(l.Point[0],2)*pow(l.VIEValues[0],2)*sin(l.Point[\
1])*l.FieldValues[3]*l.DerivativeValues[8][1]*l.DerivativeValues[9][1] - \
32*pow(g.Parameters[1],2)*pow(l.Point[0],3)*pow(l.VIEValues[0],2)*sin(l.Point[\
1])*l.FieldValues[3]*l.DerivativeValues[8][1]*l.DerivativeValues[9][1] + \
8*pow(g.Parameters[1],2)*pow(l.Point[0],4)*pow(l.VIEValues[0],2)*sin(l.Point[\
1])*l.FieldValues[3]*l.DerivativeValues[8][1]*l.DerivativeValues[9][1] + \
4*pow(g.Parameters[1],2)*pow(l.VIEValues[0],2)*pow(l.DerivativeValues[9][1],2)\
 - 16*pow(g.Parameters[1],2)*l.Point[0]*pow(l.VIEValues[0],2)*pow(l.\
DerivativeValues[9][1],2) + \
24*pow(g.Parameters[1],2)*pow(l.Point[0],2)*pow(l.VIEValues[0],2)*pow(l.\
DerivativeValues[9][1],2) - \
16*pow(g.Parameters[1],2)*pow(l.Point[0],3)*pow(l.VIEValues[0],2)*pow(l.\
DerivativeValues[9][1],2) + \
4*pow(g.Parameters[1],2)*pow(l.Point[0],4)*pow(l.VIEValues[0],2)*pow(l.\
DerivativeValues[9][1],2) - \
4*g.Parameters[0]*pow(E,2*l.FieldValues[2])*l.VIEValues[0]*pow(sin(l.Point[1])\
,2)*l.FieldValues[3]*l.DerivativeValues[3][1] + \
8*g.Parameters[0]*pow(E,2*l.FieldValues[2])*l.Point[0]*l.VIEValues[0]*pow(sin(\
l.Point[1]),2)*l.FieldValues[3]*l.DerivativeValues[3][1] - \
4*g.Parameters[0]*pow(E,2*l.FieldValues[2])*pow(l.Point[0],2)*l.VIEValues[0]*\
pow(sin(l.Point[1]),2)*l.FieldValues[3]*l.DerivativeValues[3][1] + \
2*pow(E,2*l.FieldValues[2])*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2)*pow(\
l.DerivativeValues[3][1],2) - \
8*pow(E,2*l.FieldValues[2])*l.Point[0]*pow(l.VIEValues[0],2)*pow(sin(l.Point[\
1]),2)*pow(l.DerivativeValues[3][1],2) + \
12*pow(E,2*l.FieldValues[2])*pow(l.Point[0],2)*pow(l.VIEValues[0],2)*pow(sin(\
l.Point[1]),2)*pow(l.DerivativeValues[3][1],2) - \
8*pow(E,2*l.FieldValues[2])*pow(l.Point[0],3)*pow(l.VIEValues[0],2)*pow(sin(l.\
Point[1]),2)*pow(l.DerivativeValues[3][1],2) + \
2*pow(E,2*l.FieldValues[2])*pow(l.Point[0],4)*pow(l.VIEValues[0],2)*pow(sin(l.\
Point[1]),2)*pow(l.DerivativeValues[3][1],2) - \
6*pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
l.FieldValues[2])*l.FieldValues[6]*l.VIEValues[0]*sin(l.Point[1])*l.\
FieldValues[4]*(g.Parameters[0]*l.FieldValues[3] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1]) - \
6*pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
l.FieldValues[2])*l.FieldValues[7]*l.VIEValues[0]*sin(l.Point[1])*l.\
FieldValues[5]*(g.Parameters[0]*l.FieldValues[3] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])))/(pow(g.Parameters[0],\
2)*pow(E,2*l.FieldValues[0]));});\\ndescriptor.SetJacobianComponent(2, 1, 0, \
0, [](const auto& l, const auto& g) {return \
-0.5*(pow(g.Parameters[1],2)*pow(E,-l.FieldValues[0] + l.FieldValues[1] - \
l.FieldValues[2])*l.VIEValues[0]*sin(l.Point[1])*(g.Parameters[0]*pow(E,l.\
FieldValues[2])*pow(l.FieldValues[6],2)*sin(l.Point[1])*(8*pow(E,l.\
FieldValues[1])*g.Parameters[4]*l.FieldValues[3] - \
8*pow(E,l.FieldValues[1])*l.VIEValues[0]*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]) + \
3*pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) + \
g.Parameters[0]*pow(E,l.FieldValues[2])*pow(l.FieldValues[7],2)*sin(l.Point[1]\
)*(8*pow(E,l.FieldValues[1])*g.Parameters[4]*l.FieldValues[3] - \
8*pow(E,l.FieldValues[1])*l.VIEValues[0]*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]) + \
3*pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) + \
2*l.FieldValues[6]*(3*g.Parameters[0]*pow(E,2*l.FieldValues[2])*pow(sin(l.\
Point[1]),2)*l.FieldValues[3]*l.FieldValues[4] + \
8*g.Parameters[0]*pow(E,l.FieldValues[0] + l.FieldValues[1])*(g.Parameters[4] \
+ g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*l.\
FieldValues[5] - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*(2*g.Parameters[0]*pow(E,l.\
FieldValues[0])*l.DerivativeValues[5][0] + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(2*pow(E,l.FieldValues[0])*l.DerivativeValues[7][\
0] + 3*pow(E,l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[4]*l.\
DerivativeValues[3][1]))) - \
2*l.FieldValues[7]*(8*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*l.\
FieldValues[4] - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*(3*g.Parameters[0]*pow(E,l.\
FieldValues[2])*sin(l.Point[1])*l.FieldValues[3]*l.FieldValues[5] + \
2*g.Parameters[0]*pow(E,l.FieldValues[0])*l.DerivativeValues[4][0] + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(2*pow(E,l.FieldValues[0])*l.DerivativeValues[6][\
0] - 3*pow(E,l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[5]*l.\
DerivativeValues[3][1]))) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*(g.Parameters[0]*(8*pow(E,l.\
FieldValues[1])*g.Parameters[4]*l.FieldValues[3]*(pow(l.FieldValues[4],2) + \
pow(l.FieldValues[5],2)) + \
4*pow(E,l.FieldValues[0])*l.FieldValues[5]*l.DerivativeValues[6][1] - \
4*pow(E,l.FieldValues[0])*l.FieldValues[4]*l.DerivativeValues[7][1] - \
3*pow(E,l.FieldValues[2])*sin(l.Point[1])*pow(l.FieldValues[4],2)*l.\
DerivativeValues[3][0] - \
3*pow(E,l.FieldValues[2])*sin(l.Point[1])*pow(l.FieldValues[5],2)*l.\
DerivativeValues[3][0]) + \
l.VIEValues[0]*(-8*g.Parameters[0]*pow(E,l.FieldValues[1])*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3])*pow(l.\
FieldValues[4],2) - \
4*l.FieldValues[5]*(2*g.Parameters[0]*pow(E,l.FieldValues[1])*(g.Parameters[2]\
 - g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3])*l.\
FieldValues[5] + pow(E,l.FieldValues[0])*pow(-1 + \
l.Point[0],2)*l.DerivativeValues[4][1]) + 4*pow(E,l.FieldValues[0])*pow(-1 + \
l.Point[0],2)*l.FieldValues[4]*l.DerivativeValues[5][1]))))/g.Parameters[0];})\
;\\ndescriptor.SetJacobianComponent(2, 2, 0, 0, [](const auto& l, const auto& \
g) {return \
(-4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,2*l.FieldValues[0])*\
pow(l.FieldValues[8],2) - \
8*pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,2*l.FieldValues[0])*l.\
FieldValues[8]*sin(l.Point[1])*(g.Parameters[0]*pow(E,2*l.FieldValues[1] + \
l.FieldValues[2])*g.Parameters[3]*l.FieldValues[7]*pow(l.VIEValues[0],2)*sin(\
l.Point[1])*l.FieldValues[4] - g.Parameters[0]*pow(E,2*l.FieldValues[1] + \
l.FieldValues[2])*g.Parameters[3]*l.FieldValues[6]*pow(l.VIEValues[0],2)*sin(\
l.Point[1])*l.FieldValues[5] + \
g.Parameters[0]*cos(l.Point[1])*l.DerivativeValues[8][0] + \
l.VIEValues[0]*sin(l.Point[1])*l.DerivativeValues[8][1] - \
2*l.Point[0]*l.VIEValues[0]*sin(l.Point[1])*l.DerivativeValues[8][1] + \
pow(l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*l.DerivativeValues[8][1]) + \
sin(l.Point[1])*(2*pow(g.Parameters[0],2)*pow(E,4*l.FieldValues[2])*pow(sin(l.\
Point[1]),3)*pow(l.FieldValues[3],2) + \
8*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,2*l.FieldValues[0] + \
2*l.FieldValues[1] + \
l.FieldValues[2])*g.Parameters[4]*l.FieldValues[6]*l.VIEValues[0]*l.\
FieldValues[5] - \
4*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,2*l.FieldValues[0])*sin(\
l.Point[1])*pow(l.DerivativeValues[8][0],2) - \
3*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
3*l.FieldValues[2])*pow(l.FieldValues[6],2)*l.VIEValues[0]*pow(sin(l.Point[1])\
,2)*l.DerivativeValues[3][0] - \
3*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
3*l.FieldValues[2])*pow(l.FieldValues[7],2)*l.VIEValues[0]*pow(sin(l.Point[1])\
,2)*l.DerivativeValues[3][0] + \
3*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
3*l.FieldValues[2])*l.VIEValues[0]*pow(sin(l.Point[1]),2)*pow(l.FieldValues[4]\
,2)*l.DerivativeValues[3][0] + \
3*pow(g.Parameters[1],2)*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
3*l.FieldValues[2])*l.VIEValues[0]*pow(sin(l.Point[1]),2)*pow(l.FieldValues[5]\
,2)*l.DerivativeValues[3][0] + \
2*pow(g.Parameters[0],2)*pow(E,4*l.FieldValues[2])*pow(sin(l.Point[1]),3)*pow(\
l.DerivativeValues[3][0],2) - \
4*pow(g.Parameters[1],2)*pow(E,2*l.FieldValues[0])*pow(l.VIEValues[0],2)*sin(\
l.Point[1])*pow(l.DerivativeValues[8][1],2) + \
16*pow(g.Parameters[1],2)*pow(E,2*l.FieldValues[0])*l.Point[0]*pow(l.\
VIEValues[0],2)*sin(l.Point[1])*pow(l.DerivativeValues[8][1],2) - \
24*pow(g.Parameters[1],2)*pow(E,2*l.FieldValues[0])*pow(l.Point[0],2)*pow(l.\
VIEValues[0],2)*sin(l.Point[1])*pow(l.DerivativeValues[8][1],2) + \
16*pow(g.Parameters[1],2)*pow(E,2*l.FieldValues[0])*pow(l.Point[0],3)*pow(l.\
VIEValues[0],2)*sin(l.Point[1])*pow(l.DerivativeValues[8][1],2) - \
4*pow(g.Parameters[1],2)*pow(E,2*l.FieldValues[0])*pow(l.Point[0],4)*pow(l.\
VIEValues[0],2)*sin(l.Point[1])*pow(l.DerivativeValues[8][1],2) + \
6*pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
3*l.FieldValues[2])*l.FieldValues[6]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1])\
,2)*l.FieldValues[4]*l.DerivativeValues[3][1] - \
12*pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
3*l.FieldValues[2])*l.Point[0]*l.FieldValues[6]*pow(l.VIEValues[0],2)*pow(sin(\
l.Point[1]),2)*l.FieldValues[4]*l.DerivativeValues[3][1] + \
6*pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
3*l.FieldValues[2])*pow(l.Point[0],2)*l.FieldValues[6]*pow(l.VIEValues[0],2)*\
pow(sin(l.Point[1]),2)*l.FieldValues[4]*l.DerivativeValues[3][1] + \
2*pow(E,4*l.FieldValues[2])*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),3)*pow(\
l.DerivativeValues[3][1],2) - \
8*pow(E,4*l.FieldValues[2])*l.Point[0]*pow(l.VIEValues[0],2)*pow(sin(l.Point[\
1]),3)*pow(l.DerivativeValues[3][1],2) + \
12*pow(E,4*l.FieldValues[2])*pow(l.Point[0],2)*pow(l.VIEValues[0],2)*pow(sin(\
l.Point[1]),3)*pow(l.DerivativeValues[3][1],2) - \
8*pow(E,4*l.FieldValues[2])*pow(l.Point[0],3)*pow(l.VIEValues[0],2)*pow(sin(l.\
Point[1]),3)*pow(l.DerivativeValues[3][1],2) + \
2*pow(E,4*l.FieldValues[2])*pow(l.Point[0],4)*pow(l.VIEValues[0],2)*pow(sin(l.\
Point[1]),3)*pow(l.DerivativeValues[3][1],2) - \
2*g.Parameters[0]*pow(E,3*l.FieldValues[2])*l.VIEValues[0]*pow(sin(l.Point[1])\
,2)*l.FieldValues[3]*(3*pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,l.\
FieldValues[0] + l.FieldValues[1])*l.FieldValues[6]*l.FieldValues[4] + \
3*pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*l.FieldValues[7]*l.FieldValues[5] + \
2*pow(E,l.FieldValues[2])*pow(-1 + \
l.Point[0],2)*sin(l.Point[1])*l.DerivativeValues[3][1]) + \
2*pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
l.FieldValues[2])*l.FieldValues[7]*l.VIEValues[0]*(-4*g.Parameters[0]*pow(E,l.\
FieldValues[0] + l.FieldValues[1])*g.Parameters[4]*l.FieldValues[4] + \
3*pow(E,2*l.FieldValues[2])*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),2)*l.FieldValues[5]*l.\
DerivativeValues[3][1])))/(2.*pow(g.Parameters[0],2)*pow(E,2*(l.FieldValues[0]\
 + l.FieldValues[2])));});\\ndescriptor.SetJacobianComponent(2, 3, 0, 0, \
[](const auto& l, const auto& g) {return \
(pow(sin(l.Point[1]),2)*(-2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*pow(l.FieldValues[6],2)*l.VIEValues[0]*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1])) - \
2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*pow(l.FieldValues[7],2)*l.VIEValues[0]*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1])) - \
3*pow(g.Parameters[1],2)*pow(E,l.FieldValues[0] + l.FieldValues[1] + \
l.FieldValues[2])*l.FieldValues[6]*l.VIEValues[0]*sin(l.Point[1])*l.\
FieldValues[4] - 3*pow(g.Parameters[1],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
l.FieldValues[2])*l.FieldValues[7]*l.VIEValues[0]*sin(l.Point[1])*l.\
FieldValues[5] + \
(2*pow(g.Parameters[1],2)*(pow(g.Parameters[0],2)*pow(l.FieldValues[8],2)*l.\
FieldValues[3] - pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[4]*l.VIEValues[0]*(pow(l.FieldValues[4],2) + \
pow(l.FieldValues[5],2)) + \
pow(g.Parameters[0],2)*sin(l.Point[1])*l.DerivativeValues[8][0]*(sin(l.Point[\
1])*l.FieldValues[3]*l.DerivativeValues[8][0] + l.DerivativeValues[9][0]) + \
pow(-1 + l.Point[0],4)*pow(l.VIEValues[0],2)*sin(l.Point[1])*l.\
DerivativeValues[8][1]*(sin(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[8]\
[1] + l.DerivativeValues[9][1]) - \
g.Parameters[0]*l.FieldValues[8]*(g.Parameters[0]*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[3]*pow(l.VIEValues[0],2)*sin(l.Point[1])*(\
pow(l.FieldValues[4],2) + pow(l.FieldValues[5],2)) - \
g.Parameters[0]*cos(l.Point[1])*(2*sin(l.Point[1])*l.FieldValues[3]*l.\
DerivativeValues[8][0] + l.DerivativeValues[9][0]) - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*(2*sin(l.Point[1])*l.FieldValues[\
3]*l.DerivativeValues[8][1] + \
l.DerivativeValues[9][1]))))/pow(g.Parameters[0],2) + \
pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*(l.FieldValues[3] - (pow(-1 \
+ l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])/g.Parameters[0])))/\
pow(E,2*l.FieldValues[0]);});\\ndescriptor.SetJacobianComponent(2, 4, 0, 0, \
[](const auto& l, const auto& g) {return \
(pow(g.Parameters[1],2)*pow(E,-l.FieldValues[0] + l.FieldValues[1] - \
l.FieldValues[2])*l.VIEValues[0]*sin(l.Point[1])*(4*g.Parameters[0]*pow(E,l.\
FieldValues[0] + l.FieldValues[1])*l.FieldValues[7]*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1])) - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*(g.Parameters[0]*(4*pow(E,l.\
FieldValues[1])*g.Parameters[4]*l.FieldValues[3]*l.FieldValues[4] - \
2*pow(E,l.FieldValues[0])*l.DerivativeValues[7][1] - \
3*pow(E,l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[4]*l.DerivativeValues[\
3][0]) + 3*pow(E,l.FieldValues[2])*l.FieldValues[6]*sin(l.Point[1])*(g.\
Parameters[0]*l.FieldValues[3] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1]) + \
l.VIEValues[0]*(-4*g.Parameters[0]*pow(E,l.FieldValues[1])*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3])*l.\
FieldValues[4] + 2*pow(E,l.FieldValues[0])*pow(-1 + \
l.Point[0],2)*l.DerivativeValues[5][1]))))/g.Parameters[0];});\\ndescriptor.\
SetJacobianComponent(2, 5, 0, 0, [](const auto& l, const auto& g) {return \
-((pow(g.Parameters[1],2)*pow(E,-l.FieldValues[0] + l.FieldValues[1] - \
l.FieldValues[2])*l.VIEValues[0]*sin(l.Point[1])*(4*g.Parameters[0]*pow(E,l.\
FieldValues[0] + l.FieldValues[1])*l.FieldValues[6]*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1])) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*(g.Parameters[0]*(4*pow(E,l.\
FieldValues[1])*g.Parameters[4]*l.FieldValues[3]*l.FieldValues[5] + \
2*pow(E,l.FieldValues[0])*l.DerivativeValues[6][1] - \
3*pow(E,l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[5]*l.DerivativeValues[\
3][0]) + 3*pow(E,l.FieldValues[2])*l.FieldValues[7]*sin(l.Point[1])*(g.\
Parameters[0]*l.FieldValues[3] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1]) - \
2*l.VIEValues[0]*(2*g.Parameters[0]*pow(E,l.FieldValues[1])*(g.Parameters[2] \
- g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3])*l.\
FieldValues[5] + pow(E,l.FieldValues[0])*pow(-1 + \
l.Point[0],2)*l.DerivativeValues[4][1]))))/g.Parameters[0]);});\\ndescriptor.\
SetJacobianComponent(2, 6, 0, 0, [](const auto& l, const auto& g) {return \
pow(g.Parameters[1],2)*pow(E,-l.FieldValues[0] + l.FieldValues[1] - \
l.FieldValues[2])*l.VIEValues[0]*sin(l.Point[1])*(-3*pow(E,2*l.FieldValues[2])\
*pow(sin(l.Point[1]),2)*l.FieldValues[3]*l.FieldValues[4] - \
4*pow(E,l.FieldValues[0] + l.FieldValues[1])*g.Parameters[4]*l.FieldValues[5] \
- 4*pow(E,l.FieldValues[1])*g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*\
sin(l.Point[1])*(pow(E,l.FieldValues[2])*l.FieldValues[6]*sin(l.Point[1])*l.\
FieldValues[3] + pow(E,l.FieldValues[0])*l.FieldValues[5]) - \
pow(E,l.FieldValues[2])*l.FieldValues[6]*sin(l.Point[1])*(-4*pow(E,l.\
FieldValues[1])*l.VIEValues[0]*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9]) + \
4*pow(E,l.FieldValues[1])*g.Parameters[4]*l.FieldValues[3] + \
3*pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) + \
(pow(E,l.FieldValues[2])*sin(l.Point[1])*(2*g.Parameters[0]*pow(E,l.\
FieldValues[0])*l.DerivativeValues[5][0] + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(2*pow(E,l.FieldValues[0])*l.DerivativeValues[7][\
0] + 3*pow(E,l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[4]*l.\
DerivativeValues[3][1])))/g.Parameters[0]);});\\ndescriptor.\
SetJacobianComponent(2, 7, 0, 0, [](const auto& l, const auto& g) {return \
-((pow(g.Parameters[1],2)*pow(E,-l.FieldValues[0] + l.FieldValues[1] - \
l.FieldValues[2])*l.VIEValues[0]*sin(l.Point[1])*(-4*g.Parameters[0]*pow(E,l.\
FieldValues[0] + l.FieldValues[1])*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*l.\
FieldValues[4] + \
g.Parameters[0]*pow(E,l.FieldValues[2])*l.FieldValues[7]*sin(l.Point[1])*(4*\
pow(E,l.FieldValues[1])*g.Parameters[4]*l.FieldValues[3] - \
4*pow(E,l.FieldValues[1])*l.VIEValues[0]*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]) + \
3*pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*(3*g.Parameters[0]*pow(E,l.\
FieldValues[2])*sin(l.Point[1])*l.FieldValues[3]*l.FieldValues[5] + \
2*g.Parameters[0]*pow(E,l.FieldValues[0])*l.DerivativeValues[4][0] + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(2*pow(E,l.FieldValues[0])*l.DerivativeValues[6][\
0] - 3*pow(E,l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[5]*l.\
DerivativeValues[3][1]))))/g.Parameters[0]);});\\ndescriptor.\
SetJacobianComponent(2, 8, 0, 0, [](const auto& l, const auto& g) {return \
(pow(g.Parameters[1],2)*(4*l.FieldValues[8]*(pow(E,2*l.FieldValues[0]) + \
pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*pow(l.FieldValues[3],2)) + \
4*sin(l.Point[1])*(-(pow(E,l.FieldValues[0] + 2*(l.FieldValues[1] + \
l.FieldValues[2]))*g.Parameters[3]*pow(l.FieldValues[6],2)*pow(l.VIEValues[0],\
2)*pow(sin(l.Point[1]),2)*l.FieldValues[3]) - pow(E,l.FieldValues[0] + \
2*(l.FieldValues[1] + \
l.FieldValues[2]))*g.Parameters[3]*pow(l.FieldValues[7],2)*pow(l.VIEValues[0],\
2)*pow(sin(l.Point[1]),2)*l.FieldValues[3] + 2*pow(E,2*l.FieldValues[0] + \
2*l.FieldValues[1] + \
l.FieldValues[2])*g.Parameters[3]*l.FieldValues[7]*pow(l.VIEValues[0],2)*sin(\
l.Point[1])*l.FieldValues[4] - pow(E,l.FieldValues[0] + 2*(l.FieldValues[1] + \
l.FieldValues[2]))*g.Parameters[3]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),\
2)*l.FieldValues[3]*pow(l.FieldValues[4],2) - 2*pow(E,2*l.FieldValues[0] + \
2*l.FieldValues[1] + \
l.FieldValues[2])*g.Parameters[3]*l.FieldValues[6]*pow(l.VIEValues[0],2)*sin(\
l.Point[1])*l.FieldValues[5] - pow(E,l.FieldValues[0] + 2*(l.FieldValues[1] + \
l.FieldValues[2]))*g.Parameters[3]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),\
2)*l.FieldValues[3]*pow(l.FieldValues[5],2) + \
pow(E,2*l.FieldValues[0])*cos(l.Point[1])*l.DerivativeValues[8][0] + \
pow(E,2*l.FieldValues[2])*cos(l.Point[1])*pow(sin(l.Point[1]),2)*pow(l.\
FieldValues[3],2)*l.DerivativeValues[8][0] + \
pow(E,2*l.FieldValues[2])*cos(l.Point[1])*sin(l.Point[1])*l.FieldValues[3]*l.\
DerivativeValues[9][0] + (pow(E,2*l.FieldValues[0])*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*l.DerivativeValues[8][1])/g.\
Parameters[0] + (pow(E,2*l.FieldValues[2])*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),3)*pow(l.FieldValues[3],2)*l.\
DerivativeValues[8][1])/g.Parameters[0] + (pow(E,2*l.FieldValues[2])*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),2)*l.FieldValues[3]*l.\
DerivativeValues[9][1])/g.Parameters[0])))/(2.*pow(E,2*(l.FieldValues[0] + \
l.FieldValues[2])));});\\ndescriptor.SetJacobianComponent(2, 9, 0, 0, \
[](const auto& l, const auto& g) {return \
-2*pow(g.Parameters[1],2)*pow(E,-l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[3]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),\
2)*(pow(l.FieldValues[6],2) + pow(l.FieldValues[7],2) + \
pow(l.FieldValues[4],2) + \
pow(l.FieldValues[5],2));});\\ndescriptor.SetJacobianComponent(2, 0, 1, 0, \
[](const auto& l, const auto& g) {return sin(l.Point[1])*(cos(l.Point[1]) + \
sin(l.Point[1])*l.DerivativeValues[2][0]);});\\ndescriptor.\
SetJacobianComponent(2, 0, 3, 0, [](const auto& l, const auto& g) {return \
(pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),2)*(g.Parameters[0] + pow(-1 \
+ l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[2][1]))/pow(g.Parameters[0],\
2);});\\ndescriptor.SetJacobianComponent(2, 2, 1, 0, [](const auto& l, const \
auto& g) {return sin(l.Point[1])*(sin(l.Point[1])*l.DerivativeValues[0][0] + \
2*(cos(l.Point[1]) + \
sin(l.Point[1])*l.DerivativeValues[2][0]));});\\ndescriptor.\
SetJacobianComponent(2, 2, 2, 0, [](const auto& l, const auto& g) {return \
(pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),2)*(3*g.Parameters[0] + (-1 \
+ l.Point[0])*l.VIEValues[0]*(2 + (-1 + l.Point[0])*l.DerivativeValues[0][2] \
+ 2*(-1 + \
l.Point[0])*l.DerivativeValues[2][1])))/pow(g.Parameters[0],2);});\\\
ndescriptor.SetJacobianComponent(2, 2, 3, 0, [](const auto& l, const auto& g) \
{return pow(sin(l.Point[1]),2);});\\ndescriptor.SetJacobianComponent(2, 2, 4, \
0, [](const auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],4)*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2))/pow(g.Parameters[\
0],2);});\\ndescriptor.SetJacobianComponent(2, 3, 1, 0, [](const auto& l, \
const auto& g) {return (pow(E,-2*l.FieldValues[0] + \
l.FieldValues[2])*pow(sin(l.Point[1]),3)*(-3*pow(g.Parameters[1],2)*pow(E,l.\
FieldValues[0] + l.FieldValues[1])*pow(l.FieldValues[6],2)*l.VIEValues[0] - \
3*pow(g.Parameters[1],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*pow(l.FieldValues[7],2)*l.VIEValues[0] + \
3*pow(g.Parameters[1],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*l.VIEValues[0]*pow(l.FieldValues[4],2) + \
3*pow(g.Parameters[1],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*l.VIEValues[0]*pow(l.FieldValues[5],2) + \
2*pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]))/2.;});\\\
ndescriptor.SetJacobianComponent(2, 3, 2, 0, [](const auto& l, const auto& g) \
{return (pow(E,-2*l.FieldValues[0] + l.FieldValues[2])*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),3)*(-(g.Parameters[0]*pow(E,\
l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[3]) + \
l.VIEValues[0]*(3*pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,l.FieldValues[\
0] + l.FieldValues[1])*l.FieldValues[6]*l.FieldValues[4] + \
3*pow(g.Parameters[1],2)*g.Parameters[0]*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*l.FieldValues[7]*l.FieldValues[5] + \
pow(E,l.FieldValues[2])*pow(-1 + \
l.Point[0],2)*sin(l.Point[1])*l.DerivativeValues[3][1])))/pow(g.Parameters[0],\
2);});\\ndescriptor.SetJacobianComponent(2, 4, 1, 0, [](const auto& l, const \
auto& g) {return \
-2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1])*l.FieldValues[7]*l.\
VIEValues[0]*pow(sin(l.Point[1]),2);});\\ndescriptor.SetJacobianComponent(2, \
4, 2, 0, [](const auto& l, const auto& g) {return \
(2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1])*pow(-1 + \
l.Point[0],2)*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2)*l.FieldValues[5])/\
g.Parameters[0];});\\ndescriptor.SetJacobianComponent(2, 5, 1, 0, [](const \
auto& l, const auto& g) {return \
2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1])*l.FieldValues[6]*l.VIEValues[\
0]*pow(sin(l.Point[1]),2);});\\ndescriptor.SetJacobianComponent(2, 5, 2, 0, \
[](const auto& l, const auto& g) {return \
(-2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1])*pow(-1 + \
l.Point[0],2)*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2)*l.FieldValues[4])/\
g.Parameters[0];});\\ndescriptor.SetJacobianComponent(2, 6, 1, 0, [](const \
auto& l, const auto& g) {return \
(-2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1])*pow(-1 + \
l.Point[0],2)*l.FieldValues[7]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2))/\
g.Parameters[0];});\\ndescriptor.SetJacobianComponent(2, 6, 2, 0, [](const \
auto& l, const auto& g) {return \
-2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1])*l.VIEValues[0]*pow(sin(l.\
Point[1]),2)*l.FieldValues[5];});\\ndescriptor.SetJacobianComponent(2, 7, 1, \
0, [](const auto& l, const auto& g) {return \
(2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1])*pow(-1 + \
l.Point[0],2)*l.FieldValues[6]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2))/\
g.Parameters[0];});\\ndescriptor.SetJacobianComponent(2, 7, 2, 0, [](const \
auto& l, const auto& g) {return \
2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1])*l.VIEValues[0]*pow(sin(l.\
Point[1]),2)*l.FieldValues[4];});\\ndescriptor.SetJacobianComponent(2, 8, 1, \
0, [](const auto& l, const auto& g) {return \
(2*pow(g.Parameters[1],2)*sin(l.Point[1])*(l.FieldValues[8]*cos(l.Point[1])*(\
pow(E,2*l.FieldValues[0]) + \
pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*pow(l.FieldValues[3],2)) + \
sin(l.Point[1])*((pow(E,2*l.FieldValues[0]) + \
pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*pow(l.FieldValues[3],2))*l.\
DerivativeValues[8][0] + \
pow(E,2*l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[\
9][0])))/pow(E,2*(l.FieldValues[0] + \
l.FieldValues[2]));});\\ndescriptor.SetJacobianComponent(2, 8, 2, 0, [](const \
auto& l, const auto& g) {return (2*pow(g.Parameters[1],2)*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),2)*(g.Parameters[0]*l.\
FieldValues[8]*(pow(E,2*l.FieldValues[0]) + \
pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*pow(l.FieldValues[3],2)) + \
pow(-1 + l.Point[0],2)*l.VIEValues[0]*((pow(E,2*l.FieldValues[0]) + \
pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*pow(l.FieldValues[3],2))*l.\
DerivativeValues[8][1] + \
pow(E,2*l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[\
9][1])))/(pow(g.Parameters[0],2)*pow(E,2*(l.FieldValues[0] + \
l.FieldValues[2])));});\\ndescriptor.SetJacobianComponent(2, 9, 1, 0, \
[](const auto& l, const auto& g) {return \
(2*pow(g.Parameters[1],2)*pow(sin(l.Point[1]),2)*(l.FieldValues[8]*cos(l.\
Point[1])*l.FieldValues[3] + \
sin(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[8][0] + \
l.DerivativeValues[9][0]))/pow(E,2*l.FieldValues[0]);});\\ndescriptor.\
SetJacobianComponent(2, 9, 2, 0, [](const auto& l, const auto& g) {return \
(2*pow(g.Parameters[1],2)*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),2)*(g.Parameters[0]*l.\
FieldValues[8]*sin(l.Point[1])*l.FieldValues[3] + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(sin(l.Point[1])*l.FieldValues[3]*l.\
DerivativeValues[8][1] + \
l.DerivativeValues[9][1])))/(pow(g.Parameters[0],2)*pow(E,2*l.FieldValues[0]))\
;});\\ndescriptor.SetJacobianComponent(2, 2, 2, 1, [](const auto& l, const \
auto& g) {return 1;});\\ndescriptor.SetJacobianComponent(2, 2, 0, 2, [](const \
auto& l, const auto& g) {return 1;});\\ndescriptor.SetJacobianComponent(2, 2, \
1, 3, [](const auto& l, const auto& g) {return \
1;});\\ndescriptor.SetJacobianComponent(2, 2, 1, 4, [](const auto& l, const \
auto& g) {return 1;});\\ndescriptor.SetJacobianComponent(3, 0, 0, 0, [](const \
auto& l, const auto& g) {return \
(2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[0] + l.FieldValues[1] - \
2*l.FieldValues[2])*l.VIEValues[0]*(g.Parameters[0]*pow(l.FieldValues[6],2)*(\
2*pow(E,l.FieldValues[1])*g.Parameters[4] - \
pow(E,l.FieldValues[2])*cos(l.Point[1]) + \
2*pow(E,l.FieldValues[1])*g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(\
l.Point[1]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[0][0] - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[2][0]) + \
g.Parameters[0]*pow(l.FieldValues[7],2)*(2*pow(E,l.FieldValues[1])*g.\
Parameters[4] - pow(E,l.FieldValues[2])*cos(l.Point[1]) + \
2*pow(E,l.FieldValues[1])*g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(\
l.Point[1]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[0][0] - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[2][0]) + \
g.Parameters[0]*(pow(l.FieldValues[4],2) + \
pow(l.FieldValues[5],2))*(2*pow(E,l.FieldValues[1])*g.Parameters[4] + \
pow(E,l.FieldValues[2])*cos(l.Point[1]) + \
2*pow(E,l.FieldValues[1])*g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(\
l.Point[1]) - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[0][0] + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[2][0]) + \
2*pow(E,l.FieldValues[2])*l.FieldValues[6]*sin(l.Point[1])*l.FieldValues[4]*(\
g.Parameters[0] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(l.DerivativeValues[0][2] - \
l.DerivativeValues[2][1])) + \
2*pow(E,l.FieldValues[2])*l.FieldValues[7]*sin(l.Point[1])*l.FieldValues[5]*(\
g.Parameters[0] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(l.DerivativeValues[0][2] - \
l.DerivativeValues[2][1]))))/g.Parameters[0];});\\ndescriptor.\
SetJacobianComponent(3, 1, 0, 0, [](const auto& l, const auto& g) {return \
(2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1] - \
2*l.FieldValues[2])*l.VIEValues[0]*(g.Parameters[0]*pow(E,l.FieldValues[0])*\
pow(l.FieldValues[6],2)*(4*pow(E,l.FieldValues[1])*g.Parameters[4] - \
pow(E,l.FieldValues[2])*cos(l.Point[1]) + \
4*pow(E,l.FieldValues[1])*g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(\
l.Point[1]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[0][0] - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[2][0]) + \
g.Parameters[0]*pow(E,l.FieldValues[0])*pow(l.FieldValues[7],2)*(4*pow(E,l.\
FieldValues[1])*g.Parameters[4] - pow(E,l.FieldValues[2])*cos(l.Point[1]) + \
4*pow(E,l.FieldValues[1])*g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(\
l.Point[1]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[0][0] - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[2][0]) + \
g.Parameters[0]*pow(E,l.FieldValues[0])*(pow(l.FieldValues[4],2) + \
pow(l.FieldValues[5],2))*(4*pow(E,l.FieldValues[1])*g.Parameters[4] + \
pow(E,l.FieldValues[2])*cos(l.Point[1]) + \
4*pow(E,l.FieldValues[1])*g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(\
l.Point[1]) - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[0][0] + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[2][0]) + \
2*pow(E,l.FieldValues[2])*l.FieldValues[6]*sin(l.Point[1])*(4*g.Parameters[0]*\
pow(E,l.FieldValues[1])*(g.Parameters[4]*l.FieldValues[3] + \
l.VIEValues[0]*(-g.Parameters[2] + g.Parameters[3]*l.FieldValues[9] + \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]))*l.\
FieldValues[5] + pow(E,l.FieldValues[0])*l.FieldValues[4]*(g.Parameters[0] - \
pow(-1 + l.Point[0],2)*l.VIEValues[0]*(l.DerivativeValues[0][2] - \
l.DerivativeValues[2][1]))) + \
2*pow(E,l.FieldValues[2])*l.FieldValues[7]*sin(l.Point[1])*(-4*g.Parameters[0]\
*pow(E,l.FieldValues[1])*g.Parameters[4]*l.FieldValues[3]*l.FieldValues[4] + \
g.Parameters[0]*pow(E,l.FieldValues[0])*l.FieldValues[5] + \
l.VIEValues[0]*(4*g.Parameters[0]*pow(E,l.FieldValues[1])*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3])*l.\
FieldValues[4] - pow(E,l.FieldValues[0])*pow(-1 + \
l.Point[0],2)*l.FieldValues[5]*(l.DerivativeValues[0][2] - \
l.DerivativeValues[2][1])))))/g.Parameters[0];});\\ndescriptor.\
SetJacobianComponent(3, 2, 0, 0, [](const auto& l, const auto& g) {return \
(-2*pow(g.Parameters[1],2)*(-4*pow(g.Parameters[0],2)*pow(l.FieldValues[8],2)*\
l.FieldValues[3] + 4*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[4]*l.VIEValues[0]*pow(l.FieldValues[4],2) + \
pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + l.FieldValues[1] + \
l.FieldValues[2])*cos(l.Point[1])*l.VIEValues[0]*pow(l.FieldValues[4],2) + \
4*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[3]*l.FieldValues[8]*pow(l.VIEValues[0],2)*\
sin(l.Point[1])*pow(l.FieldValues[4],2) + \
4*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[4]*l.VIEValues[0]*pow(l.FieldValues[5],2) + \
pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + l.FieldValues[1] + \
l.FieldValues[2])*cos(l.Point[1])*l.VIEValues[0]*pow(l.FieldValues[5],2) + \
4*pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[3]*l.FieldValues[8]*pow(l.VIEValues[0],2)*\
sin(l.Point[1])*pow(l.FieldValues[5],2) - \
4*pow(g.Parameters[0],2)*l.FieldValues[8]*sin(2*l.Point[1])*l.FieldValues[3]*\
l.DerivativeValues[8][0] - \
2*pow(g.Parameters[0],2)*l.FieldValues[3]*pow(l.DerivativeValues[8][0],2) + \
2*pow(g.Parameters[0],2)*cos(2*l.Point[1])*l.FieldValues[3]*pow(l.\
DerivativeValues[8][0],2) - pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
l.FieldValues[2])*l.VIEValues[0]*sin(l.Point[1])*pow(l.FieldValues[4],2)*l.\
DerivativeValues[0][0] - pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
l.FieldValues[2])*l.VIEValues[0]*sin(l.Point[1])*pow(l.FieldValues[5],2)*l.\
DerivativeValues[0][0] + pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
l.FieldValues[2])*l.VIEValues[0]*sin(l.Point[1])*pow(l.FieldValues[4],2)*l.\
DerivativeValues[2][0] + pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1] + \
l.FieldValues[2])*l.VIEValues[0]*sin(l.Point[1])*pow(l.FieldValues[5],2)*l.\
DerivativeValues[2][0] + pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*pow(l.FieldValues[6],2)*l.VIEValues[0]*(4*pow(E,l.\
FieldValues[1])*g.Parameters[4] - pow(E,l.FieldValues[2])*cos(l.Point[1]) + \
4*pow(E,l.FieldValues[1])*g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(\
l.Point[1]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[0][0] - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[2][0]) + \
pow(g.Parameters[0],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*pow(l.FieldValues[7],2)*l.VIEValues[0]*(4*pow(E,l.\
FieldValues[1])*g.Parameters[4] - pow(E,l.FieldValues[2])*cos(l.Point[1]) + \
4*pow(E,l.FieldValues[1])*g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(\
l.Point[1]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[0][0] - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[2][0]) - \
4*pow(g.Parameters[0],2)*l.FieldValues[8]*cos(l.Point[1])*l.DerivativeValues[\
9][0] - 4*pow(g.Parameters[0],2)*sin(l.Point[1])*l.DerivativeValues[8][0]*l.\
DerivativeValues[9][0] - \
4*g.Parameters[0]*l.FieldValues[8]*l.VIEValues[0]*l.FieldValues[3]*l.\
DerivativeValues[8][1] + \
8*g.Parameters[0]*l.Point[0]*l.FieldValues[8]*l.VIEValues[0]*l.FieldValues[3]*\
l.DerivativeValues[8][1] - \
4*g.Parameters[0]*pow(l.Point[0],2)*l.FieldValues[8]*l.VIEValues[0]*l.\
FieldValues[3]*l.DerivativeValues[8][1] + \
4*g.Parameters[0]*l.FieldValues[8]*cos(2*l.Point[1])*l.VIEValues[0]*l.\
FieldValues[3]*l.DerivativeValues[8][1] - \
8*g.Parameters[0]*l.Point[0]*l.FieldValues[8]*cos(2*l.Point[1])*l.VIEValues[0]\
*l.FieldValues[3]*l.DerivativeValues[8][1] + \
4*g.Parameters[0]*pow(l.Point[0],2)*l.FieldValues[8]*cos(2*l.Point[1])*l.\
VIEValues[0]*l.FieldValues[3]*l.DerivativeValues[8][1] - \
2*pow(l.VIEValues[0],2)*l.FieldValues[3]*pow(l.DerivativeValues[8][1],2) + \
8*l.Point[0]*pow(l.VIEValues[0],2)*l.FieldValues[3]*pow(l.DerivativeValues[8][\
1],2) - 12*pow(l.Point[0],2)*pow(l.VIEValues[0],2)*l.FieldValues[3]*pow(l.\
DerivativeValues[8][1],2) + \
8*pow(l.Point[0],3)*pow(l.VIEValues[0],2)*l.FieldValues[3]*pow(l.\
DerivativeValues[8][1],2) - \
2*pow(l.Point[0],4)*pow(l.VIEValues[0],2)*l.FieldValues[3]*pow(l.\
DerivativeValues[8][1],2) + \
2*cos(2*l.Point[1])*pow(l.VIEValues[0],2)*l.FieldValues[3]*pow(l.\
DerivativeValues[8][1],2) - \
8*l.Point[0]*cos(2*l.Point[1])*pow(l.VIEValues[0],2)*l.FieldValues[3]*pow(l.\
DerivativeValues[8][1],2) + \
12*pow(l.Point[0],2)*cos(2*l.Point[1])*pow(l.VIEValues[0],2)*l.FieldValues[3]*\
pow(l.DerivativeValues[8][1],2) - \
8*pow(l.Point[0],3)*cos(2*l.Point[1])*pow(l.VIEValues[0],2)*l.FieldValues[3]*\
pow(l.DerivativeValues[8][1],2) + \
2*pow(l.Point[0],4)*cos(2*l.Point[1])*pow(l.VIEValues[0],2)*l.FieldValues[3]*\
pow(l.DerivativeValues[8][1],2) + 2*g.Parameters[0]*pow(E,l.FieldValues[1] + \
l.FieldValues[2])*l.FieldValues[6]*l.VIEValues[0]*sin(l.Point[1])*(2*g.\
Parameters[0]*pow(E,l.FieldValues[1])*(g.Parameters[4]*l.FieldValues[3] + \
l.VIEValues[0]*(-g.Parameters[2] + g.Parameters[3]*l.FieldValues[9] + \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]))*l.\
FieldValues[5] + pow(E,l.FieldValues[0])*l.FieldValues[4]*(g.Parameters[0] - \
pow(-1 + l.Point[0],2)*l.VIEValues[0]*(l.DerivativeValues[0][2] - \
l.DerivativeValues[2][1]))) + 2*g.Parameters[0]*pow(E,l.FieldValues[1] + \
l.FieldValues[2])*l.FieldValues[7]*l.VIEValues[0]*sin(l.Point[1])*(-2*g.\
Parameters[0]*pow(E,l.FieldValues[1])*g.Parameters[4]*l.FieldValues[3]*l.\
FieldValues[4] + g.Parameters[0]*pow(E,l.FieldValues[0])*l.FieldValues[5] + \
l.VIEValues[0]*(2*g.Parameters[0]*pow(E,l.FieldValues[1])*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3])*l.\
FieldValues[4] - pow(E,l.FieldValues[0])*pow(-1 + \
l.Point[0],2)*l.FieldValues[5]*(l.DerivativeValues[0][2] - \
l.DerivativeValues[2][1]))) - \
4*g.Parameters[0]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1])*l.\
DerivativeValues[9][1] + \
8*g.Parameters[0]*l.Point[0]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1])*\
l.DerivativeValues[9][1] - \
4*g.Parameters[0]*pow(l.Point[0],2)*l.FieldValues[8]*l.VIEValues[0]*sin(l.\
Point[1])*l.DerivativeValues[9][1] - \
4*pow(l.VIEValues[0],2)*sin(l.Point[1])*l.DerivativeValues[8][1]*l.\
DerivativeValues[9][1] + \
16*l.Point[0]*pow(l.VIEValues[0],2)*sin(l.Point[1])*l.DerivativeValues[8][1]*\
l.DerivativeValues[9][1] - \
24*pow(l.Point[0],2)*pow(l.VIEValues[0],2)*sin(l.Point[1])*l.DerivativeValues[\
8][1]*l.DerivativeValues[9][1] + \
16*pow(l.Point[0],3)*pow(l.VIEValues[0],2)*sin(l.Point[1])*l.DerivativeValues[\
8][1]*l.DerivativeValues[9][1] - \
4*pow(l.Point[0],4)*pow(l.VIEValues[0],2)*sin(l.Point[1])*l.DerivativeValues[\
8][1]*l.DerivativeValues[9][1]))/(pow(g.Parameters[0],2)*pow(E,2*l.\
FieldValues[2]));});\\ndescriptor.SetJacobianComponent(3, 3, 0, 0, [](const \
auto& l, const auto& g) {return \
-(((2*pow(g.Parameters[1],2)*(2*pow(g.Parameters[0],2)*pow(l.FieldValues[8],2)\
 + 4*pow(g.Parameters[0],2)*pow(E,2*l.FieldValues[1] + \
l.FieldValues[2])*l.FieldValues[7]*l.VIEValues[0]*sin(l.Point[1])*(g.\
Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*l.\
FieldValues[4] - 4*pow(g.Parameters[0],2)*pow(E,2*l.FieldValues[1] + \
l.FieldValues[2])*l.FieldValues[6]*l.VIEValues[0]*sin(l.Point[1])*(g.\
Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*l.\
FieldValues[5] + \
2*pow(g.Parameters[0],2)*l.FieldValues[8]*sin(2*l.Point[1])*l.\
DerivativeValues[8][0] + \
pow(g.Parameters[0],2)*pow(l.DerivativeValues[8][0],2) - \
pow(g.Parameters[0],2)*cos(2*l.Point[1])*pow(l.DerivativeValues[8][0],2) + \
2*g.Parameters[0]*pow(-1 + \
l.Point[0],2)*l.FieldValues[8]*l.VIEValues[0]*l.DerivativeValues[8][1] - \
2*g.Parameters[0]*pow(-1 + \
l.Point[0],2)*l.FieldValues[8]*cos(2*l.Point[1])*l.VIEValues[0]*l.\
DerivativeValues[8][1] + pow(-1 + \
l.Point[0],4)*pow(l.VIEValues[0],2)*pow(l.DerivativeValues[8][1],2) - pow(-1 \
+ l.Point[0],4)*cos(2*l.Point[1])*pow(l.VIEValues[0],2)*pow(l.\
DerivativeValues[8][1],2)))/pow(E,2*l.FieldValues[2]) + \
g.Parameters[0]*pow(sin(l.Point[1]),2)*(2*g.Parameters[0] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[0][2] + 3*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[2][1]))/pow(g.Parameters[0],2)\
);});\\ndescriptor.SetJacobianComponent(3, 4, 0, 0, [](const auto& l, const \
auto& g) {return (-4*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1] - \
2*l.FieldValues[2])*l.VIEValues[0]*(2*g.Parameters[0]*pow(E,l.FieldValues[1] \
+ l.FieldValues[2])*l.FieldValues[7]*sin(l.Point[1])*(g.Parameters[4]*l.\
FieldValues[3] + l.VIEValues[0]*(-g.Parameters[2] + \
g.Parameters[3]*l.FieldValues[9] + \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3])) - \
g.Parameters[0]*pow(E,l.FieldValues[0])*l.FieldValues[4]*(2*pow(E,l.\
FieldValues[1])*g.Parameters[4] + pow(E,l.FieldValues[2])*cos(l.Point[1]) + \
2*pow(E,l.FieldValues[1])*g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(\
l.Point[1]) - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[0][0] + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[2][0]) - \
pow(E,l.FieldValues[0] + \
l.FieldValues[2])*l.FieldValues[6]*sin(l.Point[1])*(g.Parameters[0] - pow(-1 \
+ l.Point[0],2)*l.VIEValues[0]*(l.DerivativeValues[0][2] - \
l.DerivativeValues[2][1]))))/g.Parameters[0];});\\ndescriptor.\
SetJacobianComponent(3, 5, 0, 0, [](const auto& l, const auto& g) {return \
(4*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1] - \
2*l.FieldValues[2])*l.VIEValues[0]*(g.Parameters[0]*(2*pow(E,l.FieldValues[1] \
+ l.FieldValues[2])*l.FieldValues[6]*sin(l.Point[1])*(g.Parameters[4]*l.\
FieldValues[3] + l.VIEValues[0]*(-g.Parameters[2] + \
g.Parameters[3]*l.FieldValues[9] + \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3])) + \
pow(E,l.FieldValues[0])*l.FieldValues[5]*(2*pow(E,l.FieldValues[1])*g.\
Parameters[4] + pow(E,l.FieldValues[2])*cos(l.Point[1]) + \
2*pow(E,l.FieldValues[1])*g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(\
l.Point[1]) - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[0][0] + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[2][0])) + \
pow(E,l.FieldValues[0] + \
l.FieldValues[2])*l.FieldValues[7]*sin(l.Point[1])*(g.Parameters[0] - pow(-1 \
+ l.Point[0],2)*l.VIEValues[0]*(l.DerivativeValues[0][2] - \
l.DerivativeValues[2][1]))))/g.Parameters[0];});\\ndescriptor.\
SetJacobianComponent(3, 6, 0, 0, [](const auto& l, const auto& g) {return \
(4*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1] - \
2*l.FieldValues[2])*l.VIEValues[0]*(g.Parameters[0]*pow(E,l.FieldValues[0])*l.\
FieldValues[6]*(2*pow(E,l.FieldValues[1])*g.Parameters[4] - \
pow(E,l.FieldValues[2])*cos(l.Point[1]) + \
2*pow(E,l.FieldValues[1])*g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(\
l.Point[1]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[0][0] - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[2][0]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*(2*g.Parameters[0]*pow(E,l.\
FieldValues[1])*(g.Parameters[4]*l.FieldValues[3] + \
l.VIEValues[0]*(-g.Parameters[2] + g.Parameters[3]*l.FieldValues[9] + \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]))*l.\
FieldValues[5] + pow(E,l.FieldValues[0])*l.FieldValues[4]*(g.Parameters[0] - \
pow(-1 + l.Point[0],2)*l.VIEValues[0]*(l.DerivativeValues[0][2] - \
l.DerivativeValues[2][1])))))/g.Parameters[0];});\\ndescriptor.\
SetJacobianComponent(3, 7, 0, 0, [](const auto& l, const auto& g) {return \
(4*pow(g.Parameters[1],2)*pow(E,l.FieldValues[1] - \
2*l.FieldValues[2])*l.VIEValues[0]*(g.Parameters[0]*pow(E,l.FieldValues[0])*l.\
FieldValues[7]*(2*pow(E,l.FieldValues[1])*g.Parameters[4] - \
pow(E,l.FieldValues[2])*cos(l.Point[1]) + \
2*pow(E,l.FieldValues[1])*g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(\
l.Point[1]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[0][0] - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[2][0]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*(-2*g.Parameters[0]*pow(E,l.\
FieldValues[1])*g.Parameters[4]*l.FieldValues[3]*l.FieldValues[4] + \
g.Parameters[0]*pow(E,l.FieldValues[0])*l.FieldValues[5] + \
l.VIEValues[0]*(2*g.Parameters[0]*pow(E,l.FieldValues[1])*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3])*l.\
FieldValues[4] - pow(E,l.FieldValues[0])*pow(-1 + \
l.Point[0],2)*l.FieldValues[5]*(l.DerivativeValues[0][2] - \
l.DerivativeValues[2][1])))))/g.Parameters[0];});\\ndescriptor.\
SetJacobianComponent(3, 8, 0, 0, [](const auto& l, const auto& g) {return \
(4*pow(g.Parameters[1],2)*(pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[3]*pow(l.FieldValues[6],2)*pow(l.VIEValues[0]\
,2)*sin(l.Point[1]) + pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[3]*pow(l.FieldValues[7],2)*pow(l.VIEValues[0]\
,2)*sin(l.Point[1]) - 2*l.FieldValues[8]*l.FieldValues[3] - \
2*pow(E,2*l.FieldValues[1] + \
l.FieldValues[2])*g.Parameters[3]*l.FieldValues[7]*pow(l.VIEValues[0],2)*pow(\
sin(l.Point[1]),2)*l.FieldValues[3]*l.FieldValues[4] + pow(E,l.FieldValues[0] \
+ 2*l.FieldValues[1])*g.Parameters[3]*pow(l.VIEValues[0],2)*sin(l.Point[1])*\
pow(l.FieldValues[4],2) + 2*pow(E,2*l.FieldValues[1] + \
l.FieldValues[2])*g.Parameters[3]*l.FieldValues[6]*pow(l.VIEValues[0],2)*pow(\
sin(l.Point[1]),2)*l.FieldValues[3]*l.FieldValues[5] + pow(E,l.FieldValues[0] \
+ 2*l.FieldValues[1])*g.Parameters[3]*pow(l.VIEValues[0],2)*sin(l.Point[1])*\
pow(l.FieldValues[5],2) - \
sin(2*l.Point[1])*l.FieldValues[3]*l.DerivativeValues[8][0] - \
cos(l.Point[1])*l.DerivativeValues[9][0] - (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.FieldValues[3]*l.DerivativeValues[8][1])/g.\
Parameters[0] + (pow(-1 + \
l.Point[0],2)*cos(2*l.Point[1])*l.VIEValues[0]*l.FieldValues[3]*l.\
DerivativeValues[8][1])/g.Parameters[0] - (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*l.DerivativeValues[9][1])/g.\
Parameters[0]))/pow(E,2*l.FieldValues[2]);});\\ndescriptor.\
SetJacobianComponent(3, 9, 0, 0, [](const auto& l, const auto& g) {return \
-8*pow(g.Parameters[1],2)*pow(E,2*l.FieldValues[1] - \
l.FieldValues[2])*g.Parameters[3]*pow(l.VIEValues[0],2)*sin(l.Point[1])*(l.\
FieldValues[7]*l.FieldValues[4] - \
l.FieldValues[6]*l.FieldValues[5]);});\\ndescriptor.SetJacobianComponent(3, \
0, 1, 0, [](const auto& l, const auto& g) {return \
-((sin(l.Point[1])*(-2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*pow(l.FieldValues[6],2)*l.VIEValues[0] - \
2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*pow(l.FieldValues[7],2)*l.VIEValues[0] + \
2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*l.VIEValues[0]*pow(l.FieldValues[4],2) + \
2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*l.VIEValues[0]*pow(l.FieldValues[5],2) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]))/pow(E,l.\
FieldValues[2]));});\\ndescriptor.SetJacobianComponent(3, 0, 3, 0, [](const \
auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*(-4*pow(g.Parameters[1],2)*g.\
Parameters[0]*pow(E,l.FieldValues[0] + l.FieldValues[1] - \
l.FieldValues[2])*l.VIEValues[0]*(l.FieldValues[6]*l.FieldValues[4] + \
l.FieldValues[7]*l.FieldValues[5]) + \
sin(l.Point[1])*(g.Parameters[0]*l.FieldValues[3] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])))/pow(g.Parameters[0],\
2);});\\ndescriptor.SetJacobianComponent(3, 2, 1, 0, [](const auto& l, const \
auto& g) {return \
(sin(l.Point[1])*(-2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*pow(l.FieldValues[6],2)*l.VIEValues[0] - \
2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*pow(l.FieldValues[7],2)*l.VIEValues[0] + \
2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*l.VIEValues[0]*pow(l.FieldValues[4],2) + \
2*pow(g.Parameters[1],2)*pow(E,l.FieldValues[0] + \
l.FieldValues[1])*l.VIEValues[0]*pow(l.FieldValues[5],2) + \
3*pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]))/pow(E,l.\
FieldValues[2]);});\\ndescriptor.SetJacobianComponent(3, 2, 2, 0, [](const \
auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*(4*pow(g.Parameters[1],2)*g.\
Parameters[0]*pow(E,l.FieldValues[0] + l.FieldValues[1] - \
l.FieldValues[2])*l.VIEValues[0]*(l.FieldValues[6]*l.FieldValues[4] + \
l.FieldValues[7]*l.FieldValues[5]) - \
3*sin(l.Point[1])*(g.Parameters[0]*l.FieldValues[3] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])))/pow(g.Parameters[0],\
2);});\\ndescriptor.SetJacobianComponent(3, 3, 1, 0, [](const auto& l, const \
auto& g) {return sin(l.Point[1])*(-(sin(l.Point[1])*l.DerivativeValues[0][0]) \
+ 3*(cos(l.Point[1]) + \
sin(l.Point[1])*l.DerivativeValues[2][0]));});\\ndescriptor.\
SetJacobianComponent(3, 3, 2, 0, [](const auto& l, const auto& g) {return \
(pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),2)*(2*g.Parameters[0] - (-1 \
+ l.Point[0])*l.VIEValues[0]*(-2 + (-1 + l.Point[0])*l.DerivativeValues[0][2] \
- 3*(-1 + \
l.Point[0])*l.DerivativeValues[2][1])))/pow(g.Parameters[0],2);});\\\
ndescriptor.SetJacobianComponent(3, 3, 3, 0, [](const auto& l, const auto& g) \
{return pow(sin(l.Point[1]),2);});\\ndescriptor.SetJacobianComponent(3, 3, 4, \
0, [](const auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],4)*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2))/pow(g.Parameters[\
0],2);});\\ndescriptor.SetJacobianComponent(3, 8, 1, 0, [](const auto& l, \
const auto& g) {return \
(-4*pow(g.Parameters[1],2)*(l.FieldValues[8]*sin(2*l.Point[1])*l.FieldValues[\
3] - (-1 + cos(2*l.Point[1]))*l.FieldValues[3]*l.DerivativeValues[8][0] + \
sin(l.Point[1])*l.DerivativeValues[9][0]))/pow(E,2*l.FieldValues[2]);});\\\
ndescriptor.SetJacobianComponent(3, 8, 2, 0, [](const auto& l, const auto& g) \
{return (4*pow(g.Parameters[1],2)*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(g.Parameters[0]*l.FieldValues[8]*(-1 + \
cos(2*l.Point[1]))*l.FieldValues[3] + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*((-1 + \
cos(2*l.Point[1]))*l.FieldValues[3]*l.DerivativeValues[8][1] - \
sin(l.Point[1])*l.DerivativeValues[9][1])))/(pow(g.Parameters[0],2)*pow(E,2*l.\
FieldValues[2]));});\\ndescriptor.SetJacobianComponent(3, 9, 1, 0, [](const \
auto& l, const auto& g) {return \
(-4*pow(g.Parameters[1],2)*(l.FieldValues[8]*cos(l.Point[1]) + \
sin(l.Point[1])*l.DerivativeValues[8][0]))/pow(E,2*l.FieldValues[2]);});\\\
ndescriptor.SetJacobianComponent(3, 9, 2, 0, [](const auto& l, const auto& g) \
{return (-4*pow(g.Parameters[1],2)*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*(g.Parameters[0]*l.FieldValues[8]\
 + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[8][1]))/(pow(g.Parameters[0],\
2)*pow(E,2*l.FieldValues[2]));});\\ndescriptor.SetJacobianComponent(3, 3, 0, \
1, [](const auto& l, const auto& g) {return \
1;});\\ndescriptor.SetJacobianComponent(3, 3, 0, 2, [](const auto& l, const \
auto& g) {return 1;});\\ndescriptor.SetJacobianComponent(3, 3, 1, 3, [](const \
auto& l, const auto& g) {return 1;});\\ndescriptor.SetJacobianComponent(3, 3, \
1, 4, [](const auto& l, const auto& g) {return \
1;});\\ndescriptor.SetJacobianComponent(4, 0, 0, 0, [](const auto& l, const \
auto& g) {return \
(sin(l.Point[1])*(-(g.Parameters[0]*l.FieldValues[5]*(-4*pow(E,l.FieldValues[\
1])*g.Parameters[4]*l.FieldValues[3] + \
4*pow(E,l.FieldValues[1])*l.VIEValues[0]*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0])) + \
pow(E,l.FieldValues[2])*l.FieldValues[7]*sin(l.Point[1])*(g.Parameters[0]*l.\
FieldValues[3] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])))/(4.*g.Parameters[0]*\
pow(E,l.FieldValues[0]));});\\ndescriptor.SetJacobianComponent(4, 1, 0, 0, \
[](const auto& l, const auto& g) {return \
pow(E,l.FieldValues[1])*((l.FieldValues[6]*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1])))/pow(E,l.\
FieldValues[2]) - \
(sin(l.Point[1])*(g.Parameters[4]*l.FieldValues[3]*l.FieldValues[5] + \
l.VIEValues[0]*(-(pow(E,l.FieldValues[0])*g.Parameters[5]*l.FieldValues[4]) + \
(-g.Parameters[2] + g.Parameters[3]*l.FieldValues[9] + \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3])*l.\
FieldValues[5])))/pow(E,l.FieldValues[0]));});\\ndescriptor.\
SetJacobianComponent(4, 2, 0, 0, [](const auto& l, const auto& g) {return \
-(pow(E,l.FieldValues[1] - \
l.FieldValues[2])*l.FieldValues[6]*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))) + \
(pow(E,-l.FieldValues[0] + \
l.FieldValues[2])*pow(sin(l.Point[1]),2)*(g.Parameters[0]*l.FieldValues[5]*l.\
DerivativeValues[3][0] + \
l.FieldValues[7]*(-(g.Parameters[0]*l.FieldValues[3]) + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])))/(4.*g.Parameters[0]);\
});\\ndescriptor.SetJacobianComponent(4, 3, 0, 0, [](const auto& l, const \
auto& g) {return \
-0.25*(sin(l.Point[1])*(pow(E,l.FieldValues[2])*l.FieldValues[7]*sin(l.Point[\
1]) + 4*pow(E,l.FieldValues[1])*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*l.\
FieldValues[5]))/pow(E,l.FieldValues[0]);});\\ndescriptor.\
SetJacobianComponent(4, 4, 0, 0, [](const auto& l, const auto& g) {return \
sin(l.Point[1]) + \
(l.VIEValues[0]*sin(l.Point[1])*(2*g.Parameters[0]*pow(E,l.FieldValues[1])*g.\
Parameters[5] + pow(-1 + l.Point[0],2)*l.DerivativeValues[0][2] + pow(-1 + \
l.Point[0],2)*l.DerivativeValues[1][1] + l.DerivativeValues[2][1] - \
2*l.Point[0]*l.DerivativeValues[2][1] + \
pow(l.Point[0],2)*l.DerivativeValues[2][1]))/(2.*g.Parameters[0]);});\\\
ndescriptor.SetJacobianComponent(4, 5, 0, 0, [](const auto& l, const auto& g) \
{return (sin(l.Point[1])*(-4*pow(E,l.FieldValues[1])*g.Parameters[4]*l.\
FieldValues[3] + 4*pow(E,l.FieldValues[1])*l.VIEValues[0]*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]))/(4.*pow(E,\
l.FieldValues[0]));});\\ndescriptor.SetJacobianComponent(4, 6, 0, 0, [](const \
auto& l, const auto& g) {return pow(E,l.FieldValues[1] - \
l.FieldValues[2])*g.Parameters[4] - cos(l.Point[1])/2. + \
pow(E,l.FieldValues[1] - \
l.FieldValues[2])*g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[\
1]) - (sin(l.Point[1])*(l.DerivativeValues[0][0] + l.DerivativeValues[1][3] + \
l.DerivativeValues[2][0]))/2.;});\\ndescriptor.SetJacobianComponent(4, 7, 0, \
0, [](const auto& l, const auto& g) {return (pow(E,-l.FieldValues[0] + \
l.FieldValues[2])*pow(sin(l.Point[1]),2)*(-l.FieldValues[3] + (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])/g.Parameters[0]))/4.;})\
;\\ndescriptor.SetJacobianComponent(4, 8, 0, 0, [](const auto& l, const auto& \
g) {return \
pow(E,l.FieldValues[1])*g.Parameters[3]*l.VIEValues[0]*sin(l.Point[1])*(l.\
FieldValues[6]/pow(E,l.FieldValues[2]) - \
(sin(l.Point[1])*l.FieldValues[3]*l.FieldValues[5])/pow(E,l.FieldValues[0]));}\
);\\ndescriptor.SetJacobianComponent(4, 9, 0, 0, [](const auto& l, const \
auto& g) {return -(pow(E,-l.FieldValues[0] + \
l.FieldValues[1])*g.Parameters[3]*l.VIEValues[0]*sin(l.Point[1])*l.\
FieldValues[5]);});\\ndescriptor.SetJacobianComponent(4, 0, 1, 0, [](const \
auto& l, const auto& g) {return \
-0.5*(l.FieldValues[6]*sin(l.Point[1]));});\\ndescriptor.SetJacobianComponent(\
4, 0, 3, 0, [](const auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*l.FieldValues[4])/(2.*g.\
Parameters[0]);});\\ndescriptor.SetJacobianComponent(4, 1, 2, 0, [](const \
auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*l.FieldValues[4])/(2.*g.\
Parameters[0]);});\\ndescriptor.SetJacobianComponent(4, 1, 4, 0, [](const \
auto& l, const auto& g) {return \
-0.5*(l.FieldValues[6]*sin(l.Point[1]));});\\ndescriptor.SetJacobianComponent(\
4, 2, 1, 0, [](const auto& l, const auto& g) {return \
-0.5*(l.FieldValues[6]*sin(l.Point[1]));});\\ndescriptor.SetJacobianComponent(\
4, 2, 2, 0, [](const auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*l.FieldValues[4])/(2.*g.\
Parameters[0]);});\\ndescriptor.SetJacobianComponent(4, 3, 1, 0, [](const \
auto& l, const auto& g) {return (pow(E,-l.FieldValues[0] + \
l.FieldValues[2])*pow(sin(l.Point[1]),2)*l.FieldValues[5])/4.;});\\\
ndescriptor.SetJacobianComponent(4, 3, 2, 0, [](const auto& l, const auto& g) \
{return (pow(E,-l.FieldValues[0] + l.FieldValues[2])*pow(-1 + \
l.Point[0],2)*l.FieldValues[7]*l.VIEValues[0]*pow(sin(l.Point[1]),2))/(4.*g.\
Parameters[0]);});\\ndescriptor.SetJacobianComponent(4, 4, 2, 0, [](const \
auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1]))/g.Parameters[0];});\\\
ndescriptor.SetJacobianComponent(4, 6, 2, 0, [](const auto& l, const auto& g) \
{return -sin(l.Point[1]);});\\ndescriptor.SetJacobianComponent(4, 4, 2, 1, \
[](const auto& l, const auto& g) {return \
1;});\\ndescriptor.SetJacobianComponent(4, 4, 0, 2, [](const auto& l, const \
auto& g) {return 1;});\\ndescriptor.SetJacobianComponent(4, 4, 0, 3, [](const \
auto& l, const auto& g) {return 1;});\\ndescriptor.SetJacobianComponent(4, 4, \
1, 4, [](const auto& l, const auto& g) {return \
1;});\\ndescriptor.SetJacobianComponent(5, 0, 0, 0, [](const auto& l, const \
auto& g) {return \
(sin(l.Point[1])*(g.Parameters[0]*l.FieldValues[4]*(-4*pow(E,l.FieldValues[1])\
*g.Parameters[4]*l.FieldValues[3] + \
4*pow(E,l.FieldValues[1])*l.VIEValues[0]*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) - \
pow(E,l.FieldValues[2])*l.FieldValues[6]*sin(l.Point[1])*(g.Parameters[0]*l.\
FieldValues[3] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])))/(4.*g.Parameters[0]*\
pow(E,l.FieldValues[0]));});\\ndescriptor.SetJacobianComponent(5, 1, 0, 0, \
[](const auto& l, const auto& g) {return \
pow(E,l.FieldValues[1])*((l.FieldValues[7]*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1])))/pow(E,l.\
FieldValues[2]) + \
(sin(l.Point[1])*(g.Parameters[4]*l.FieldValues[3]*l.FieldValues[4] + \
l.VIEValues[0]*((-g.Parameters[2] + g.Parameters[3]*l.FieldValues[9] + \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3])*l.\
FieldValues[4] - \
pow(E,l.FieldValues[0])*g.Parameters[5]*l.FieldValues[5])))/pow(E,l.\
FieldValues[0]));});\\ndescriptor.SetJacobianComponent(5, 2, 0, 0, [](const \
auto& l, const auto& g) {return -(pow(E,l.FieldValues[1] - \
l.FieldValues[2])*l.FieldValues[7]*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))) - \
(pow(E,-l.FieldValues[0] + \
l.FieldValues[2])*pow(sin(l.Point[1]),2)*(g.Parameters[0]*l.FieldValues[4]*l.\
DerivativeValues[3][0] + \
l.FieldValues[6]*(-(g.Parameters[0]*l.FieldValues[3]) + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])))/(4.*g.Parameters[0]);\
});\\ndescriptor.SetJacobianComponent(5, 3, 0, 0, [](const auto& l, const \
auto& g) {return \
(sin(l.Point[1])*(pow(E,l.FieldValues[2])*l.FieldValues[6]*sin(l.Point[1]) + \
4*pow(E,l.FieldValues[1])*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*l.\
FieldValues[4]))/(4.*pow(E,l.FieldValues[0]));});\\ndescriptor.\
SetJacobianComponent(5, 4, 0, 0, [](const auto& l, const auto& g) {return \
(sin(l.Point[1])*(4*pow(E,l.FieldValues[1])*g.Parameters[4]*l.FieldValues[3] \
- 4*pow(E,l.FieldValues[1])*l.VIEValues[0]*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]) - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]))/(4.*pow(E,\
l.FieldValues[0]));});\\ndescriptor.SetJacobianComponent(5, 5, 0, 0, [](const \
auto& l, const auto& g) {return sin(l.Point[1])*(1 - \
pow(E,l.FieldValues[1])*g.Parameters[5]*l.VIEValues[0] + (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(l.DerivativeValues[0][2] + \
l.DerivativeValues[1][1] + \
l.DerivativeValues[2][1]))/(2.*g.Parameters[0]));});\\ndescriptor.\
SetJacobianComponent(5, 6, 0, 0, [](const auto& l, const auto& g) {return \
(pow(E,-l.FieldValues[0] + \
l.FieldValues[2])*pow(sin(l.Point[1]),2)*(g.Parameters[0]*l.FieldValues[3] - \
pow(-1 + l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1]))/(4.*g.\
Parameters[0]);});\\ndescriptor.SetJacobianComponent(5, 7, 0, 0, [](const \
auto& l, const auto& g) {return pow(E,l.FieldValues[1] - \
l.FieldValues[2])*g.Parameters[4] - cos(l.Point[1])/2. + \
pow(E,l.FieldValues[1] - \
l.FieldValues[2])*g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[\
1]) - (sin(l.Point[1])*(l.DerivativeValues[0][0] + l.DerivativeValues[1][3] + \
l.DerivativeValues[2][0]))/2.;});\\ndescriptor.SetJacobianComponent(5, 8, 0, \
0, [](const auto& l, const auto& g) {return \
-(pow(E,l.FieldValues[1])*g.Parameters[3]*l.VIEValues[0]*sin(l.Point[1])*(-(l.\
FieldValues[7]/pow(E,l.FieldValues[2])) - \
(sin(l.Point[1])*l.FieldValues[3]*l.FieldValues[4])/pow(E,l.FieldValues[0])));\
});\\ndescriptor.SetJacobianComponent(5, 9, 0, 0, [](const auto& l, const \
auto& g) {return pow(E,-l.FieldValues[0] + \
l.FieldValues[1])*g.Parameters[3]*l.VIEValues[0]*sin(l.Point[1])*l.\
FieldValues[4];});\\ndescriptor.SetJacobianComponent(5, 0, 1, 0, [](const \
auto& l, const auto& g) {return \
-0.5*(l.FieldValues[7]*sin(l.Point[1]));});\\ndescriptor.SetJacobianComponent(\
5, 0, 3, 0, [](const auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*l.FieldValues[5])/(2.*g.\
Parameters[0]);});\\ndescriptor.SetJacobianComponent(5, 1, 2, 0, [](const \
auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*l.FieldValues[5])/(2.*g.\
Parameters[0]);});\\ndescriptor.SetJacobianComponent(5, 1, 4, 0, [](const \
auto& l, const auto& g) {return \
-0.5*(l.FieldValues[7]*sin(l.Point[1]));});\\ndescriptor.SetJacobianComponent(\
5, 2, 1, 0, [](const auto& l, const auto& g) {return \
-0.5*(l.FieldValues[7]*sin(l.Point[1]));});\\ndescriptor.SetJacobianComponent(\
5, 2, 2, 0, [](const auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*l.FieldValues[5])/(2.*g.\
Parameters[0]);});\\ndescriptor.SetJacobianComponent(5, 3, 1, 0, [](const \
auto& l, const auto& g) {return -0.25*(pow(E,-l.FieldValues[0] + \
l.FieldValues[2])*pow(sin(l.Point[1]),2)*l.FieldValues[4]);});\\ndescriptor.\
SetJacobianComponent(5, 3, 2, 0, [](const auto& l, const auto& g) {return \
-0.25*(pow(E,-l.FieldValues[0] + l.FieldValues[2])*pow(-1 + \
l.Point[0],2)*l.FieldValues[6]*l.VIEValues[0]*pow(sin(l.Point[1]),2))/g.\
Parameters[0];});\\ndescriptor.SetJacobianComponent(5, 5, 2, 0, [](const \
auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1]))/g.Parameters[0];});\\\
ndescriptor.SetJacobianComponent(5, 7, 2, 0, [](const auto& l, const auto& g) \
{return -sin(l.Point[1]);});\\ndescriptor.SetJacobianComponent(5, 5, 2, 1, \
[](const auto& l, const auto& g) {return \
1;});\\ndescriptor.SetJacobianComponent(5, 5, 0, 2, [](const auto& l, const \
auto& g) {return 1;});\\ndescriptor.SetJacobianComponent(5, 5, 0, 3, [](const \
auto& l, const auto& g) {return 1;});\\ndescriptor.SetJacobianComponent(5, 5, \
1, 4, [](const auto& l, const auto& g) {return \
1;});\\ndescriptor.SetJacobianComponent(6, 0, 0, 0, [](const auto& l, const \
auto& g) {return \
-0.25*(sin(l.Point[1])*(g.Parameters[0]*l.FieldValues[7]*(4*pow(E,l.\
FieldValues[1])*g.Parameters[4]*l.FieldValues[3] - \
4*pow(E,l.FieldValues[1])*l.VIEValues[0]*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[5]*(g.Parameters[0]*l.\
FieldValues[3] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])))/(g.Parameters[0]*pow(\
E,l.FieldValues[0]));});\\ndescriptor.SetJacobianComponent(6, 1, 0, 0, \
[](const auto& l, const auto& g) {return \
pow(E,l.FieldValues[1])*(-(g.Parameters[5]*l.FieldValues[6]*l.VIEValues[0]*\
sin(l.Point[1])) + \
(l.FieldValues[7]*sin(l.Point[1])*(g.Parameters[4]*l.FieldValues[3] + \
l.VIEValues[0]*(-g.Parameters[2] + g.Parameters[3]*l.FieldValues[9] + \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3])))/pow(E,l.\
FieldValues[0]) + ((g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*l.\
FieldValues[4])/pow(E,l.FieldValues[2]));});\\ndescriptor.\
SetJacobianComponent(6, 2, 0, 0, [](const auto& l, const auto& g) {return \
-(pow(E,l.FieldValues[1] - l.FieldValues[2])*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*l.\
FieldValues[4]) + (pow(E,-l.FieldValues[0] + \
l.FieldValues[2])*pow(sin(l.Point[1]),2)*(g.Parameters[0]*l.FieldValues[3]*l.\
FieldValues[5] + g.Parameters[0]*l.FieldValues[7]*l.DerivativeValues[3][0] - \
pow(-1 + l.Point[0],2)*l.VIEValues[0]*l.FieldValues[5]*l.DerivativeValues[3][\
1]))/(4.*g.Parameters[0]);});\\ndescriptor.SetJacobianComponent(6, 3, 0, 0, \
[](const auto& l, const auto& g) {return \
(sin(l.Point[1])*(4*pow(E,l.FieldValues[1])*l.FieldValues[7]*(g.Parameters[4] \
+ g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1])) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[5]))/(4.*pow(E,l.\
FieldValues[0]));});\\ndescriptor.SetJacobianComponent(6, 4, 0, 0, [](const \
auto& l, const auto& g) {return (2*pow(E,l.FieldValues[1] - \
l.FieldValues[2])*g.Parameters[4] + cos(l.Point[1]) + \
2*pow(E,l.FieldValues[1] - \
l.FieldValues[2])*g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[\
1]) + sin(l.Point[1])*(l.DerivativeValues[0][0] + l.DerivativeValues[1][3] + \
l.DerivativeValues[2][0]))/2.;});\\ndescriptor.SetJacobianComponent(6, 5, 0, \
0, [](const auto& l, const auto& g) {return (pow(E,-l.FieldValues[0] + \
l.FieldValues[2])*pow(sin(l.Point[1]),2)*(l.FieldValues[3] - (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])/g.Parameters[0]))/4.;})\
;\\ndescriptor.SetJacobianComponent(6, 6, 0, 0, [](const auto& l, const auto& \
g) {return sin(l.Point[1])*(1 - \
pow(E,l.FieldValues[1])*g.Parameters[5]*l.VIEValues[0] + (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(l.DerivativeValues[0][2] + \
l.DerivativeValues[1][1] + \
l.DerivativeValues[2][1]))/(2.*g.Parameters[0]));});\\ndescriptor.\
SetJacobianComponent(6, 7, 0, 0, [](const auto& l, const auto& g) {return \
(sin(l.Point[1])*(4*pow(E,l.FieldValues[1])*g.Parameters[4]*l.FieldValues[3] \
- 4*pow(E,l.FieldValues[1])*l.VIEValues[0]*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]))/(4.*pow(E,\
l.FieldValues[0]));});\\ndescriptor.SetJacobianComponent(6, 8, 0, 0, [](const \
auto& l, const auto& g) {return \
pow(E,l.FieldValues[1])*g.Parameters[3]*l.VIEValues[0]*sin(l.Point[1])*((l.\
FieldValues[7]*sin(l.Point[1])*l.FieldValues[3])/pow(E,l.FieldValues[0]) + \
l.FieldValues[4]/pow(E,l.FieldValues[2]));});\\ndescriptor.\
SetJacobianComponent(6, 9, 0, 0, [](const auto& l, const auto& g) {return \
pow(E,-l.FieldValues[0] + \
l.FieldValues[1])*g.Parameters[3]*l.FieldValues[7]*l.VIEValues[0]*sin(l.Point[\
1]);});\\ndescriptor.SetJacobianComponent(6, 0, 1, 0, [](const auto& l, const \
auto& g) {return \
(sin(l.Point[1])*l.FieldValues[4])/2.;});\\ndescriptor.SetJacobianComponent(6,\
 0, 3, 0, [](const auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],2)*l.FieldValues[6]*l.VIEValues[0]*sin(l.Point[1]))/(2.*g.\
Parameters[0]);});\\ndescriptor.SetJacobianComponent(6, 1, 2, 0, [](const \
auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],2)*l.FieldValues[6]*l.VIEValues[0]*sin(l.Point[1]))/(2.*g.\
Parameters[0]);});\\ndescriptor.SetJacobianComponent(6, 1, 4, 0, [](const \
auto& l, const auto& g) {return \
(sin(l.Point[1])*l.FieldValues[4])/2.;});\\ndescriptor.SetJacobianComponent(6,\
 2, 1, 0, [](const auto& l, const auto& g) {return \
(sin(l.Point[1])*l.FieldValues[4])/2.;});\\ndescriptor.SetJacobianComponent(6,\
 2, 2, 0, [](const auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],2)*l.FieldValues[6]*l.VIEValues[0]*sin(l.Point[1]))/(2.*g.\
Parameters[0]);});\\ndescriptor.SetJacobianComponent(6, 3, 1, 0, [](const \
auto& l, const auto& g) {return (pow(E,-l.FieldValues[0] + \
l.FieldValues[2])*l.FieldValues[7]*pow(sin(l.Point[1]),2))/4.;});\\\
ndescriptor.SetJacobianComponent(6, 3, 2, 0, [](const auto& l, const auto& g) \
{return -0.25*(pow(E,-l.FieldValues[0] + l.FieldValues[2])*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),2)*l.FieldValues[5])/g.\
Parameters[0];});\\ndescriptor.SetJacobianComponent(6, 4, 1, 0, [](const \
auto& l, const auto& g) {return \
sin(l.Point[1]);});\\ndescriptor.SetJacobianComponent(6, 6, 1, 0, [](const \
auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1]))/g.Parameters[0];});\\\
ndescriptor.SetJacobianComponent(6, 6, 1, 1, [](const auto& l, const auto& g) \
{return 1;});\\ndescriptor.SetJacobianComponent(6, 6, 0, 2, [](const auto& l, \
const auto& g) {return 1;});\\ndescriptor.SetJacobianComponent(6, 6, 2, 3, \
[](const auto& l, const auto& g) {return \
1;});\\ndescriptor.SetJacobianComponent(6, 6, 0, 4, [](const auto& l, const \
auto& g) {return 1;});\\ndescriptor.SetJacobianComponent(7, 0, 0, 0, [](const \
auto& l, const auto& g) {return \
(sin(l.Point[1])*(g.Parameters[0]*l.FieldValues[6]*(4*pow(E,l.FieldValues[1])*\
g.Parameters[4]*l.FieldValues[3] - \
4*pow(E,l.FieldValues[1])*l.VIEValues[0]*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[4]*(g.Parameters[0]*l.\
FieldValues[3] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])))/(4.*g.Parameters[0]*\
pow(E,l.FieldValues[0]));});\\ndescriptor.SetJacobianComponent(7, 1, 0, 0, \
[](const auto& l, const auto& g) {return \
pow(E,l.FieldValues[1])*(g.Parameters[5]*l.FieldValues[7]*l.VIEValues[0]*sin(\
l.Point[1]) - \
(l.FieldValues[6]*sin(l.Point[1])*(g.Parameters[4]*l.FieldValues[3] + \
l.VIEValues[0]*(-g.Parameters[2] + g.Parameters[3]*l.FieldValues[9] + \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3])))/pow(E,l.\
FieldValues[0]) + ((g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*l.\
FieldValues[5])/pow(E,l.FieldValues[2]));});\\ndescriptor.\
SetJacobianComponent(7, 2, 0, 0, [](const auto& l, const auto& g) {return \
(-4*pow(E,l.FieldValues[1])*g.Parameters[4]*l.FieldValues[5] - \
4*pow(E,l.FieldValues[1])*g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(\
l.Point[1])*l.FieldValues[5] - pow(E,-l.FieldValues[0] + \
2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*(l.FieldValues[6]*l.\
DerivativeValues[3][0] + l.FieldValues[4]*(l.FieldValues[3] - (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])/g.Parameters[0])))/(4.*\
pow(E,l.FieldValues[2]));});\\ndescriptor.SetJacobianComponent(7, 3, 0, 0, \
[](const auto& l, const auto& g) {return \
-0.25*(sin(l.Point[1])*(4*pow(E,l.FieldValues[1])*l.FieldValues[6]*(g.\
Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1])) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[4]))/pow(E,l.\
FieldValues[0]);});\\ndescriptor.SetJacobianComponent(7, 4, 0, 0, [](const \
auto& l, const auto& g) {return -0.25*(pow(E,-l.FieldValues[0] + \
l.FieldValues[2])*pow(sin(l.Point[1]),2)*(l.FieldValues[3] - (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])/g.Parameters[0]));});\\\
ndescriptor.SetJacobianComponent(7, 5, 0, 0, [](const auto& l, const auto& g) \
{return (2*pow(E,l.FieldValues[1] - l.FieldValues[2])*g.Parameters[4] + \
cos(l.Point[1]) + 2*pow(E,l.FieldValues[1] - \
l.FieldValues[2])*g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[\
1]) + sin(l.Point[1])*(l.DerivativeValues[0][0] + l.DerivativeValues[1][3] + \
l.DerivativeValues[2][0]))/2.;});\\ndescriptor.SetJacobianComponent(7, 6, 0, \
0, [](const auto& l, const auto& g) {return \
-0.25*(sin(l.Point[1])*(4*pow(E,l.FieldValues[1])*g.Parameters[4]*l.\
FieldValues[3] - 4*pow(E,l.FieldValues[1])*l.VIEValues[0]*(g.Parameters[2] - \
g.Parameters[3]*l.FieldValues[9] - \
g.Parameters[3]*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3]) + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.DerivativeValues[3][0]))/pow(E,l.\
FieldValues[0]);});\\ndescriptor.SetJacobianComponent(7, 7, 0, 0, [](const \
auto& l, const auto& g) {return sin(l.Point[1]) + \
(l.VIEValues[0]*sin(l.Point[1])*(2*g.Parameters[0]*pow(E,l.FieldValues[1])*g.\
Parameters[5] + pow(-1 + l.Point[0],2)*l.DerivativeValues[0][2] + pow(-1 + \
l.Point[0],2)*l.DerivativeValues[1][1] + l.DerivativeValues[2][1] - \
2*l.Point[0]*l.DerivativeValues[2][1] + \
pow(l.Point[0],2)*l.DerivativeValues[2][1]))/(2.*g.Parameters[0]);});\\\
ndescriptor.SetJacobianComponent(7, 8, 0, 0, [](const auto& l, const auto& g) \
{return -(pow(E,l.FieldValues[1])*g.Parameters[3]*l.VIEValues[0]*sin(l.Point[\
1])*((l.FieldValues[6]*sin(l.Point[1])*l.FieldValues[3])/pow(E,l.FieldValues[\
0]) - l.FieldValues[5]/pow(E,l.FieldValues[2])));});\\ndescriptor.\
SetJacobianComponent(7, 9, 0, 0, [](const auto& l, const auto& g) {return \
-(pow(E,-l.FieldValues[0] + \
l.FieldValues[1])*g.Parameters[3]*l.FieldValues[6]*l.VIEValues[0]*sin(l.Point[\
1]));});\\ndescriptor.SetJacobianComponent(7, 0, 1, 0, [](const auto& l, \
const auto& g) {return \
(sin(l.Point[1])*l.FieldValues[5])/2.;});\\ndescriptor.SetJacobianComponent(7,\
 0, 3, 0, [](const auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],2)*l.FieldValues[7]*l.VIEValues[0]*sin(l.Point[1]))/(2.*g.\
Parameters[0]);});\\ndescriptor.SetJacobianComponent(7, 1, 2, 0, [](const \
auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],2)*l.FieldValues[7]*l.VIEValues[0]*sin(l.Point[1]))/(2.*g.\
Parameters[0]);});\\ndescriptor.SetJacobianComponent(7, 1, 4, 0, [](const \
auto& l, const auto& g) {return \
(sin(l.Point[1])*l.FieldValues[5])/2.;});\\ndescriptor.SetJacobianComponent(7,\
 2, 1, 0, [](const auto& l, const auto& g) {return \
(sin(l.Point[1])*l.FieldValues[5])/2.;});\\ndescriptor.SetJacobianComponent(7,\
 2, 2, 0, [](const auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],2)*l.FieldValues[7]*l.VIEValues[0]*sin(l.Point[1]))/(2.*g.\
Parameters[0]);});\\ndescriptor.SetJacobianComponent(7, 3, 1, 0, [](const \
auto& l, const auto& g) {return -0.25*(pow(E,-l.FieldValues[0] + \
l.FieldValues[2])*l.FieldValues[6]*pow(sin(l.Point[1]),2));});\\ndescriptor.\
SetJacobianComponent(7, 3, 2, 0, [](const auto& l, const auto& g) {return \
(pow(E,-l.FieldValues[0] + l.FieldValues[2])*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),2)*l.FieldValues[4])/(4.*g.\
Parameters[0]);});\\ndescriptor.SetJacobianComponent(7, 5, 1, 0, [](const \
auto& l, const auto& g) {return \
sin(l.Point[1]);});\\ndescriptor.SetJacobianComponent(7, 7, 1, 0, [](const \
auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1]))/g.Parameters[0];});\\\
ndescriptor.SetJacobianComponent(7, 7, 1, 1, [](const auto& l, const auto& g) \
{return 1;});\\ndescriptor.SetJacobianComponent(7, 7, 0, 2, [](const auto& l, \
const auto& g) {return 1;});\\ndescriptor.SetJacobianComponent(7, 7, 2, 3, \
[](const auto& l, const auto& g) {return \
1;});\\ndescriptor.SetJacobianComponent(7, 7, 0, 4, [](const auto& l, const \
auto& g) {return 1;});\\ndescriptor.SetJacobianComponent(8, 0, 0, 0, [](const \
auto& l, const auto& g) {return -2*pow(E,-2*l.FieldValues[0] + \
2*l.FieldValues[2])*pow(sin(l.Point[1]),3)*(l.FieldValues[8]*sin(l.Point[1])*\
pow(l.FieldValues[3],2) - \
l.FieldValues[8]*cos(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[3][0] - \
sin(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[8][0]*l.DerivativeValues[\
3][0] - l.DerivativeValues[9][0]*l.DerivativeValues[3][0] + (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*pow(l.FieldValues[3],2)*l.\
DerivativeValues[8][1])/g.Parameters[0] + (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.FieldValues[3]*l.DerivativeValues[9][1])/g.\
Parameters[0] - (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(g.Parameters[0]*l.FieldValues[8]*sin(l.Point[1])\
*l.FieldValues[3] + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(sin(l.Point[1])*l.FieldValues[3]*l.\
DerivativeValues[8][1] + \
l.DerivativeValues[9][1]))*l.DerivativeValues[3][1])/pow(g.Parameters[0],2));}\
);\\ndescriptor.SetJacobianComponent(8, 1, 0, 0, [](const auto& l, const \
auto& g) {return -8*pow(E,2*l.FieldValues[1] + \
l.FieldValues[2])*g.Parameters[3]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2)\
*(l.FieldValues[7]*l.FieldValues[4] - \
l.FieldValues[6]*l.FieldValues[5]);});\\ndescriptor.SetJacobianComponent(8, \
2, 0, 0, [](const auto& l, const auto& g) {return \
2*pow(E,l.FieldValues[2])*pow(sin(l.Point[1]),2)*(-2*pow(E,2*l.FieldValues[1])\
*g.Parameters[3]*pow(l.VIEValues[0],2)*(l.FieldValues[7]*l.FieldValues[4] - \
l.FieldValues[6]*l.FieldValues[5]) + pow(E,-2*l.FieldValues[0] + \
l.FieldValues[2])*sin(l.Point[1])*(l.FieldValues[8]*sin(l.Point[1])*pow(l.\
FieldValues[3],2) - \
l.FieldValues[8]*cos(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[3][0] - \
sin(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[8][0]*l.DerivativeValues[\
3][0] - l.DerivativeValues[9][0]*l.DerivativeValues[3][0] + (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*pow(l.FieldValues[3],2)*l.\
DerivativeValues[8][1])/g.Parameters[0] + (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.FieldValues[3]*l.DerivativeValues[9][1])/g.\
Parameters[0] - (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(g.Parameters[0]*l.FieldValues[8]*sin(l.Point[1])\
*l.FieldValues[3] + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(sin(l.Point[1])*l.FieldValues[3]*l.\
DerivativeValues[8][1] + \
l.DerivativeValues[9][1]))*l.DerivativeValues[3][1])/pow(g.Parameters[0],2)));\
});\\ndescriptor.SetJacobianComponent(8, 3, 0, 0, [](const auto& l, const \
auto& g) {return pow(E,-2*l.FieldValues[0] + \
2*l.FieldValues[2])*pow(sin(l.Point[1]),3)*(2*l.FieldValues[8]*sin(l.Point[1])\
*l.FieldValues[3] - l.FieldValues[8]*cos(l.Point[1])*l.DerivativeValues[3][0] \
- sin(l.Point[1])*l.DerivativeValues[8][0]*l.DerivativeValues[3][0] + \
(2*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*l.FieldValues[3]*l.\
DerivativeValues[8][1])/g.Parameters[0] + (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[9][1])/g.Parameters[0] - \
(pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*(g.Parameters[0]*l.FieldValues[8]\
 + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[8][1])*l.DerivativeValues[3][\
1])/pow(g.Parameters[0],2));});\\ndescriptor.SetJacobianComponent(8, 4, 0, 0, \
[](const auto& l, const auto& g) {return -4*pow(E,2*l.FieldValues[1] + \
l.FieldValues[2])*g.Parameters[3]*l.FieldValues[7]*pow(l.VIEValues[0],2)*pow(\
sin(l.Point[1]),2);});\\ndescriptor.SetJacobianComponent(8, 5, 0, 0, [](const \
auto& l, const auto& g) {return 4*pow(E,2*l.FieldValues[1] + \
l.FieldValues[2])*g.Parameters[3]*l.FieldValues[6]*pow(l.VIEValues[0],2)*pow(\
sin(l.Point[1]),2);});\\ndescriptor.SetJacobianComponent(8, 6, 0, 0, [](const \
auto& l, const auto& g) {return 4*pow(E,2*l.FieldValues[1] + \
l.FieldValues[2])*g.Parameters[3]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2)\
*l.FieldValues[5];});\\ndescriptor.SetJacobianComponent(8, 7, 0, 0, [](const \
auto& l, const auto& g) {return -4*pow(E,2*l.FieldValues[1] + \
l.FieldValues[2])*g.Parameters[3]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2)\
*l.FieldValues[4];});\\ndescriptor.SetJacobianComponent(8, 8, 0, 0, [](const \
auto& l, const auto& g) {return (-g.Parameters[0] + \
g.Parameters[0]*cos(l.Point[1])*sin(l.Point[1])*(l.DerivativeValues[0][0] - \
l.DerivativeValues[2][0]) + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),2)*(l.DerivativeValues[0][2] \
- l.DerivativeValues[2][1]) + pow(E,-2*l.FieldValues[0] + \
2*l.FieldValues[2])*pow(sin(l.Point[1]),3)*l.FieldValues[3]*(g.Parameters[0]*\
sin(l.Point[1])*l.FieldValues[3] - \
g.Parameters[0]*cos(l.Point[1])*l.DerivativeValues[3][0] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*l.DerivativeValues[3][1]))/g.\
Parameters[0];});\\ndescriptor.SetJacobianComponent(8, 0, 1, 0, [](const \
auto& l, const auto& g) {return \
sin(l.Point[1])*(l.FieldValues[8]*cos(l.Point[1]) + \
sin(l.Point[1])*l.DerivativeValues[8][0]);});\\ndescriptor.\
SetJacobianComponent(8, 0, 3, 0, [](const auto& l, const auto& g) {return \
(pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),2)*(g.Parameters[0]*l.\
FieldValues[8] + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[8][1]))/pow(g.Parameters[0],2)\
;});\\ndescriptor.SetJacobianComponent(8, 2, 1, 0, [](const auto& l, const \
auto& g) {return -(sin(l.Point[1])*(l.FieldValues[8]*cos(l.Point[1]) + \
sin(l.Point[1])*l.DerivativeValues[8][0]));});\\ndescriptor.\
SetJacobianComponent(8, 2, 2, 0, [](const auto& l, const auto& g) {return \
-((pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),2)*(g.Parameters[0]*l.\
FieldValues[8] + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[8][1]))/pow(g.Parameters[0],2)\
);});\\ndescriptor.SetJacobianComponent(8, 3, 1, 0, [](const auto& l, const \
auto& g) {return -(pow(E,-2*l.FieldValues[0] + \
2*l.FieldValues[2])*pow(sin(l.Point[1]),3)*(l.FieldValues[8]*cos(l.Point[1])*\
l.FieldValues[3] + sin(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[8][0] \
+ l.DerivativeValues[9][0]));});\\ndescriptor.SetJacobianComponent(8, 3, 2, \
0, [](const auto& l, const auto& g) {return -((pow(E,-2*l.FieldValues[0] + \
2*l.FieldValues[2])*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),3)*(g.Parameters[0]*l.\
FieldValues[8]*sin(l.Point[1])*l.FieldValues[3] + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(sin(l.Point[1])*l.FieldValues[3]*l.\
DerivativeValues[8][1] + \
l.DerivativeValues[9][1])))/pow(g.Parameters[0],2));});\\ndescriptor.\
SetJacobianComponent(8, 8, 1, 0, [](const auto& l, const auto& g) {return \
sin(l.Point[1])*(cos(l.Point[1]) + sin(l.Point[1])*(l.DerivativeValues[0][0] \
- l.DerivativeValues[2][0]) - pow(E,-2*l.FieldValues[0] + \
2*l.FieldValues[2])*pow(sin(l.Point[1]),3)*l.FieldValues[3]*l.\
DerivativeValues[3][0]);});\\ndescriptor.SetJacobianComponent(8, 8, 2, 0, \
[](const auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),2)*(2*g.Parameters[0] + \
2*(-1 + l.Point[0])*l.VIEValues[0] + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(l.DerivativeValues[0][2] - \
l.DerivativeValues[2][1]) + pow(E,-2*l.FieldValues[0] + \
2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*l.FieldValues[3]*(g.Parameters[0]*\
l.FieldValues[3] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])))/pow(g.Parameters[0],\
2);});\\ndescriptor.SetJacobianComponent(8, 8, 3, 0, [](const auto& l, const \
auto& g) {return \
pow(sin(l.Point[1]),2);});\\ndescriptor.SetJacobianComponent(8, 8, 4, 0, \
[](const auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],4)*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2))/pow(g.Parameters[\
0],2);});\\ndescriptor.SetJacobianComponent(8, 9, 1, 0, [](const auto& l, \
const auto& g) {return -(pow(E,-2*l.FieldValues[0] + \
2*l.FieldValues[2])*pow(sin(l.Point[1]),3)*l.DerivativeValues[3][0]);});\\\
ndescriptor.SetJacobianComponent(8, 9, 2, 0, [](const auto& l, const auto& g) \
{return (pow(E,-2*l.FieldValues[0] + 2*l.FieldValues[2])*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),3)*(g.Parameters[0]*l.\
FieldValues[3] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1]))/pow(g.Parameters[0],2)\
;});\\ndescriptor.SetJacobianComponent(8, 8, 0, 1, [](const auto& l, const \
auto& g) {return 1;});\\ndescriptor.SetJacobianComponent(8, 8, 0, 2, [](const \
auto& l, const auto& g) {return 1;});\\ndescriptor.SetJacobianComponent(8, 8, \
0, 3, [](const auto& l, const auto& g) {return \
1;});\\ndescriptor.SetJacobianComponent(8, 8, 0, 4, [](const auto& l, const \
auto& g) {return 1;});\\ndescriptor.SetJacobianComponent(9, 0, 0, 0, [](const \
auto& l, const auto& g) {return 2*pow(E,l.FieldValues[0] + \
2*l.FieldValues[1])*g.Parameters[3]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),\
2)*(pow(l.FieldValues[6],2) + pow(l.FieldValues[7],2) + \
pow(l.FieldValues[4],2) + pow(l.FieldValues[5],2)) - \
2*pow(E,-2*l.FieldValues[0] + \
2*l.FieldValues[2])*pow(sin(l.Point[1]),4)*l.FieldValues[3]*(-(l.FieldValues[\
8]*sin(l.Point[1])*pow(l.FieldValues[3],2)) + \
l.FieldValues[8]*cos(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[3][0] + \
sin(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[8][0]*l.DerivativeValues[\
3][0] + l.DerivativeValues[9][0]*l.DerivativeValues[3][0] - (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*pow(l.FieldValues[3],2)*l.\
DerivativeValues[8][1])/g.Parameters[0] - (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.FieldValues[3]*l.DerivativeValues[9][1])/g.\
Parameters[0] + (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(g.Parameters[0]*l.FieldValues[8]*sin(l.Point[1])\
*l.FieldValues[3] + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(sin(l.Point[1])*l.FieldValues[3]*l.\
DerivativeValues[8][1] + \
l.DerivativeValues[9][1]))*l.DerivativeValues[3][1])/pow(g.Parameters[0],2));}\
);\\ndescriptor.SetJacobianComponent(9, 1, 0, 0, [](const auto& l, const \
auto& g) {return \
4*pow(E,2*l.FieldValues[1])*g.Parameters[3]*pow(l.VIEValues[0],2)*pow(sin(l.\
Point[1]),2)*(2*pow(E,l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[3]*(l.\
FieldValues[7]*l.FieldValues[4] - l.FieldValues[6]*l.FieldValues[5]) + \
pow(E,l.FieldValues[0])*(pow(l.FieldValues[6],2) + pow(l.FieldValues[7],2) + \
pow(l.FieldValues[4],2) + \
pow(l.FieldValues[5],2)));});\\ndescriptor.SetJacobianComponent(9, 2, 0, 0, \
[](const auto& l, const auto& g) {return \
2*pow(E,l.FieldValues[2])*pow(sin(l.Point[1]),3)*l.FieldValues[3]*(2*pow(E,2*\
l.FieldValues[1])*g.Parameters[3]*pow(l.VIEValues[0],2)*(l.FieldValues[7]*l.\
FieldValues[4] - l.FieldValues[6]*l.FieldValues[5]) + \
pow(E,-2*l.FieldValues[0] + \
l.FieldValues[2])*sin(l.Point[1])*(-(l.FieldValues[8]*sin(l.Point[1])*pow(l.\
FieldValues[3],2)) + \
l.FieldValues[8]*cos(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[3][0] + \
sin(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[8][0]*l.DerivativeValues[\
3][0] + l.DerivativeValues[9][0]*l.DerivativeValues[3][0] - (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*pow(l.FieldValues[3],2)*l.\
DerivativeValues[8][1])/g.Parameters[0] - (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.FieldValues[3]*l.DerivativeValues[9][1])/g.\
Parameters[0] + (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(g.Parameters[0]*l.FieldValues[8]*sin(l.Point[1])\
*l.FieldValues[3] + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(sin(l.Point[1])*l.FieldValues[3]*l.\
DerivativeValues[8][1] + \
l.DerivativeValues[9][1]))*l.DerivativeValues[3][1])/pow(g.Parameters[0],2)));\
});\\ndescriptor.SetJacobianComponent(9, 3, 0, 0, [](const auto& l, const \
auto& g) {return \
(sin(l.Point[1])*(8*pow(g.Parameters[0],2)*pow(E,2*l.FieldValues[1] + \
l.FieldValues[2])*g.Parameters[3]*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2)\
*(l.FieldValues[7]*l.FieldValues[4] - l.FieldValues[6]*l.FieldValues[5]) + \
g.Parameters[0]*l.FieldValues[8]*(3*g.Parameters[0] + \
g.Parameters[0]*cos(2*l.Point[1]) + \
2*g.Parameters[0]*sin(2*l.Point[1])*l.DerivativeValues[2][0] - \
4*sin(l.Point[1])*(g.Parameters[0]*cos(l.Point[1])*l.DerivativeValues[0][0] + \
pow(-1 + l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*(l.DerivativeValues[0][\
2] - l.DerivativeValues[2][1]))) + \
2*sin(l.Point[1])*(2*pow(g.Parameters[0],2)*l.DerivativeValues[8][0]*(cos(l.\
Point[1]) + sin(l.Point[1])*(-l.DerivativeValues[0][0] + \
l.DerivativeValues[2][0])) + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*l.DerivativeValues[8][1]*(g.\
Parameters[0] - 2*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[0][2] + 2*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[2][1])) - \
2*pow(E,-2*l.FieldValues[0] + \
2*l.FieldValues[2])*pow(sin(l.Point[1]),3)*l.FieldValues[3]*(2*pow(g.\
Parameters[0],2)*l.FieldValues[8]*sin(l.Point[1])*l.FieldValues[3] - \
pow(g.Parameters[0],2)*l.FieldValues[8]*cos(l.Point[1])*l.DerivativeValues[3][\
0] - pow(g.Parameters[0],2)*sin(l.Point[1])*l.DerivativeValues[8][0]*l.\
DerivativeValues[3][0] + 2*g.Parameters[0]*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*l.FieldValues[3]*l.\
DerivativeValues[8][1] + g.Parameters[0]*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[9][1] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*(g.Parameters[0]*l.FieldValues[8]\
 + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[8][1])*l.DerivativeValues[3][\
1]) - 2*pow(E,-2*l.FieldValues[0] + \
2*l.FieldValues[2])*pow(sin(l.Point[1]),3)*(pow(g.Parameters[0],2)*l.\
FieldValues[8]*sin(l.Point[1])*pow(l.FieldValues[3],2) - \
pow(g.Parameters[0],2)*l.FieldValues[8]*cos(l.Point[1])*l.FieldValues[3]*l.\
DerivativeValues[3][0] - \
pow(g.Parameters[0],2)*sin(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[8][\
0]*l.DerivativeValues[3][0] - \
pow(g.Parameters[0],2)*l.DerivativeValues[9][0]*l.DerivativeValues[3][0] + \
g.Parameters[0]*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*pow(l.FieldValues[3],2)*l.\
DerivativeValues[8][1] + g.Parameters[0]*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.FieldValues[3]*l.DerivativeValues[9][1] - \
pow(-1 + l.Point[0],2)*l.VIEValues[0]*(sin(l.Point[1])*l.FieldValues[3]*(g.\
Parameters[0]*l.FieldValues[8] + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[8][1]) + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[9][1])*l.DerivativeValues[3][\
1])))/(2.*pow(g.Parameters[0],2));});\\ndescriptor.SetJacobianComponent(9, 4, \
0, 0, [](const auto& l, const auto& g) {return \
4*pow(E,2*l.FieldValues[1])*g.Parameters[3]*pow(l.VIEValues[0],2)*pow(sin(l.\
Point[1]),2)*(pow(E,l.FieldValues[2])*l.FieldValues[7]*sin(l.Point[1])*l.\
FieldValues[3] + \
pow(E,l.FieldValues[0])*l.FieldValues[4]);});\\ndescriptor.\
SetJacobianComponent(9, 5, 0, 0, [](const auto& l, const auto& g) {return \
-4*pow(E,2*l.FieldValues[1])*g.Parameters[3]*pow(l.VIEValues[0],2)*pow(sin(l.\
Point[1]),2)*(pow(E,l.FieldValues[2])*l.FieldValues[6]*sin(l.Point[1])*l.\
FieldValues[3] - \
pow(E,l.FieldValues[0])*l.FieldValues[5]);});\\ndescriptor.\
SetJacobianComponent(9, 6, 0, 0, [](const auto& l, const auto& g) {return \
4*pow(E,2*l.FieldValues[1])*g.Parameters[3]*pow(l.VIEValues[0],2)*pow(sin(l.\
Point[1]),2)*(pow(E,l.FieldValues[0])*l.FieldValues[6] - \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[3]*l.FieldValues[5]);});\
\\ndescriptor.SetJacobianComponent(9, 7, 0, 0, [](const auto& l, const auto& \
g) {return \
4*pow(E,2*l.FieldValues[1])*g.Parameters[3]*pow(l.VIEValues[0],2)*pow(sin(l.\
Point[1]),2)*(pow(E,l.FieldValues[0])*l.FieldValues[7] + \
pow(E,l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[3]*l.FieldValues[4]);});\
\\ndescriptor.SetJacobianComponent(9, 8, 0, 0, [](const auto& l, const auto& \
g) {return (sin(l.Point[1])*(sin(2*l.Point[1])*l.DerivativeValues[3][0] + \
l.FieldValues[3]*(3 + cos(2*l.Point[1]) + \
2*sin(2*l.Point[1])*l.DerivativeValues[2][0] - \
(4*sin(l.Point[1])*(g.Parameters[0]*cos(l.Point[1])*l.DerivativeValues[0][0] \
+ pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*(l.DerivativeValues[0][2] - \
l.DerivativeValues[2][1])))/g.Parameters[0])))/2. + (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),3)*l.DerivativeValues[3][1])/\
g.Parameters[0] - (pow(E,-2*l.FieldValues[0] + \
2*l.FieldValues[2])*pow(sin(l.Point[1]),4)*pow(l.FieldValues[3],2)*(g.\
Parameters[0]*sin(l.Point[1])*l.FieldValues[3] - \
g.Parameters[0]*cos(l.Point[1])*l.DerivativeValues[3][0] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*sin(l.Point[1])*l.DerivativeValues[3][1]))/g.\
Parameters[0];});\\ndescriptor.SetJacobianComponent(9, 0, 1, 0, [](const \
auto& l, const auto& g) {return \
-(pow(sin(l.Point[1]),2)*(2*l.FieldValues[8]*cos(l.Point[1])*l.FieldValues[3] \
+ 2*sin(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[8][0] + \
l.DerivativeValues[9][0]));});\\ndescriptor.SetJacobianComponent(9, 0, 3, 0, \
[](const auto& l, const auto& g) {return -((pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),2)*(2*g.Parameters[0]*l.\
FieldValues[8]*sin(l.Point[1])*l.FieldValues[3] + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(2*sin(l.Point[1])*l.FieldValues[3]*l.\
DerivativeValues[8][1] + \
l.DerivativeValues[9][1])))/pow(g.Parameters[0],2));});\\ndescriptor.\
SetJacobianComponent(9, 2, 1, 0, [](const auto& l, const auto& g) {return \
sin(l.Point[1])*(l.FieldValues[8]*sin(2*l.Point[1])*l.FieldValues[3] + \
sin(l.Point[1])*(2*sin(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[8][0] \
+ l.DerivativeValues[9][0]));});\\ndescriptor.SetJacobianComponent(9, 2, 2, \
0, [](const auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),2)*(2*g.Parameters[0]*l.\
FieldValues[8]*sin(l.Point[1])*l.FieldValues[3] + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(2*sin(l.Point[1])*l.FieldValues[3]*l.\
DerivativeValues[8][1] + \
l.DerivativeValues[9][1])))/pow(g.Parameters[0],2);});\\ndescriptor.\
SetJacobianComponent(9, 3, 1, 0, [](const auto& l, const auto& g) {return \
(l.FieldValues[8]*sin(l.Point[1])*sin(2*l.Point[1]))/2. + \
pow(sin(l.Point[1]),3)*l.DerivativeValues[8][0] + pow(E,-2*l.FieldValues[0] + \
2*l.FieldValues[2])*pow(sin(l.Point[1]),4)*l.FieldValues[3]*(l.FieldValues[8]*\
cos(l.Point[1])*l.FieldValues[3] + \
sin(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[8][0] + \
l.DerivativeValues[9][0]);});\\ndescriptor.SetJacobianComponent(9, 3, 2, 0, \
[](const auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),3)*(g.Parameters[0]*l.\
FieldValues[8]*(pow(E,2*l.FieldValues[0]) + \
pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*pow(l.FieldValues[3],2)) + \
pow(-1 + l.Point[0],2)*l.VIEValues[0]*((pow(E,2*l.FieldValues[0]) + \
pow(E,2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*pow(l.FieldValues[3],2))*l.\
DerivativeValues[8][1] + \
pow(E,2*l.FieldValues[2])*sin(l.Point[1])*l.FieldValues[3]*l.DerivativeValues[\
9][1])))/(pow(g.Parameters[0],2)*pow(E,2*l.FieldValues[0]));});\\ndescriptor.\
SetJacobianComponent(9, 8, 1, 0, [](const auto& l, const auto& g) {return \
pow(sin(l.Point[1]),2)*(2*l.FieldValues[3]*(cos(l.Point[1]) + \
sin(l.Point[1])*(-l.DerivativeValues[0][0] + l.DerivativeValues[2][0])) + \
sin(l.Point[1])*l.DerivativeValues[3][0] + pow(E,-2*l.FieldValues[0] + \
2*l.FieldValues[2])*pow(sin(l.Point[1]),3)*pow(l.FieldValues[3],2)*l.\
DerivativeValues[3][0]);});\\ndescriptor.SetJacobianComponent(9, 8, 2, 0, \
[](const auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),3)*(-(g.Parameters[0]*pow(E,\
2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*pow(l.FieldValues[3],3)) + \
pow(E,2*l.FieldValues[0])*l.FieldValues[3]*(g.Parameters[0] - 2*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*(l.DerivativeValues[0][2] - \
l.DerivativeValues[2][1])) + pow(E,2*l.FieldValues[0])*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1] + \
pow(E,2*l.FieldValues[2])*pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),2)*pow(l.FieldValues[3],2)*l.\
DerivativeValues[3][1]))/(pow(g.Parameters[0],2)*pow(E,2*l.FieldValues[0]));})\
;\\ndescriptor.SetJacobianComponent(9, 9, 1, 0, [](const auto& l, const auto& \
g) {return sin(l.Point[1])*(cos(l.Point[1]) + \
sin(l.Point[1])*(-l.DerivativeValues[0][0] + l.DerivativeValues[2][0]) + \
pow(E,-2*l.FieldValues[0] + \
2*l.FieldValues[2])*pow(sin(l.Point[1]),3)*l.FieldValues[3]*l.\
DerivativeValues[3][0]);});\\ndescriptor.SetJacobianComponent(9, 9, 2, 0, \
[](const auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*pow(sin(l.Point[1]),2)*(2*g.Parameters[0] + \
2*(-1 + l.Point[0])*l.VIEValues[0] - pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[0][2] + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[2][1] + \
pow(E,-2*l.FieldValues[0] + \
2*l.FieldValues[2])*pow(sin(l.Point[1]),2)*l.FieldValues[3]*(-(g.Parameters[0]\
*l.FieldValues[3]) + pow(-1 + \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])))/pow(g.Parameters[0],\
2);});\\ndescriptor.SetJacobianComponent(9, 9, 3, 0, [](const auto& l, const \
auto& g) {return \
pow(sin(l.Point[1]),2);});\\ndescriptor.SetJacobianComponent(9, 9, 4, 0, \
[](const auto& l, const auto& g) {return (pow(-1 + \
l.Point[0],4)*pow(l.VIEValues[0],2)*pow(sin(l.Point[1]),2))/pow(g.Parameters[\
0],2);});\\ndescriptor.SetJacobianComponent(9, 9, 2, 1, [](const auto& l, \
const auto& g) {return 1;});\\ndescriptor.SetJacobianComponent(9, 9, 0, 2, \
[](const auto& l, const auto& g) {return \
1;});\\ndescriptor.SetJacobianComponent(9, 9, 1, 3, [](const auto& l, const \
auto& g) {return 1;});\\ndescriptor.SetJacobianComponent(9, 9, 1, 4, [](const \
auto& l, const auto& g) {return 1;});\\nauto grid = \
std::make_shared<DirectProductGrid<2, \
double>>(SingleDimensionalGrid<double>({MakeUniformRange<double>(0, 1, 200), \
std::nullopt}), SingleDimensionalGrid<double>({MakeUniformRange<double>(0, \
Pi, 100), std::nullopt}));\\nstd::unique_ptr<Discretization<2>> \
discretization = \
std::make_unique<StructuredFiniteDifferenceDiscretization<2>>(5);\\nauto \
problem = descriptor.MakeProblem(grid, \
std::move(discretization));\\nproblem->AddIntegralOutputExpression([](const \
auto& l, const auto& g){ return (g.Parameters[0]*pow(E,-l.FieldValues[0] + \
l.FieldValues[1])*Pi*l.VIEValues[0]*sin(l.Point[1])*(-8*pow(E,2*l.FieldValues[\
0] + l.FieldValues[1])*(g.Parameters[4]*csc(l.Point[1]) + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0])*(l.FieldValues[7]*l.\
FieldValues[4] - l.FieldValues[6]*l.FieldValues[5]) + \
pow(E,2*l.FieldValues[2])*(8*pow(E,l.FieldValues[1])*sin(l.Point[1])*l.\
FieldValues[3]*(-(g.Parameters[2]*l.VIEValues[0]) + \
g.Parameters[3]*l.VIEValues[0]*l.FieldValues[9] + (g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*l.\
FieldValues[3])*(l.FieldValues[7]*l.FieldValues[4] - \
l.FieldValues[6]*l.FieldValues[5]) + \
pow(E,l.FieldValues[0])*(pow(l.FieldValues[6],2)*(2*l.FieldValues[3]*(cos(l.\
Point[1]) + sin(l.Point[1])*(-l.DerivativeValues[0][0] + \
l.DerivativeValues[2][0])) + sin(l.Point[1])*l.DerivativeValues[3][0]) + \
pow(l.FieldValues[7],2)*(2*l.FieldValues[3]*(cos(l.Point[1]) + \
sin(l.Point[1])*(-l.DerivativeValues[0][0] + l.DerivativeValues[2][0])) + \
sin(l.Point[1])*l.DerivativeValues[3][0]) - (pow(l.FieldValues[4],2) + \
pow(l.FieldValues[5],2))*(2*l.FieldValues[3]*(cos(l.Point[1]) + \
sin(l.Point[1])*(-l.DerivativeValues[0][0] + l.DerivativeValues[2][0])) + \
sin(l.Point[1])*l.DerivativeValues[3][0]) + \
2*l.FieldValues[6]*sin(l.Point[1])*l.FieldValues[4]*(l.FieldValues[3]*(-1 + \
(2*pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[0][2])/g.Parameters[0] - \
(2*pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[2][1])/g.Parameters[0]) - \
(pow(1 - l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])/g.Parameters[\
0]) + 2*l.FieldValues[7]*sin(l.Point[1])*l.FieldValues[5]*(l.FieldValues[3]*(-\
1 + (2*pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[0][2])/g.Parameters[0] - \
(2*pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[2][1])/g.Parameters[0]) - \
(pow(1 - l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[3][1])/g.Parameters[\
0]))) + 4*pow(E,l.FieldValues[0] + \
l.FieldValues[2])*(-(pow(E,l.FieldValues[1])*l.VIEValues[0]*(g.Parameters[2] \
- g.Parameters[3]*l.FieldValues[9])*(pow(l.FieldValues[6],2) + \
pow(l.FieldValues[7],2) + pow(l.FieldValues[4],2) + pow(l.FieldValues[5],2))) \
- pow(E,l.FieldValues[0])*(l.FieldValues[7]*(l.DerivativeValues[4][0] + \
(pow(1 - l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[6][0])/g.Parameters[\
0]) - l.FieldValues[6]*(l.DerivativeValues[5][0] + (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[7][0])/g.Parameters[0]) + \
l.FieldValues[5]*(l.DerivativeValues[6][1] - (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[4][1])/g.Parameters[0]) + \
l.FieldValues[4]*(-l.DerivativeValues[7][1] + (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[5][1])/g.Parameters[0])))))/\
pow(1 - l.Point[0],2);}, \
\\\"M_vol\\\");\\nproblem->AddIntegralOutputExpression([](const auto& l, \
const auto& g){ return (g.Parameters[0]*pow(E,-l.FieldValues[0] + \
l.FieldValues[1] + \
l.FieldValues[2])*Pi*pow(l.VIEValues[0],2)*sin(l.Point[1])*(2*pow(E,l.\
FieldValues[0] + l.FieldValues[1])*(g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*(pow(l.\
FieldValues[6],2) + pow(l.FieldValues[7],2) + pow(l.FieldValues[4],2) + \
pow(l.FieldValues[5],2)) + \
pow(E,l.FieldValues[2])*(-4*pow(E,l.FieldValues[1])*sin(l.Point[1])*(-(g.\
Parameters[2]*l.VIEValues[0]) + \
g.Parameters[3]*l.VIEValues[0]*l.FieldValues[9] + (g.Parameters[4] + \
g.Parameters[3]*l.FieldValues[8]*l.VIEValues[0]*sin(l.Point[1]))*l.\
FieldValues[3])*(l.FieldValues[7]*l.FieldValues[4] - \
l.FieldValues[6]*l.FieldValues[5]) + \
pow(E,l.FieldValues[0])*(-(pow(l.FieldValues[6],2)*(cos(l.Point[1]) + \
sin(l.Point[1])*(-l.DerivativeValues[0][0] + l.DerivativeValues[2][0]))) - \
pow(l.FieldValues[7],2)*(cos(l.Point[1]) + \
sin(l.Point[1])*(-l.DerivativeValues[0][0] + l.DerivativeValues[2][0])) + \
(pow(l.FieldValues[4],2) + pow(l.FieldValues[5],2))*(cos(l.Point[1]) + \
sin(l.Point[1])*(-l.DerivativeValues[0][0] + l.DerivativeValues[2][0])) + \
2*l.FieldValues[6]*sin(l.Point[1])*l.FieldValues[4]*(1 - (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[0][2])/g.Parameters[0] + \
(pow(1 - l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[2][1])/g.Parameters[\
0]) + 2*l.FieldValues[7]*sin(l.Point[1])*l.FieldValues[5]*(1 - (pow(1 - \
l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[0][2])/g.Parameters[0] + \
(pow(1 - l.Point[0],2)*l.VIEValues[0]*l.DerivativeValues[2][1])/g.Parameters[\
0])))))/pow(1 - l.Point[0],2);}, \
\\\"J_vol\\\");\\nproblem->AddIntegralOutputExpression([](const auto& l, \
const auto& g){ return (4*g.Parameters[0]*pow(E,2*l.FieldValues[1] + \
l.FieldValues[2])*Pi*pow(l.VIEValues[0],2)*sin(l.Point[1])*(pow(l.FieldValues[\
6],2) + pow(l.FieldValues[7],2) + pow(l.FieldValues[4],2) + \
pow(l.FieldValues[5],2)))/pow(1 - l.Point[0],2);}, \
\\\"Q_vol\\\");\\nproblem->AddPointOutputExpression({1., 1.5708}, [](const \
auto& l, const auto& g){ return \
(4*g.Parameters[0]*Pi*l.DerivativeValues[0][2])/pow(g.Parameters[1],2);}, \
\\\"M_inf\\\");\\nproblem->AddPointOutputExpression({1., 1.5708}, [](const \
auto& l, const auto& g){ return \
(pow(g.Parameters[0],2)*Pi*l.DerivativeValues[3][3])/pow(g.Parameters[1],2);},\
 \\\"J_inf\\\");\\nproblem->AddPointOutputExpression({1., 1.5708}, [](const \
auto& l, const auto& g){ return \
-(g.Parameters[0]*l.DerivativeValues[9][1]);}, \
\\\"Qe_inf\\\");\\nproblem->AddPointOutputExpression({1., 1.5708}, [](const \
auto& l, const auto& g){ return \
-0.5*(pow(g.Parameters[0],2)*l.DerivativeValues[8][3]);}, \\\"Qm_inf\\\");\\n\
\"\>"], "Output",
 CellChangeTimes->{3.8319706756587763`*^9, 3.8319741677832303`*^9, 
  3.832248651851589*^9, 3.832248889757098*^9, 3.832249889559866*^9, 
  3.832249931107051*^9, 3.8322500779777975`*^9, 3.8322501283783765`*^9, 
  3.8333775185669312`*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"a5c1f27a-0faa-4fde-a9f0-cd5fe6b298f1"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.831975665646394*^9, 
  3.8319756784999266`*^9}},ExpressionUUID->"42044885-536b-4ba0-ae03-\
fd12cab7c037"],

Cell[BoxData[
 RowBox[{
  RowBox[{"solutions", "=", 
   RowBox[{"ReadSolution", "/@", 
    RowBox[{"FileNames", "[", 
     RowBox[{"\"\<EinsteinFermiMaxwell2d_*.dat\>\"", ",", "outputPath"}], 
     "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8319756946492796`*^9, 3.8319757794095707`*^9}, {
  3.832249023434351*^9, 3.832249034178501*^9}, {3.8322521322707376`*^9, 
  3.832252135499241*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"c6ee0190-b620-4408-a093-7586b1358610"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"solutions", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Afi\>\"", "]"}], "[", 
      RowBox[{"x", ",", "t"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"solutions", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<X\>\"", "]"}], "[", 
      RowBox[{"x", ",", "t"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8319760949969287`*^9, 3.8319761237599945`*^9}, 
   3.8319761848336573`*^9, {3.8322490386104765`*^9, 3.8322490588829594`*^9}, {
   3.832252153574542*^9, 3.8322521645922885`*^9}, {3.832252199515416*^9, 
   3.8322522270927606`*^9}, {3.8322523586432714`*^9, 3.8322524093731627`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"c1ec1ed8-8987-41b7-a89a-ddca722a07fd"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
hd6Fo2fg3RlSuQGDQegZeOupfe/sDZ+jZ+Bf/I+X+z92Qs/Axylc7VGcYYme
gfdLD7stK9yMnoEbs3Mv1p44wpI3+qkyj4ija++XsOSNfopWVdZ2c0UpS97o
p+5v/f5KXKuEJW/0U5aTFKMnTS9iyRv9FN9jF7uf6/JZ8kY/ZXXVxMD7WRZL
3uinpC56thjJprLkjX5KSU7jY4B+Akve6Kd2Xgk7mL4liiVv9FNzqCUXRwdC
WPJGPxU3/pJjy81XLHmjn2qTTTkzpcaZJW/0U/rPnQMlj1ix5I1+avI83T3t
29RY8kY/lTo7+ZJV6S/0DPs8yfVX7AfOl6Nn4NnBnXarlCvQM/CcORfSRPaU
o2fgz45nvJfKKkHPwL3oXKcyrAvRM/Au753rd2nnoWfg44dy+5pFM9AzcJvR
IAsvlyT0DNzhfN8dwTsx6Bm4+bLD2hNXvkPPwC8Gn+J+t90PPQNX5FyRfzzH
DT0D//Hwnt2+K9boGXhx2Pr8E2e2omfgrwRT4xvFODb8m59HqVFqkchZviqW
/DxKXXkQ7Luev5olP49SzmlhZiETqljy8yhlwnny9q7V5Sz5eZRS9hM6zH23
mCU/j1Kavuop4dn5LPl5lBq++vnys6Aslvw8SoVyXDHgvJ3Ckp9HqfPcs7Vk
9saz5OdRqnXK429BohEs+XmUMvqZ+8ksKoAlP49SH9L02n/s9WDJz6PUCYqm
qb/dhiU/j1JNklk7ORdpsOTnUWpz+y0/+7nj0HO4nZsDY12zKXZQW2RLDXoG
vtJqqFbQohY9A7+i1/+izbAGPQO/f2DKoIpaJXoGvvMF95TzSqXoGXjL3Zmc
16UL0TPwY519Kb/yc9AzcJltblNLFqShZ+DyTpqHju5LQM/AU7bsXOseG4me
gb9Ob91sEheEnoGHSexc+szcCz0D5/x4Rn55yS30jPUvHkhaI78TPQNX62rJ
aKniQs9/8jY7bf+BfvoD6TqWcZCd9inDfpWaUj3LOMhOs95s7RKjU8cyDrLT
NvrfN534s4plHGSnLYubNHDGv4xlHPwdP3T35Sq1IpZxkJ22/eDgPSPbPJZx
kJ1WmcxxQftsOss4yE7bk/NLcJ9aIss4yE7L32sXuZQ7imUcZKcNX1w0Z/TA
W5ZxkJ12bfMIT80Mb5ZxkJ028u3FsyuT77CMg+y0aKU1PiVLdrGMg+w0R1sV
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
i1d9o0rfyuvrKJF14qGoGS8Z7/OYJgpK8w6SdVB8TPJyg21fqQeGK4tH/Mg6
SIx+LoZR/9U1Ks9nznYmfpJmqzLqn2/9736OlNO7F9ODh6h8Bxm+v/cl7jnr
LWecU5HyNXzQVr0G/Qi9FNRl/B19TV38PG1/sk68OPZ8qp8Krh9+8uM7WUdP
Z67rp7LsP5it6K1jXPeqHE/16UDip1LG4zTjurJply7uEST7Dxvk1Aa3Zw5S
Dx/X5emIk/0Hz7H+PkhJuOW9zttK9h9+bfQWuNU0QL16qt1M1yPr6D95YID6
7Dnv69t8so5O3jy0MPZ3/cOu/rtvc2raI+v1KqPUUT+P0b/3H/7kpRFqZrRN
2Gcf0n60JDo3MM4NiJ47KXBKKvETIeWaUff4O/Ukw116kj7Zn9n7H/sM0WE5
8YzrblGRK1SjiJ/ZkWZbxq6rtedxfihpP1ejxUvP649QlnHmmSWCxE9tbL7B
2Lmjm0X4J5wgfmgJll1+FsPURfGqX1rRxM/zZElzRv0F5lQvHNIg+zPj0ovH
1f+uv7fiv/szgS5nDHRrflH5Ta5T/t5nmPh0Zpf5qV9U+XaBsI57ZD95IPCi
L6f0D+pclKkCJU/aSc5/7CcMr/b3ZMRX4f+2eKCY5JlDzOeen9gnbT/9newn
xMuzRzwZ/En11h9x389L+pHoWN77SXnLcS1J2Er2W24o7c/JmfyTEpDkG4gL
9UcPf/LhD6pz5qrCsoeknSirhzYx6r+//do/+y0D98XFFD+w0yawLRb9ez/h
T35mpxXN5VKtX1qGHma7SCY7GbDRSgb0BlSCytFDJ3xnhGV/wLNKSYERn1uM
R/zoE7KvrlEzcxzjea6OkMx84Qmp6OFXbXfmIVV22rcTx67kKJN8G1Kf8pDx
nJcvcoObNH84ejBodN9tVsxGe/Cc++KWg77oQajZeDbjefpKUa5Oy2dkXyW5
RaWBUf+Ljv/uq0zPcxQsusVJW5xQqfr3/kD6xxMljOfILea+z6hYGH/LKbvS
hE7G+ST3hPW6H4iXox/5cuewhUs5aLlDX0tWdBWjH37mOrqZZb0fJxK6lHHd
cMsD5/ZPSkM/Z+fe+cq4rkK770XzOYnoR1RMJ7pbiJO2urLw1kVOMl7nM59r
H9I+cG5iPhmvbyzgUx7vzUEb/9MyLrfqBfpZNTYucNDuux62+OxO9k+aJCLy
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
+N2KIZs97KnuZN7SxJz/dMcbSTo3wTjb/Xs+8cuLMS6LuSm1fzfWRm7OnB/O
2npQfs8qMt7B84uNc/TDJ5lOx+c78J0CWunjGn4LUn/gC4qXNaX/Nd4Bj9tu
H9558q95OJM3Wz9omKyZhvWHc26vXPMxum9N7guef1u8fdvf4xRw3RKZvQ9u
F2N84PRdd2Ru8pP3A+FcymVrmw417Sf9Hb4vE6s+ax4PRfoR8J8LReb/nf+B
r7gqOVf5KCkP5yUuUnH0/DtvA4/Y4WE4ewPJP3Au6LnbtxZuV6zBOMAfxXOE
/p1vgZd86d1WPJXkVThHNHpZ5+IsThIHeGZT7Kq/8yTwpSuqQ9sbSX3gfEXv
vksyp3aQ/ovfo1lu3Pd3fgO+Vstwz8lQksfgvMf1N9S1XiiXYxzgw61lbCRf
JeA5w+s+vjtaNoPcd+BBU8IG/s4bwDvvSifbBFZgv4BzQWcZNJZyXE7A+MAz
lGfO2cuZh3GAu/i9kc7gK8Ly0H9fnZccErVNwnYCXK2xQ/XiiXSsJ/Bj7lc1
SP9NwH7axb3XsVzAH+tZOv69M2Ndw2/lH/rx/RPkM/P/zD99182ZoZlpRubn
Y/PMCMpdiKd1+LUzXhfe02sXqOtifFcFOLyHtjQrzJnxXRXg8J5VY7CaAuO7
KsDhPaJLqXXajO+qAIf3Zz7IH3ZlfFcFfhfMz8till6v3W6Jz4X/vBcdRD2S
NDLUwPVUCPb3NA0Rzu2yERgH+I6pcxcfq0jG8srMfLWnfeO4Cc5+yFuNJVoZ
61DfobRpTz96YxzXC6OBjPXIsS/R4nG4HiHfJXE1KW5jfJcE+Ohnt0AGL+k/
w1H9F//z3ssXKnD2+Pq/fVKm/uEM/t2s69fffNnYfks/teV0jMPfnq2+33Ia
e4/xhqT33/xPXv1ObVE1UPrbf+KVwxcY3MUg/p/7EqLPMY1xX/br2Bn8fV84
firsYnBHMe9tf3Oz8z3mjPulsd4uiNyvDOb420ipOI2eyb1GxnGFzrVcgq+a
qQv2Xx5mrS1Drj22j91OrdaSvqEjSObPCb1fkhjPxR6Unds95yLJM/vG2k8n
9dP0eyHxnEHte5QfyJhXPE9US9x7uhZ5H4fmdsZ+pq9x982ji8k80KxA4Slj
3I8Uy90mV1iOXGhzwgbG/t7sE1Zxiiqknn+eZ9VS26w9rdpSCrA+8D75og3l
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
4mJzg9TvYpcUQU8ZYr+agN9BPftE9djvxu48YDXjKupZQ+yXfaiVYLPlFOp5
kti/UXAvpAHqOSOqx/5lNb/PtlSroJ7xxH5NRf69kL1Rz5683BXMnYv9FHsp
xaGeY8n31McsdZscp0ejnj3tuYx5q74z9+qQcNSzR/8SRmiUbT/57CDUs0bg
z4uYjO+lmX+K/FDPLEG9CpiyfZPnvFrkiXpGCeYz+cyeWU+rnz12QT3XkThh
KSe+KkfslxVPl40ydkU9JYn9Su3WkkYGD1HPYcT+yQ3iy1/o2KCev4j9mSPX
rX3Wdhn1bCP2p3a5t9reMUY9y4n97w85ZN3opHHOJGI/N57Zk8fyNaMUf1Kr
USkVde4Z7xoZwy9HivZdSkad4dyFa4bN5I11iahzzzyknnlXa1fS8j4OdWYF
eTjrGc/nb6+I6kaizuECe+qYoZ/VbtXohqDO2wR5PmuYx/vGGkaPC0Cd1Umc
cD8nntlG7N9h/1Bo4MLnqHM9sV+n0/3tyWg31Lmc2B8+ZcS4lg0OqHMusf/1
0/Uz3B9Yo84pxP4/lgk33k6+iDrHEvsf8TyFft+m8cy9xH5uPHNRcrUK/5zJ
1fJjc8d55aDOPe28jdFM9arYnpCFOksOktTin1dRe37sTp+n6ajzWHKePClx
41CNL8mo8zBBntsWRtsg94mCdiLqLCxoV81MSruOxOXPMajzL0E+0iZmz+lU
g5QJ4ajzZ849m6CzArF/vElejXx1IOo8n9if0NC6jxntgzrLEPvDW+ZsYcVd
UedJxP74b8K+c47aoc6ixP7tlrsbde5cQ51FiP1x2bOHKu6i8czeD3vs58Yz
e/LBfmJKVypllOrROFtPPthPzGkh+3drdhegzj35dT8yqb7H1k6YmYc696xf
PjJvR9wOEMvKRJ31yTl57wnvO6U2p6LOmwXv/QOjFT7wRK95r1DntYI8wO+Z
ebtfuQ3rHYc6ryBxQj9OPHMlsb+5snXQ7/ZQ1DmB2G9s1iRbPzUAdVYk9m9c
e7rw0jYP1DmC2D9E68G3V7mOqPN+Yv+jkc33Kldaos47if0eb05tW91I45nr
if3ceGZPXtyvzIjzhdvVY0tQ5x5/8oU5pNc/trioGHXuyRv8hZknK5npVVOI
OsP9Dm1Tps4PnpePOvfk6f3M3H0ycM2t6VmocxH5nl1vSJ32y6WpqLOWIL9x
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
xxCOnn/fs7zsZzOJQI6ePEb+etwI5+LnHD15TL/E4NNZozw4evKYxENnZlp0
P+HoyWPWv3aZmjb+AUfPv/O9m9/3dXdYcfTkMQHBgf3lc0w5evKYFVv09u2K
3MfRk8eIHJ21Sz8K8op8RD70R/8oN6fGZaAzjCODj+mLhuglo87A11/asDiy
bzLqDPy6rkJVxp4k1Bn4JiuLpmzVRNQZuPdCrf2mG+NQZ+CiXdcLqyQiUWfg
A/qmfd+uHYI6A9de+jY29tcL1Bm4W+/w+h0GXqgz8JXlR1uvn3RBnYG//LYz
TnqoPeoM3OrEljqfQ9dRZ+Dr1ljLPso4ijoDjw8yu2dVuAh1Bj7ebvyRT0vf
L/u3PbcyKp9vM9vfZ3Lacysz1Vzx9LJ9mZz23MpUPThq0hqYwWnPrYyYXnva
tNZUTntuZc7WdEgrnE/itOdWpmvT1mueQgmc9tzK+H3IXvLBKYrTnluZ2xvq
r0pVhnDacytT+864abrDC057bmUOhiglzUry4LTnVqbG6aBxn5NOnPbcyqw2
TQ0KXWjDac+tzJhxvc8NVj3Nac+tzKsUjaNp/ZU47bmVGarwXWvV+s+oM6wX
rCyFvg3woHn8gZt5d3w4ppqPOgM3mWg7Kbw0D3UGzg4+UxJ3LBt1Bj7v9q9N
V2eno87AQz4q14ZWJ6HOwM/Pu+s3LpZFnYHr6RU8C7eNRJ2Bf5XKkcnXCEad
gSvGWF20cn6OOgPPGKXXtnSVK+oMnPGTXnN5633UGXhl8JZzv9+cQ52BnzNZ
UrzitCrqDHy5gn3ArrpvHL/RwWjF1914FVLE8RsdjMefsUJrZIs4fqODOWx7
xfTCm0KO3+hgvmmMuje8MZ/jN/4+v6ORlxORzfEbHUzo3ZIPP+3SOH7j7+9O
9/6Wm/uK4zc6GOHBctrs6DiO3/i7Huz/9Vy3YxjHb3QwKp1fdJXkAzh+4+86
0VbCr3H2M47f6GDm5lxanmxoz/EbHUwIcyij3wozjt/oYH7NGGVZHbiS4zc6
mH6aXxVdmF+oM8yvIv1Dx29+UIo6A9+4P3fGx5YS1Bl4VF+1oWFhJagzcIOf
I3h2RkWoM3DTbddTxa7lo87AP0y5a7poTBbqDNzTYkWas10K6gy8bVi0mqV3
AuoMfOwFhd06wZGoM/ABExfcU1IKQp2xXuxnZYlqT9QZ+KnA+d9/KzigzsBH
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
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJw1mwfcl9P7x+/7+X7vx7n73lr2iELJ3juKRFa0jFAqlNKQaBClZDQ0lUIT
JaQUlVDZe2bvkfmzR0b8P+8+5/96Ped1fb7nPve51znX+FzX06BLnza9q5Ik
eaGcJCXJSVmS/CS5o+SnaZJ8pnaw2udqX6j10rGBER+q9qXG5ZJ/Sv6s9ovw
T5Lbpca3anyLPEk6q295oXHqq9IFW0oOVSsJz9OYlcI/q00Xvo551XoLf63z
1gkfl7lvXez/UPIjtQO5Nx3LJNdLfiz5iVpHjbk2jjlNONF1UrVt9PuyOOYg
ni/zXEdIjozP20nD18Xnb5a579PYz3wfxjnXxfs8TO3Z3M9yrGTz1NfjWr/o
/N8kz5EcJfm72nwdPlvjjhV+QvIPHVsv/Gt8h78Kn5l57G9xPO//n/jOt6ry
e1ym/t80bgfhf6P8Q+0h9Ydq4xqSf+tYHeFWkv+obSHcTrJJ7uus0nfZXXh/
4aXCz+Wei2dZIRl0vWMkr47PdUvi6+dVvodqyU3U9lNfP7UP1A5QS3XthG+k
eTfT8SyOeSb1+BGSf+nYppItJb+JmL7vJX9Qa6o2Qr/r8s4lr2Uu4TaSh+r+
btAlLglaM/q9pfpPl1yr/k117cf1LE2FO6pvnvANktvGb/GJ1vtCnXuI5Mdq
9wkfLHmYxt8ofLrkk2XPv6XkEbmf+wzJZ/V7nPB2khvUXhZuL/mv2iucy17S
Nd4SPkf4H7WXhNtJfqp2v/ChkpN133cKN9OcJ+u+dlVbq9+v6NhUyZ0kD8+N
h2hsbx3fRe17/W4t2Ujtf8IPasxXrEWNOSr3fuog+Z7Ov0t4H8nVuffXKsmr
OE/tKNaKfl+Z+NwzhY9W32O8A/ax2jQdm1Dxe91H7/BRHRutvl81fmXE9DH2
xzh+mX4PkVwueYX6vmZ/qT2s36PU/4vO/Y7vrb6TJV/MveYfl3xD9zpDYxpL
rlWbKbyb5NMad5/GVISPzP1c12ue+9W3MPUzrFD/d6nnXx7v4avg63yr1oTn
jnuBPVFd7XPZF7y/DfE+mePf+H7+jPrtGMkhki+mnneZ5Eupn7+b5KtqdYUH
S74QddRfcY+g6+5mr0meK3mJ2lM6vlj3NlPz9lL/tpLT9J7PQnfllq+o1dG4
dzJ/8/GZdSPzd0ytr55nTrUL4/ivNa57vJ9vhB/QXG8L75ZbHz7H+lfro9+3
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
B/S1ftdQ/7GZ9U07YtKS/Yv++IBl28l+wlVl+wV9hf/TmENSf2O+L7r8Y8kL
y95j7DViZ/yEK/D7cuu204W/KVlXtRf+Wvj4YD3zWm69eAbxjfqH6fyamufE
zDr1TPZcybr/HNaj8MHYWnw8zXF6cP+Buf2snsL/aMw2Vd637Nkj43vj/RGP
EpfWiXHZBcKbsl80z1jWjORzmmeYcG3J53k24TqS76T27YkviCFuSx1H9GIP
a8xCXbcvNl94qXAfbBHxrnBv9rPwopJ5zeHCddENaiPwnSWf5psRY7JXgmOF
3yRXx+/Ct35TbbxwPcm31SYK7yj5ktq1wptL7qTnWcf8mTmDhdFXfyKuDdbA
y2ojhbcoOx4hFoHPejyuJdbPcGyj+k7Bv9bvScQakpdgV4Uf0rNcJKy/ZI7w
nhq7nnsgfskc6xMLD9KAbYQXa8xeGvMn10XX6NkaSr4seZnGbCm8oGTf7Bi+
m/qvVf9uwk+qv5Dt2FrftSJ5q+b9innQ7RqzrfASjXlfv1/XNd6THKL+eupf
of591bdBeBe1nTXvgcRHkkPLvodVJcdRxFOsh18lv+A9qNUMjuvx39prnj9Y
J8Q4Ond7yWXsTeHtiJOEb8vMeWwp2aO80cVI7ig5biR+PETyXfVPVn8DybfU
JgjvIPlV2Tr+KN6HnnWLKvOwv7E+1H9y2X703cL7Cz+ZW1efIDk72CZsK9xQ
bXfspRZj69zP/VJwXI3OIc5Fh72q/jPLjt+J3RurVan/TfWfrf6TcvMN8Axf
lj3/kZJzcsd7rM81uePlt3L7+3CSO0suV+sR92NdPUedKsd+zXPbr2Mk26bm
DRuqLQrmFbbHN68ydw0fPzd3jAhPeL3ubWvhszJzY/OjrV8ZdRSLcU3UjejD
VdHuoNP6R3uILnit7P2+DXtO171NeENwnL59lZ9npK6xuWRbyf9Sx6fEv8Sg
6Hnu6R6df5bO/V7POETjAmMy8+Jzok81IPov6NzB0QdBx3ULjpW/lny4bD8I
HTtU5xfYfLgE9lvUw49FnYwNJQY5j28UHB+1Zm0Izykbf6F55gq3EV4nfL9w
Z+FfhKeUvb/eFp6E3RNeKzxVuLnwOyX70YuEDy87jlksfETZPvUDwk1Y78R9
+HnEIpnXYTfJ9Tr2sMYcLfmN2j3o57Jt/XLhO4P9/RXCzdAN6t8aH0Xz9M2s
Qxpl5if+S+xf3qhzFvAdc+v2baN+fyM3fp1YL9hfBcMFbha5feKDWerfQ3Lz
Kucq4IJOSL2/2A81Ym7i98x9W8b+9XEM9z2p4ucbofucXbZt+VHv6sOy10+j
smOFOcJ7SdbNzefVzx1zrBZuKbkFdh/dGOxr/JyYX7q54j3+QDCvCucHB9tK
418TflT9dXLbrh0lZ2Tm+3rAr+h3ffV3Zy9GbgSOZFTFurY2Oow9S+yp+2+Z
+31ODY5jwAdIHk2MrTHzC/sn6JkpwfHQbOE9JZ/JzcXB3REPzVX/3rxbri28
E8ZQc6zhHbN+M+v8xpn3/nnor8K5F74R3C35ke2qvAc3laxZZa6BmGxXnbum
5JiP3F1DyRap+Tf4PWK7xpKPo2eqbTfrVHu++lXe5+T96lX5/LdzY/TVu3yL
Ktv9SzNzbHtk5hD2F95H/aM0/wHCL2j+0WXbjheFJwofLvyG8AzhE4Q/Fp7J
Whf+RPh64T2FnylZr6BfuL/r1L+H5NMlc3cfwG/pneyd+1r76rrP5+a7b0Rq
/GGsbY0fKby78FMlc2M7RH1Vq9r6pCj7+blObclmqXUv3MqSiMkn1ZKsXWUe
hzwGv/Hbjoy4ThxbN577CryH8Mu5fXy+E34gfUWV/UL8w0rEh8cxfEdyXuRf
2b8N4nfh++yp59wnMW9JTHyo8KslcwBHCb9ZchzMmGdLjn0PEX6l5O/IO31T
cmHuMQ00X3/0b2Kuk7j5YHwMjW+sMfup7y69510ZTzwh3Cg3p3p/7vW/fer8
FzwWeat92euZ1xp5ZHKvI6Mtgd+F5yW3COe0f2pendhrZhwDb7ki2ozbU3Py
+I39c583Lnfu9+PYPzF3DnmS5HiOp+bZh+eW8O7E++i2sdjQuFbXBufQvov+
Ht+Ob8+3hmfDdpFPI4d5Q/T5yB2Tg+F68LiLYz+59M+j/WoX1+SbwfsV3cqe
PTNYB7Ie4A8uj+PhbpdGW0kChNwzPsGY1P5TrcQ6D24dvTejZJ2GLzezZJ2J
75RmzmOcVXYumxj4Zl1zUnCuDf/hnKijSrl5eHIP+Od5zEcTO1M/cBrvlT2W
OTdEjgjbAsa+LMucKyKnxH21STd+zo2+CT7K6/F+26XOB+CvcIxcEnwm1yR/
vnt8RvzD0+MYziU3go/1ifApETeOxxnXKM57Wnwnq2MsSUy5kUeP35R9yf5k
ny7KvC/Jnz8f1yT8xXPxmxLb3xdjWHKjTeN3x8+/N8az5CLxTcjh1YjrlXnw
kfBTGIOv8npmX2w/7HnUk+hLnnVY/KYHxuvCAd2T2++BU/0lcZxFLQd1HOTF
8LMH5L5HeIgX4j3AybAXqIeA02GtwVU0S5z3I59BLuO++P2SaucJh8cx5LMY
T37/lcz1AbuUnbOjRoSYl7UNhvP5Nj4jzwondE/E5L/gnydn5ojgsPAzF+T2
I+GlySF/FfvJzbPPfg6uv+BZeK/tYyy8LpjHujP2oxfRj+hPOGTWKTmxOzJz
0TezDjN/K2oN6OedEPs3j/E7cfwVub853NXg3HsQHmxI7twLufQTYkxNbE2e
cnD8phvzNqlzN1fnzreQD+8U++vGdzI4fpdRhesJhlXsE+E/4ReNjuuZdU3+
5FbJz0vWX6yJ8ZLTJKen1o0rM0t4qn1zr5dLJW/OnSs7kbUauR04ntPUvzM2
NzjmRoeiJ4mluBY+H1wN+aQLcq+vrnGNfZ54/bH2vlT7TU3TbOSX8Ivm6cDO
vB/h5SX7VegiePhpuXU4/NgOmXO56BDm/8mqLWmQO259IlhnoCPQbfWj77dK
/dXEe8Ln4ctkjo/vLPk5eV7ys7ybqfH9fKwxE3m3mfU7eh4f4KaKY8f2+g6n
Evclzguw/9iH6J7ekZPpxZrJ7SOhG8nNwKGRC6DmiJtnb0xJnWtn78AfT477
C32I70H9DX0TYv+e0bZiY8dF+3WT5CVxLubh+E2pvxm1TDOEH5McXbFf/y95
h9S2DXs2LmKeBzk2Yp4Jm0G8TY6bfnyzG3LHCKyHhplj87nkvvlO6D/175s5
5n2sZFu/IdqvvTPf16PRH/g3MQ9ADjyJ7/+83LqF+oRZuXktYrQRcW+cn1tH
sk/Rk6NyPzP2l5wT85B/gYPHLj9f8juACyU2g5Mn/iDv83LqOhtqbNrF9cOt
zA3mAYjrN/rCVfa52Gfst08S61p0FPuHOIi9MFnyltQ8MDEe+S2uu59k59x7
Bq4e3h1ukJjzvrL10IaS+XX23Xn63Sq1ncPG1co2qtrkrpJrRuBeqIeAN8Xn
v6dkbrU+OgR7npk7mV+yj4ndwsfcObdt5BvByz6HzdN5PXPHO8T+8LJbc18l
16PAQ5+cm7ujBuXrxPUPcMhwyeha9Bo68ZaKn4HcHP4qvPd0vltum4Xt+rXs
OU8qO69Orp1j1GBQNwNvRWwLnw2X8kvZvMSJMValDgOeHI4Fjhr+akzh+qpr
dP19Uq8H1lndwnE1+cSVJcdlcFO3BddckYetWW0/drNqx5VwXHBdxJvEq+Ru
dgyOI16XrK+2l/Abku/k9vGf0HXqBccFr0reWrFeJCamVgD/lhhj97i2WePD
gmvGyDXvFxz7v8/eKcyPwFcfEhzXfCB5aHBc8yE+A3kl4Y+CYxbWG/mmRvE9
876PCuYfPoZXCY53XoP3jVwWeQS4AGwIuUviZfT1Rbn58tuFdy2bR18pfIzk
kYU5BXj1hjEepK6OukFioDVxz1KHQI6V3PVQjakJX1G41ucq9KLwirLtctOy
74HczVD9vilxXr5xcMz1Nu81mCd5l3cbXKdHzp14HDtDfdQ2hTmvL3R8enD9
Hjl3YtIG8ftOU/+9ifPyewg3YT0E11turM2qdj0We4wcxG7BMeY7kvUK81zk
4hdFXigtO95nzfaTfDi49o98KzELMdeNmbk74ppRwiuDawLJw64IrgMkL7ws
OG9FDnd5cN6KHDGxFZzqMcJLg/M+5G2fKpsfhifeKZjTIF+JPoEHgw9DD8BF
N8CPCs6dkS/GB0BPPQJ/FJzDIu/MN4H7ggPbpDA/S+6+U9k1HvXUv0Tjn0mc
sya3f5DwSyXHU9ihcRXH6sQsxHs7ENNxPc33EHF14tz0mOC6Puordo0cBVzF
6OC1R10E+moXfJrCtga7A0d1eGafhvundhM7i70dG1wfSG3G9sHc9SvBsRu+
K/rnBv2ekrhO4JDC/BF5H2wTduqyzDoHPXNh1FfoorGZuR44nwmSl5atC+Gb
qRFgDcC7wwmiv6nloC4RvpR6DGwi9u7yzNwxcRN1qOSdWJMHlc09sTfRY9sX
5iW/Ud+Giq9HvU2jwrVxQ/GVCvOJ7PHdCudO/hDetXDtziO8v8K5h5+Ca4OJ
y+DZdi6cb/iR/VU417Iem154beFLF4X5F/RSpTCfwn6hlomaNGrPyPPitz/F
3BXnWp4Kzj0viP3UrMLlUouCb4qt/BSfOlg/UDNTuzAfik5rXDgfQ56uRmG+
hr2/R+H8zZ/o48L5m7+IiwtzQJ8I71+Y0/8vuA6cuP4Lyb0L513+Ca5TpZ6Y
90MtK3Wq1LjuVJi//iG4jp0Y/KvMtWfvx3umtvZb3q3G7lU49/O3xjconCv6
XvgqtesT1xTVL8yD/099twRzs9QtkIdE120ruV/h3NK/Ot5PbVDiOiXq5Mk7
U3+NrYErgzNjzVMHTq34joW56e+CeUXy4NT5UNNDbc/I3HWw3+ucx6gxqTiH
9CzroeIc0hrh3yvOlzwunBXO32DjqMeDP3lRcqvCnPvn2JTC/Pi3wfVhy+OY
vDBHhs6kRpA6wJeJq/S7S+L6n78qzs89HVzL90gcQ60hNYevSZYL53iwuaXC
OR7sV1XhnBN2Ni2c32KPh8L5KuxF1+C8LfVjHYNz1tRT/V1xjvCZ4Johaocm
qm/rwhw9tUbrK84pPqkxnYJz2dR9dQnONVNvRv0tvuO7mev9qP37MLOfja+5
KnM8RbxEPRt1FfPiWtq8MEf5aXD9IZzPs5K1CnOa2PemascmrkV5JrM9ZQy1
GcSwj2eue8anYy0SK3HNBzVHzcJ8JT5D5+BcNvVyWxTOT3yGfgrO11NTR93T
k/iwmWsanxJ+M3PdIDzSc5lrV8inUH+Fj8f1HypcRwinydqivmF23Gvzgn1L
aorwvzdyueiJ4JoN6pqIeak7R4/BERAPLWatFa6zxN6hr9Hb1BjDfcCBLBG+
TvPcoXmqctejsa5+LTnvBddFforaq1FxPFwEuWPqQ0cF50SoX4LHgLugVrm9
+i9KvLZPDc7LU5c4vuKcUrfCGM4N7q2VWtvE9Y1bFs73UBfXUv0nJ66VqlE2
/0AOt6/6r0ush4klb46x2xnsgcQ1itSOEQeuyBzrEZs9JDkimP9Hp10bnOMg
6U1ekrwP+Z/xwXmiTSLnAGcyj+cLzr+gWw4onLfm3AHBuWzsxcDgHCj6f1xw
7omaLuqSic1mS44MzjWkubkROLG7sYfYpMT1UfBU5CaoKYYDodYff2/fyOWS
e+B/D+APyXNQc35x6lqUCcG5LWq9JgovSVzrRRw+Mb4TcsnklPEJ2gbXJ1Dn
eZxwh8R76qBgHpu6tQOD+Wrq5Q4I5qKp2ds/2G+hlu/2wv4EMdpBhXPDrCvi
MeIy8oDUR5HrpH7qwML5eN4D9fnslXsL10NQF4H/SS0k+/ddzXGEfh+ZuA6t
WXBdEzVj1Dmyfr7UmMOD+Xbq1qjBwUdqzR4onM+jJmfTwvkPaiznB/vk1ATC
07aKPkn34BoGfIY+wTUG2PfewfUJ2DXq6c+L+5r6R+p/qC06JThHiX4gB83/
nvSUPC24boTaXeIa8v/nFuYT4AngQtoE15BQf9siOCeLLR5TcRwGh9Q6uBaF
ut/mwfVs1OwdE1zPRm0eNf0d47rtFVybgT3lfwM6xfV2cXD9Bva0Z3B9CLYP
rpB4fK7k0cH1adT19QiuJ8FOwevBG9wp2aHs+n50+JLCfC628sHM/An7blBw
jQf+xr0l15lsrv7Ngmse8HOIzb8Qrp2ZA2TuBwr/vxw8FXq1bnANBjaFfCLc
M/VL5ATxz6l9IganFpy6U/KGzPdHxTUZcFzkDuFs4T/hQbcJjv2pmaSum/w4
ddzkN79KXGd1RXCdA/4JXB8cF3zgVmXzpeTWyXvynUdTOFO4FoSaXnKWcHT4
A3eXzNtR00L9AXUI5IwbBef+qKVcVvj/B7CnDYPzhtRJUksBl0KuelbJ9So1
2TPBtW3wmXsJ75247pQ8JlwhtWHbBnMR1I7WCubu8FU2D673wH/YIrgOBJu+
ZbB+wLe5PzhvS33pwuBaC+pOZwTngqlTnRmcJ6VOeJbw44lrVlvHPUjcQu3w
5/GeWc/kUf+rmPuFY4drh+faJXHNx5Wss8R+5qLC/9dBTEStNHpydcn/G8I6
XVy45oR6jNGZ/6eJeiH+D2lwcM0P/i0x1A+J6+j+D9PhPQM=
            "]], Polygon3DBox[CompressedData["
1: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
OYb2xMbZTvY538dn+1i+yXY9xzzTxGvRy1G//9kXPnV1mR/PNpmfzlPn15xN
/Cd9qHt8Hm30prpze/AddfT97+ybvY6mHVS4xz/o/6TO3GvZPq7zjfutn8F2
J+1hdbj4n2y/0V6xzr38wfZrneetvlSDqEWMmcbOc9juqeNP+XteNSaU48fs
Zs479+fhfirwgYV/+Dy9l376K/rvq8NPfIf6M2e08WqW8Z228Sje64tm07vQ
85Krydn0wi7XQ2D8lxz7QH88I/2X+9n3Ivs2qtNW471Lex76r5bfgF8BP9/E
G7ifc/5lbOR8A7i3P42bnG/aNuv5zlXW62nY/738m20c2sv04s/52/Vf1M9b
gr/qZL6dSf9D4Jdp39kfj+k/ffEE9J4+avI9DSr6/dsm3+9ExU97jus33M8A
ntWD4PM43yTlt9zbnzhtvH688IFbwSd28xv9rf5+x3c5xx919PJF4AElfn9T
R3t9D/624O9oT9aNHju1zlriGqAf9nAdb+X9bvxK9bPX+0e5n7t8xvS/1Y0H
uBjbO91wOOfAufy+a+jfpg6/f6COt+KYD2jv1YbrLVyH/+iPei05t9z7jDqx
0pht7DYe6T8eWJ6h78339wv7fqD93zrrS832Ie3z2vitcvfbOf/wNvP1M9cG
8M/8/5v3Xsarx/UqBnfDzx+v4w2M1Q3f/75OrP+1rEdb12nLsfoGxjPT31E7
3FL4x8bGCzki7R/r3OtEjB/E+GcZfxZ4PvY/3J/37vu/m33r1/lG/Va/KHPe
b9Rv9ZPyG4xRxqoPy/fuOuh6KOfxei/VmRs/gL/z93C96WjvQPuh/vA2+Zue
h37bHuDZu+GAM/n+GH8xeHGfS380m9pNTaeXqOZT+6np9MLlJHITOabesZpS
balG1Iten/61aX/Cvi36wznlnnIavYgNjLG0P2Xflv3RuGpdNbfevRpSLakG
1mvegvFb+fv0TfrDaeW2cmS97W3B2/u+2Lc7/duAtwP/At4NvDV4W/DP4F3B
W4G3Af9knAZvCF4X/Bl4K/B24B3UB+A9wFuCt5bPg3fpD/9Sz95d1uzN6N+C
9rf07+h6B94A/CV4W/Du4HPVB4w9EDxunbXjh040w951uNNp3cR7+al055tO
+OPOHH8c7Qk5fl+On4L39bXvxjgLXryX9ch1ST25G/g0nx3jDwDvCj7VZwve
33jXJt4Z9y7sD+eUe6oR9F5dw1zLpu7EmzaGGkv1T0+mvSnbxrS/Zt92HL8x
eH3wF+BtwBuB1wN/Dt66P/PK+eU36LeoZz0j///ciZft93tpNx7cfG18Af2B
xzrRR35P6q0py/c/m+ZyN9zB7+mkkp/QI5ud9t11vjdjlrHrhTr+2KTd6F09
Pt+V70zvTw/3q754YHq7eoi+O9+h3uLudbSLnGKGOh6Zc8M5onc2Dvi/fbn/
JZqsv65fcki5pB7rG31Z//Re9VT0VvSE9Ob1bPRu9FzMhbj+OxfkDHr86iH1
+Xng6UpOQu9HT8hchZ6Q3pAekLkVY46xR86qRn2uTv5gohJvnjIO+3u68RP+
2cbP0St7pD96w/ihplAjGJ/Vd692wmfP7iU+fl/ii3xpgm40gdpgJOebCrxV
WR+Nn2I5vlx/HLapB8Sj0z9atc1aZ57mpP5wMLmYmvfEXnJOc9ThQ+ai9Mu9
3s119IEaWa2sJ6C38nQd73PCbvwP8y36z+N247/Ip/VXji9rsppabW08HKuJ
JlYb+74HN3nHvutrq3zPerpLV/n+9Xp9577bc6vMBTWFmt7fpNa4ro4mMwdk
LshjPNYYsmIbD2ziOvFZb6xqs1brcet197WZu3JoufSEjP/O2On7of+4JnPD
ObIE/VOoqc3NyNnpe7WO3lSTqk0PbvLbfQaLMv7BNs9qGbaHaC/X5lvTE3iq
DeccWSefIRd1DdfLMJ/h2v465/uzE09Rb3HbJtxSjmku45/GlE40wjrleexV
Yt6R4NeavFs1g9pBfmz+6w05SBvN55rn+joreI8m3ECOYK7yhyZz+RD27UX7
0yZruTkRcyPOEbWkORbnzjJtvH/XRL2NpdvkosxJnd2Ek/+7zj14L+YEfXY+
Q7W7+SafhTkpc1MrqTn64rFNz/ije/HL1qri55pjXbxKztjcqx7/YlVyznr/
fkN+S+pf1+715Jx98aSX8n7Y92U3mvfQ8n765NpsT7fJCc1RJYdgrmhUGy9I
ziT3Nac1Z5Wcr7ku/Z5RnZzD92sOZ7YqOThzOy+4xneiifTKzcmpBdWE5urM
gS1aJSdjbmxi3w94d/7bBHxzm9ybnt3sap02sccY8wbtYYx/vi85gXmb5CM3
6SYnZ25u3f7oEPXIqXqrjDm4kxyzueZpmqxNcvQb22gEeZP86W7XNvpP6iQH
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
c9p/NYmVali17KHgU8Avg+cG/9mE6xsjjZXWG3zgWt5NfcNvTb4Nvwm/jV+b
fBt+Q35LvzT5llwjXSs/bqJl1DhqHddkucnZVdZqY5hc8ecqsU0N71pxfhVt
75oq91TjutZa42NeV02oNnTNlnudU2UtlxO49h9fhSv02rwfY56xb1Cb6+lJ
6U0NbhNLXXNce8zPq3WND+bH5RxyjUOqcBE5q1zqgipc1vo0j5+s+MvWuxnb
d6lTr9Fy/ls78TT0NuRAcov9qnCjpo3Xoceh1/FzE24h55P7jdHG+9BD0EsY
G/xyJ2uI719OIxc+rQrXGavN9dcv89EaJetC1NRqaz0EvZKTq3gLciC5+ClV
uJE5Rbn06VXq79R4cu9Tq2i/kcVrVNObD9HrVgvrWVkvrBdpLPB7th70vjZr
kZxAbiAHNvbfXIUbyyn0Qm6swjXU79YhWI+wW5s1wrXgviprh/60tVjmOK01
l0NZ33tLFW4lx5BrX1mFe8iB5UKXVeHGekZ6R9YQqB/lwGqB++tw44vbcDc5
udxczixXG1mFS6sJ5N6jqmgFOZZa8Poq3Gtk0TtyXPWenM/63n9U4YLmA9Wa
evjm+y7shZvpMeg1mM+1VsQcqH6G/qy1aebUz69Tz2d+UP1svZmaxvrX26po
Hf1qa9/0KzynHNy/57ijCjc3D+vacnUnuTA55v6076zCPdUU1sveWkVr6Ieb
ezuJfc/W4fjW795ehfuPKDHmvU7mvppHrntVFS2kZlJ7XV1FSx3exJt4tUp+
xTVNLvhKlbVOTjYc/FqVfIzczHg81YDEdP1M19rHqtQvyBFcG5+swh3Md5q7
tAbym77UGFp3oaZWW1/Vl9z1f10jir+rF/NilXyROSFzQwwd7Y+rKdV+F1fR
mmpQtd2FVbSpfrQ5GOvTJmmj2dRuT1WpL7T+wFykNQ7WOpjztQ5JT0BvQA9I
b+TtKt6QnNi1/d0qXFlNqra6popWVdOqVS+ponXlQHKheYo+e6JNLcaQwtf0
gFyr36viDclP5HpyQrmhOXFz4/q91gv8Vccrtcbd+gA9H72n96t4QXpIav3/
VPGW5Ih6uftW4Y5jyl864ehydWPIyyVfY2yxJnKZKjU21kpagzWs8H1rl62x
Mo/yZCe1y66/5jrMv5/TS03Y6oX/Gnv136yl0VOfuY0fqRdu/mCLNjU9KxS+
e33RE9vX8YDkr/JTa8H1FM/oJYdvbYH1Eub29a/MCet5D2lTQzi08H3X/v42
67EaQC1gDoRmZ8cquRH5tTlsPd3F5fpN5rJzWq7hnJuw8Efn4odNtJ8a0NzZ
++CNOsm5mXuT0/gdeI43Od9/mmhxNbm5ONfwGatwKNd2a6KsjbLGydrND5po
OTWduT05ziRVOID3Y45kLdojquROfiz8wBzUW21qrszjmpNRn1lTZW2VNVjW
ilof5Lc1Omda+Lk1CeZIlm9T87de0SvWfptDM5dm/flrbWoGrR20RtDad3/v
2AOj8eV2d5YYZow11hoj5HZyPGOH/unndTin3NP8hLVDeuy3tKlnMZc8Ogfc
pmZx/aLHjF8TNfnbKTnZBPRP3ObbfpTtiiY5CnMVz3ZSi27Ni7UveuR65daA
yU3lqOorayitpbQG0tp7/TlrY8wR6k9P2sa7NYdrPssaSWslraG0tl8Nq5b9
sJO/F7Imzdo0a9qs1R2T7dtO/ibLv/eyJtPaTHPeU4KnapMbl8P591XmC8eu
845Gv6sm2kANoBbYoazH91bJjb0LXqWTmh1rd+Q45tLfLN+f15u8Tg7H2tB3
mtT2WLNk7ZL6wNy5Nb/jcf1/N/Hm9OisZTJfPnMdPmGuwJo1a9fMCZgbMP9t
Xtf87km0/RuEB/uSPzPfop9v7Zz8Y6Y2ftiDddZXc+V6SHrVR1bxlvR09H6O
qOL1fNHEG1Dzq/2/bKLt9Qz0Dr5qom3V/Gr/fzXxYs1Rm6vWk53fe6vi1eph
zQzev4q39UC5V+OTf39lzstczuFVcmHW01g779+U+bdlekx6VUdV8Z7GZfuo
L9/kkvS9V75Pc+jmT/2bhOf6cg/mE/XPp69TI2ttr/mer+pwCrmFHotei5xI
buQapb+h3+HapQepF6lnrB/kGuvccI7sUb7XMQcm32ou3M32FCVf9VmT2Oa6
rbdiDsVcijW25i/NbznWGquH2/i/j9TxfPV+/2gSC04p8UuOYC2Ga+po7tCm
/krP2GPNd1tnZc7mlF783UkHpIZ2JcZ/3uS3+Rv1cqxhs45kdD1J4X96oR6j
H7xJiY83VcnVXdLGm96ik3zAkuX9n1fl3fwf9TVXOQ==
            "]], Polygon3DBox[CompressedData["
1:eJwt13m8jnUexvGH8xyew7G2TJS0UREqpBHZspSyRk0LIjHIse+yRk2ylmhR
jaUUowVpETJlTVFUKrTQhEjNVGTS+/u6nz+u17mvz3P97t9y/7ZzfteCdn0L
p1KpbZRL1fJSqdoetuSkUjX56vw8Kl4olWqKr6e5xVOpzzOp1APpVGqjXDW5
qnwXudvkVslcSVX43fhkuQ1yl8lV4b+gh7CtWC3sCn6wbGvPjyq3gIbwn+GT
5N6Tq+q3S/k9NAv7GLsGu5qfK9vG8xrl1tLj/Jf4TLmP5Or6rQ6/lx7BdmL1
sL/ym2XTBuCUcndRU74f9dKPG2TnYQX8OtmefEnen1RJfiz+YowHPYSN4RvS
Is81hDrjjfjSskWwUnzpyBq/A9gbMmP5uurqIFeeVspdi5fDz+ZfphrYZm3+
EnuF/0nZ92Qm8PWV7YidRSvk6uNn4eX4SVHe80k6JbeBX01H+a00Rf4tfg01
8vtkrCPN1L5Hqafn6dTSbwvVOQd7lV9OY7HxylWlmvwbNAubwn8nO8q7i2vL
IXwlthUbxBfwVeVaR3upuudBWDWa6v0/Z5KxPEv2SLxXZlrUITeMr0PT5NbI
9Yh5wB+TryjTib7xvBPbFfNA7j5ssec5uUmbRvON6TnPlyvfBW/CX0F1Pa+O
76mumfwWdQyUeQrrifWKuRLfXNkr8U54A3541I3N5hfRCL65uh+U2eW71Y91
5V0bqR+2AiuBncHnxlzFKkU92EMxV6IffFX6JzYdK4p9y19G87EZ2K1UR7tG
xzyjGepsI3cZ1p+/hB7GptPVnofnJuM4KC8Z//gO/bDKMRdkbqQZ3r9H+5qr
o7b3Z+T2Y9VoATYTK4Z9z9ekJdhc7Bj9m8/QMKwff4o+4c+lWdhEPk/ZA3x1
WojNwlLYp3xFeoS9H2uO3Z2bjHOMdwu+cOwn/Pk0G5ssVyj2Cf48ehSbhLWM
PvNf6kczrBZ2PTYV+xy7Lr4fdlPMc+xr7EbsGuwO7EXsBNYDa4/diS3FTmK9
sFuw27EXsOPYPVg77Adai6VpENaH7yS3jD8lV4Ddjh2it7HCNADrxR+mNXwO
DcR6822VfYL/XtmbsYbY37DnsV+xu7E22G3YYuw3rDvWFmuFzca+wW7C6mI3
YNOwL7CmWE2sBfYwthv7LOZlvjHDJmLb+TpyleWaYhOwD7GrsErYj7QeK0pD
sQK+jdzj/H/k2mMNsNbYXOw77ACVVcen+P3Yu3wVuUv4X2M/xkrTeGwof5Te
4YvQEKxvts1T+PeV3Uat8pM65qSTPkRfOmJdYg+mCubRUWWLxFqXG4utlVlH
18vdFftaduzje3RSR1dsefZbxvfoHOcb9kr2u/XH7sQ+oEpx9kQ/vL+S+Xit
3OCYt9iSGGt1dMZexgrF4RF7NNYDeyvrgw/I5l7y/LNy/435hpX13gNiZfxd
jL0Q/ZNbkE7GM8a1s9zfsQ1YiTinYg5i92I74jyh8vGdsAHYHs+V6WIaiW3W
j3PV8YZ3XaSeC/Xjk0xyPsc5fUXsJ9iuTHIviPtBDexi7GSMg/ecQZP9Nor/
nbbxp9MkbCRfXPZHvi69gj2NHaetfFmaiA3nT9D7/Gl0PzaC/4228GXi3MOG
8X/Qrvi+NBObwJeI85GvR8uxZ2OdY3209VZsB9aKL0m/8g3pTez52COonLtA
vsO6OD1pnLbnJeffNOV70CPY/zPJXh17dgm5nXHG5yUXqOux9R5fknlM9hms
PB2JNS1zBF8nk0uDsXv5fPwYfw29ij2DlcJO8S3oHWwZdov3LeL/Z+y7Rj/i
DMCew37BumGtsZuxedhh7BasCbbb+87TtzLaW5o+izuO3Ca5s2ma3OBMMoc2
ZudKzJlLzI3JWJ4+dIu9Q+51uQex4lj3OC+wN7FvaD6/X73tsJvijihXTO7u
2I9jfmFf0zP8V3ItsWZ8X7mPoz6ah42Nda+NPxv7n+LbUT2+u9xr2T0n9oOu
cvdgq7JnT+xD3TLJvP8oO79jnl+uHz2xdz2fSQ/IDZDrjX3IX0CPYfdhQ7CD
fC2qTWOU7RNzwfOFNCf2U235B5avXfdge+Mupey++O78p/rWJO5y/Ff0NLYP
uwFryr8bbcSWYcWwstHfGH9sfk5yFy/Ff0yj08m6jPV5Xuy51AtbmJPcK+N+
uYn6Y69hJbEz+Q1UEHMK04XU6XFvjLHGXsY0P3Ua/1Hc17BVWIW4S/E7aCS2
EjsHO5f/kIbH2sXKY+fw++n17NnYG+vOH6Q3s2deP6wn/y0twY5gt2EdYpyM
4ds6+m1OcvefzY/SqN/kGlHj2Dvyk71uYTrZD2NfPBPbrvyIWOP82cpWiDUZ
9/S4D+Yk97Ens3vxkHSy18eeHwNRHxsQ656vGPewuGtgK7PnTKzLu+KuFv/n
pJO7fNzpH4wxxr5IJ3fHuEPWz0v2073ZuRJzpo46hmE/eL6OVss9Ee3FjvLN
aA32FDYey9HmO7Bd2KsxxtgRvim9Hf3ABmL7+KtoKTYFG4x9zV8d8wibig3F
DvNN6C3scawd9iR/UH87YI2w9thT2KE4S7DG2CDsq2g//Qt7GOuAPcsflbs9
7mHYddh47AOsNnYRNgFL68ed+CfY8kxy1o5LJ2d0nNVF85O1dSj7beMb18cm
YrnKdop1o+yKuBtgReN/Mmw39ho2CctgXbHPsVWZ5AxdnT3v4tyr4H1PxBjI
3Uil7B/P+kYF2E6/X0pPKztO2Ubx/wG/SduqYxdgjbEx6eT/rfi/a5mys7Cu
3pVjsRWzh27DGmBDY2+WqyxXTtmG2LDY/7GLsfJYN2xFdr+PO2GXWM/YCb4d
bcEWY/WwPjHuyv4l1qo6xmF/YB1jrLGlcmPj/OE7pJP/2ZdgY7CT/M30PvZi
JplHMZ8Ka3dvmh19pd9l2tNWv70Qaxz7hW9FG7FFmWQNHufbUpv4Vsb0T1Fn
CVE=
            "]], 
           Polygon3DBox[{{2875, 1131, 940, 939, 1299, 2323}, {2333, 1307, 
            1104, 1105, 1308, 2334}}]},
          Annotation[#, "Charting`Private`Tag$16680#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
m6m/lRdaFZyDmlVt/rwSfDu6R6k/S/ZEvDeYu77N/48knvmp+EUwd30H/d/J
jsmeif/rWy7l/92DffRbFY9Pn9Rv8v3yRX8Wnnc90nzrneatxmnXirnmLsjn
qbea+gu5b6OKOabWS+s07nXTN92QvusV6v+EnJ07ntFz1Z/iJOIrk9LYaw4o
93evYhfw++p78FL1Se629E5rR75pv9TnMY21xlxxmuaBbLh8rXyu8qJvUpSY
XY7uRfAf6BeD3wD/A/4F/Bp4HXgZ+HXw3+Cfwf2574TMvvxp9CuQ89A/k9bX
/NzxZYO0Ll5Avwa5KPe8kJ/Q2FdS3q9N4jbbp/X4EvX/pP4S6r+V1t0K8FPg
5ejnanzRbZN5HiuGELcXx/+ncC5SHGODlG9U3lEcpH9q85P89wtyTm67Kfsp
vnUn+u/BX6B7Avwz+PsUp2hdaFzvQT9P44L+bvBc8BTwXeA56tvcMatys48q
VxM8jlq/Z6V5UCfZJNkm+Y8bg7+jVsX+TbajXRrPvVIfKhZVHlPjp7yD7Jd8
7jYV8yetX/lD+UX57sGZfbH6epvEncSh1k91sjTX+qb5dknwet+w4jhfNlH+
vU+aw5rL4u7y45NS7N4iMz8+KtkczfPN1N+Z/a5sQv9kczbRWsl8f55yBfKb
iuHVL+IVtVNsK/4oPyx/LD+keEk+WXyqTTBn+wv5V+Fcs9bpRsiWmbmacgHy
d/Jf4g6y1YoL1qb6um9I6l/1reIUxfh1eU8r/jsBXU9xTM0l+R+txdI5R+V2
Pi6dc1Tu5YPSOVblySeVznMp/lVOdwD39uLe70rH6srNflE6JlcOZ3/kGdQ5
gTqfls75Kt81uXRuTrmavcSZqNOXOm3BJ4GPyR1z7wFuAP689L6F8jzik+9p
HpfOQYjTitvOLp0jUC73s9J5ZOXQfqk4HlTed0XF9lB28avS8ZjyUTNL5w6U
f66N7ECdNrx3U/CB4N3Am4APALcGNwMfA+4C3gx8kJ4pDlw6n66cuXJmB6Pf
A33daLuzVPpoW/Oj5jNyBHWGUGdK6bhUOZNvSseuyq0pX6MYfJJ8VOm4XfnA
WaXzJsqNTy8d32ofQbkYxTWKb6aVjoeVi5taOr5Vju7r0nGv8mnKkZ9JGwbQ
hg00/8Db5M6vKc/WCvxj6fhfPmjD4HF/A7m4dAyvPGcl5SqVS1hUOi+gHHgZ
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

            "]], Polygon3DBox[CompressedData["
1:eJw1mmWgHMXWRS93oCbpzg0SHho0ECAECyFAgrtLILgGd3f3x8PdXR/u7hDc
9UGEkAQJwd351mL396PvrTXV0zPTXXXO2btqjuF7Dd2zs6OjYwR/Juf/ClVH
x0W0N213dHzfo6NjWfh8eCP4G3g++Gh4WXgsPAQ+G14f/gJeDr4A3hj+Fl4A
Ph5eCR4Pzw8fCy8Pj4Ofqzs6ToQPLrl+H3iJVkfHX/Qf39XR8Qr/L6V/EV6b
QHsa3r8LPB/ttzl/PP+PpG9dju9oT03/zvTPS/st+ueG+9E3Gv4Q7gcfQ/9y
8EfwjPDe8ELwe/Ai8L/h1eBP4aXgc+AN4C/hb/i/Gtf7kdfuoT07/QfRXpz2
KPpngw+EB8Ej4WXg8+Bh8Nfw6vDV8HD4B3gAfDK8OvwZPCt8ALwY/AG8NHwu
vCH8FTwHfDC8BDwanhM+BF4SHgPPDO/r/YLfh2eC94EXhv8HLwyfBK8KfwL/
xP9h/J4B/ibaM9C/F/0L0n6X/hF1nt+BJZ8/mP6z4PXonwQvCZ8Jrwt/Di9U
5XmuAn8MLwifAK8MT4Bf4v9p3m8+bxztFzlO9fPgj2gvwflnwOvQnsj508EO
0AXgd+Cb+T6bwGuUPN+j6P8Ivor+wnjZk9ePgLtxvaV5bSF4PtpTcDwFd3H+
MPrnor0U5//UnWcE94QXhh/k/C04d3qOf/Paj/QvTX+X16J/DDw3/CPn9YZH
wn3g7+GZ4B/gpeAenL8gvBevHwl353rL8Nrh8ClwBa8J9+D7bAj3oT2E82t4
A3hOeDB8ZMn96sH5a/PaH1x/JbgX7QH0/w6vCE8DLwIfUXI/a85fyzFPf1/4
J16fhf5eXH9zeH76loVn4H725NzNnUdwBzwNvBt8dFfm22ac3w9eBv4bnpL+
LeCj4GnhLejvDy8Hj+Xz5oF/5vNmhT+C54V/gWeD9+D/4XCbayzlnKB/cbjQ
7kf/l/BixiJ4Xvh7eIi/B14Avpzvtwg8Ldd5luc/gf754T/gOen/Dh7s/eX8
/vBEeHkDXDvnT1Zl/MwAvwx3wpvCM8KvwF9w/kC4Bc/D+7+CB8FTwPPBf8Ir
+/nwovB4eEn4Nz5/BO+/iOv9BT9K/3T0j6Z/LvgH+meGz6X/V/h+Yxl8Hvwb
/ADcC74Unox78wQ8I3wx/Df9j8HTw+fAv8D3GevgEzje49qfOga5NxfS/yft
R+j/F30XwH/AD8PTwpfAHVz/ced68/370f8715gD/gteBf4X/QOb7zcJfhA+
GJ4CXhueBV4SbnVjjLcSg43Fx9D/Nv3X0t7P5wmPhl/h+nvDbc4/gHOP5viU
c+bmO+/Yym/wt3Sn/2D4GI6J9D/H69u08tr58H/hjWjv62vwxfD6rXyHXRyz
fN5bfN41tPfleu/SvwN9h3Fcx2un0z+e/rtpH0T/ifBI+CZ4f/hn/m/aymf4
WX+aF+jfHv6b9kO89oLjBz65nf7tWvmOftc56/DfTf56o51YsjHHTfTvwec9
xvtP4/Vdm897EN6M/l9pn0T/KPhm2gcYT/h/U2ditLH6NZ8j7aEcl3C93+Ct
nL8cD8AdvH9jzp+e11/qkdfs856fZE7muMT4DX9P+9U61/uE9nF83v5VaoHz
4D2b5zGI/kM5qm55fgNpH8TRrVue/8K09+GYnPbuvP9R3n8q79+F9x8KvwJf
2s7znxxeC+5trIcPgV+GL4H3cjzBa8Izw4t3ZX6uAc8ED2rux4atPHOf/X70
P0P/uby+B/0f89qu9C3bSn5+kqNFe16OUeZUjr605+EYaQ7k/Llp9+G41xzZ
zKVZ4Rua+2VtsRbHKfQ9z7Et7Zk4LqDvBfh/fl/4QuOZcbuVGsFaoe6WeuYI
jh7dMs4d77NwXO8Y5fs/zfvPob278wPe2s/32fD8PmY+9of/5H196J8ELwp3
+jvgKTl/R7gv/EZTD+wKD4ZXov8Gnu961lu8/zX6p6J/J3ge+t+Eb6R/fXgF
+l/vkfH6kPUH3+8z2vtw/hvwWbT/on8v+DX4DHMRvDf8OnymcwFeCT4d3hJe
oytz3LnunPql+b1v0n827b85/3o+f13rsZLf24f+3eAh9K/M+7eBb4OPgLeF
r+P81e0viddXwctZ7zgv4ZvqjP/VS36f9eZ+/j7ev0pX5svz8NZ8nz+8Jv23
w0fSHk7/yk39sRW8JrxKU99sDa8Fr9rUP9vAa8O31Mkfa5bUo1fWyQd9HSvw
Dpz/FHws5/8Gbw8/CR8D/wqfCn8D3wH37Ep8+g6+C57K+Om85LvuzDEZ4+c4
+pek/QWvd6P/NPhbzr8TnhI+GP4AvgjuhA+Hx8CXOw+sD+AP4Svgya0v4LHw
lfAUXYmf4+Cr4TZ8ILw4n/c53AFvDN9F/77wT3z/U+Cv4dvhLvr/A38F32Zt
A7/G/fgX738d/rmpdw+1foNXc75aR7Qyp60/t6P/CfqPpv0L558AT4RvhLt3
Jf7dDC/axKxn69SXB5XU18ZQY+nAZrwZ3z+n/7+0q67MT2OD99R7ezL9X9J/
q3OV/o3gO+F94B+53tV16ocBXP9FeGv6b4UPp38bzv+le+bXlO2Mv9+6Zz5N
1c75azd6aCd4A85fq9FTO8JD4XXgC+GdjWtd0Qfqje2MO/CajX7YAV4f3hS+
Dj4A3gLeBL4W3h/evHk+18D7eR/gNRr9sD28HnxfHf20eYleWJ/+y+Dd6R9G
f294e+8vvAL8Cb9nAfgvzp/LfED/NvBs7cSTCt4Wnr2d+PEp5y8I/21cbeox
52v3dubDt/BqcDdzO7wb738EPgXemfM3gK+A94Q3hofCl8N7wBvBG8JXwnvB
m3RF72zn84GXh6+tc/3BJfXd/XX03bYlevXuOvFykxJ9thnvvx4+kPdvyfsf
rqO/dirRK4/X0Ve7leizR+rou51L9M2DdfTWdiV69tE6enCXEn11W514vl6J
ntqKz7sFPozP25rP2xy+wfFrHodv5fyt4HVL9M5jdfTeriV69N46+nazEv33
dB09vV+J/n6yjj7fp0SPGX/uho/j+ttz/TvpHw5vUKIP76jz/IaW6MN76uSH
TUv07FN19PK+JXrv9jrPf/0Svbwj178HPp7r78D1d4bvg0+Ed4J3gu+FT4B3
hJ/g/UfBe5fouwfq6NPhJXpcvT+1Wofj1JIaZsmSZ2ptM32dXHyxOdHYBJ9s
7uVYos4zvKHkM322zpHrS76jc8d7fGPJd/TeO2euK7lHziXH1JUlOcGxZsw/
s2RMmguM+WeVjEFzgXP03BJN79x1Dl1W8oydW47Zy0tihmPZOXltSQx1rjrG
ryjJcY59c84ZJWPeXGSMfrIkxxq71TBqnwGd0TaTcb+mK6kJrA2M4U+V5Gxj
+zR1tLUa7y94xSr6s6uV+/dbFS3qa4tVydmnl8QEc7kx47ySmGIs6VVHu6sB
1YLmVMeeY9Bca0w/rMTTMNYbs84viVHGMmPeBSUxzFg4bR1vR82p9lQzL11S
A6ql1XxLldSAakE1nbnfmGJsUbMvW6JJ1PJq9GVKaky1+xztjG3HuLHKmLZ9
SU1grNMDGFYS8/QG1KCLl2ggtaka3LninFGbG2Oc6855Y481lrHBGGHtpWa+
tCRH+Xumbqe2MieYG9TsK5VofLX8T1W0sJq4b5UccWFJTDJ3mBMuKokR5gpj
xi3ww52JJWq0VUo8DbWbmnTlEk9BrWrNbG1ijWItbc29dokHYC2uZ7AiPLQz
XoKabp0STa/WswbbvSRnW5tZk69V4glYq+tZbFgSg/Uy+tXRZuqnmet4BKeV
eHiOl4X0k+ib0zFkbcCxP+1CbTMFx2x1arMtOWatow9np72TNTvtbnVqbWsS
a5O5zP+tXHNh2u9zvyfwed/zeVPDv1fxQvpbE9D+o4qXsgDHINq/VPGK9Aj1
Co/tigb4zPHH+xflOKsVjTUF7R51andr+jlolzpaYFDzfa3prmnmt7WeNd+1
TXwxFv/ejq5V3y5Qp4Y6t5lfxgPH64rN+HC8mVNXaJ6P49ecu3wznszFfp/h
rWiS2f38Kl7T/N6vKn6q2nV4832nqqN1hnCcRX/POlrHmtLachB8bisatqY9
X53a03vsva44etO+nGNwnZrH2tsayVrIGt5a3ppILeP98Vnqqc1SpwawNh7c
zF81qFpUDfmPf8uxaImn5Xi0xh/SzH/H7xFd8dTMId+am7qiwd73evBm7eg0
c4S5whpgcBMv9H70uMwr5he9r13b0dHq6Zng+Tn2a2VMOjZ719HuvtbZ/P5z
WrlH3qvJOWakfan3kPZAjnc7c85ideaAc+EC63djHcdz9J8JD6gzHz7ujEfh
+P3Hz2lnzDv2nU+9WqmR+9c5bFs3O1/6wp90RlM6P2Tnyi4cZ/J7T+R6Hd1y
jmwN/1Y7HobzR89uyxLNpZenx2dtaI2o96dnNKakRtZLmh3uAy8Bj+seDXhn
Sc2uNrRmPqfJh9bSv8NvthOvdq3iaW9cUoPpdVsDzlWimawN9dgPKPGc9d71
yI8vqYnNr3r4evnGzJ+raN7VSjSfWliNoda4pYmPaoirS2r67Zrfr5Zxzrbr
eERvl2getY+e1TslHpFelp7X5yUenV6YHtHIEk2httCjGVXikendOB58tsYM
Y4ee4aASz1AvcTI/T21gzVdlTWTHkprTtRI12hMlGlvtpsZT6xlzuupolNdK
NJ3a5bsSj0MPWi96N/ofV0vDe9K/D/xqiQd3GLy0GgfeAe4JHwY/207M+LWp
B8xF+rTP8fpial7aGxm/9VrhJeBV4W/gTeGr4DvgYbx3Hfhs+Cp4tSqe6Jwl
HqNe4+H0P99OTDY2rw4fV7KG5FrSivAO8P7wLPCq8P7wcXD/Kp6d8V2NfHoT
v10f2JrXRnDdQ+ifRPt3Xjv//+N5OzHP2HcgPNpamf5/qx3gO+DHrUGrxJN3
24mJPZt44rqENdQ0TbxwHcqaxdpFj0+vzxjbp8k/ekx6uHq5h9L/dDvrD/9t
4tcL7eSgP5p8oA9hzjP36cGpa9W309Xx6Lco8XT07q2h7yvxvKyt/+PcKhlP
zi/vr2sgrjl8U0ez9S9Zk1DL6SH1K/HU9ZZ8/tuUaKSv63jo8zbxWW/d7+x3
L+rzKp74wCY+f9HUnwOa+G89quZbsGTNRC2oR2U8X6GpT/X0FytZw9Dr13Pu
28x/x8cojslb8ex+4PMus0ZrxbMzn7vG83SJh+Tajxr81hINqTb3nnnv9Bxa
ddZoZirx9F27cU1i1hJP37UK1yRmL1mDcK3CNZLeJWsQrp3owY9vxpvPU898
XInnopfums90TT3u/NPjn6Gpx/X+nZ/W665Z+Hv08D8q8Xz09l0jGFviobh2
oGfyeolHo5eiZ6p3riesl6on+2yJx65Xq2f4THM/9Nb0UF8u8bT1Vi/m+bxU
4gnpDek5P1biyepF69E+WuLB6t2q4e4t8STVdnqqI0o8db1WNeQ9JZ6W9Yya
/RH4pc5oeT2020s8br01NeD9JZ6y2lAP77YSj1hvb6om/o5v5rPx7p12PFXr
ET2fF5vvrxekh/NS8/uMv+3m97/VxG89qDdKPC29KddAPizxpFwb0WN7s2TN
UO9Nz+ytJv6f1szXhUvWBL+qs8byfokH5dpLryb+T2rygWs4HzT5wLUd47s+
sDVq9zoe0IBm/Fv/m487u6Wmmpf+p6poETWF2uLpKrFPjaJWubdKLa9mUDsY
s43Fc7cTy5+tEhvVYGqxx6rEdjWN2ubRKtrGGt1a/UnHTGdyvrn/8SqxxZxv
7n+kSi2v5lH73G1M74zGUmv1b77fiu3E5vub76MGUYuMMKd0RjOoHdTkavNe
Tf2jXrcWesDvUCWnmEuma3LNF1XGumPYsWyNaa15dlNPWWNZa53R1E93VtF6
aka14yzN7x/YTi55okptYww1lj5TRcuo2dRu71XR+mpwtfg7VbS6Gl4t/2qV
2twaXa3/SpXcpgegF/ByFS9Aj0CvYFydsecYc6zp/7v2dCzHJHNJnbntGHWs
WpNZqzkmHBvj64xNx6Rjc0Kdsekcca6Yc6292u3k4uWr+IebwN9Z61SJZcY4
Y93YOrWCMcXYYg1gbXBZO7WBHpZelp6Va/eTON7pTIwx1lxT5fOMkcbK58w5
ndH4an1zvLl723Zy/4tVvAs9BL2El6p4J3oaehuvVfEC9BT0Fu6ponXUPGrR
+6poWTWsWvb1Kl6BHoJewhtVtLEegl7CkGb8D22nlnizilZWQ6ulrVHng38t
qV3fov/GzmhqtbWemt6a+t29H59Xia3GPGOfesC9EdM29f/7dWozPRm9mQ/q
eDN6Lnovb9ephe8qWQ95p47ff3fJ+sl7dXK1OVt//s06WlGNqFY0h9vv2qK1
84QqsdOcb+7/GH62MzHV2PowvGVnNLva/Y06ta4aVC36bp1Ybcx2vcWaU61k
jDJWWSNbmx/a+PO3VvE+rFmtXW+rMj/1RPRGbq+ixdRkejG3VKltzenm9lF1
cpEx2dg8so4XZc42d79SRxs4n9S+z9fZj3JIyX6hd6t4YXpmemcv1NmPc2jJ
+L6pSu1hTWFt8WIdr8nx6H6l8VVqI3OYuWxclVzm7zd3fVIl15mzzF0PVPEy
9Ej0Su6q4iXpIekljaziJeoh6iWOhu/vjIeol/hRldrRnGfue7CKt6JHolcy
tkouNOeZ+8ZUqVX0cPRy7qjidelx6XV9WCU3WtNY2zhGHm7yq/n7oSrejB6O
Xs7EKrnP+20tcG2V2s2aytrqxiq5zJrM2uyzZv5bA1gL7Nl8/9Pb0Q6fVqkN
rAmsDayJre2PaqdWHlXFO9Vj1Wv9oIq3qof6j5dapba0hrSWHNbEy73b0Qr/
a66nx6rX+n4Vb8Txrzd6fZVa1RrVWvWGKrWkNay1rB68sdsYrr94c5Va0prU
2nRiHa1qzjf361nrXetPundJj9xcacwwdrgm4NqAHrR729SXz7SjKfSD3GPk
XiP9M/eWuQfKvVCuObk3S41graIHoXZwzjv3nfOujbom5dqUe6LcC6YWdu+A
a6w3NzHh7qaecq318zq1ijWhteHL7Xit7gE6shnjjnVjsHv1PmzH23LPj/uJ
1DiuX+thqX3cU+feOueYe/nUznpd7pFy/82Ydrwi9YL7pV6o4v3q2enduabp
3HCO6Ad8U6X2sQZSC7vG6lqre2pcW3bNwLUD1yjcG/dVldrO/KXW/hqe0BmN
rdZWg6lNb2lHm7km49qMaxDupVPDqdUearSdaxbWJtYo+q/qH+eSc8r68/sq
2k/NrnZXD3ivD2lHW7nmZa1jzaNf65qH/rD+rnvlvm0+T02vtld76415T12v
1zvQe/SZu/7vGoxrMfol7s1zzdy1c/0V94+55uPaj2sm7q1zTce1HdeE3Ns2
th0v0ufrfi3XVFxb0a92b+KndWpL77e153dVvE01sFrYmGnsNEa693J0nfhu
zWzt7BqUa1GuIbn3b0ydWtoa2lpaDeqz11NTm7rm5dqXa1zu3VOjO1bUlGpL
PQL3B6oZ1Y56jI4fx9GIpgYxVhuTrU30dfXS3OPifh33jLh3xDV496PowenF
uSfF9YkF69RKvRv/UY9Ur3TGxn9Vzxi7jeHqG/dUuLdCf8v9Pe5Rca+Ke3bc
L2RdZX3lngzXz92j4l4V99S4X8g1J9ee9PPdG6reXbYzGkAtcEUV7aimU9td
VUU7qhHViuZUc4s5Rv3lmpZrW67BuZfRNTjX4lxDc6/k21W8KdcIXCu4sorW
VKOqVb+oow3VmGrNL+toTTWoWnRSHa2ohlRLup+yZzP/3ft3eRXtqSZVm7q/
0rUe13fce/h8FS9eD1Qv1DVLtYcaxPWbT+poHTWN2kbP3PhinNEPerWdtZpL
mxjxcR2vXI2kVtJ7U3vf3PzG/wMw/LKO
            "]], Polygon3DBox[CompressedData["
1:eJwt13nYVeMaB+B9RFtffTinUERRhtLk0ISmo5kmKkWzUo6oaEBIaTI2Uh2n
kQbRhIrmQSmlpIHSXDRPinROxf1c6/vjd137ufez9tprrXe/77tvatPpoWcu
SaVSS+UyWZMzlWqdTqVey55K9ZUzuVKp4xmp1AdshXqT5t7q3+Vpr1uwr7x3
Vv2VYx/yuivrJsccu5G9w2aqZ8l5dkLvh2ylerPP6KNeJY+xvVIyWyqV23GX
y2rvz4vz8hzqw7LQ6+PsgvdGOm4TG8yWsvWsEzstX7Lt7Ch7T/2TvvHse7ab
vcJ+ZGPYerZOumSmUnvYDLZbfVzfG/q2swlsI9vDerHvWR/2GVvK2rK9bCbb
w06wN9l37NV0cv1xHx53jh1sCtuqPqivr74NrDf7lC1hj7P97FO2j51ib7N9
bFbcK3aSvcWOsEXsBLvIRrGDbD47yo7IC857iC1gx+JZ6Buh7wD7gh1i59hw
tpZ1ZkPZMPnNc9vGxrEN6l36Xtb3C5vLDrI/2DD2M5vDDrCzbCjbyT5i29gh
1o/tZtPZrhgr7HW2i01jO9kO6e47H2NL2Cl1yth4X99qacbWyjuOrar+VT5T
b9a3nw1SD5F7HXOc/yCnfdbtrJf3K8YYjHvGtshQr5c7doP3uugpm5F8dh2+
Os6fM3mWvbwer29CXLP78im7mzVWPyLb2GY2hC1Tf+czOmeNtdFscTxfyZaZ
/D4GpZM6/Ck2j93P2qmfkH25kvER42Qy3yK/6jmYw2+FLYvvHb+JnMn9+ySd
jOUY0zl93g9sFPtGvVV/j4zkmcSzmc1/lDN6NrGn4lgZ7b0G6qN8sfqkY/9k
/2Fb2Vj2HdvJXmJTWEHWgLViOdgp+Zh9G8+SDVQvlWKsLmvOrlaviGfEmrOO
rLB6idzB6rBmLI96puRkRdl97IzrX8yKsgfZYyy3eoHczKqyhiyXeqEUYtVY
I5apXiSFWXXWmF2h/kaas15sEKumXi53sUasHbtBvUz+yRqytix/zH9yD2sW
z5EVUhdxX9oZf1ti7F5u7MXvmWfqK8Eq6vvddaxhLdirbDCrHmNZrmClWCV2
Vt8MlsFuZ/ey02wOy8PKsOrsIvuCXcfuYw+wbOq5cjUry2qwP/V9zLKx61hp
dox9wi5l+VkZdpzNZzewSqwuy66eJ/lZRVaHXRZzrlzPKrAH2aXq9a75RfYx
mxffJX7j/DJ2IyvLTjjHdJadFWTl2En2OfsHu5tVZefZbJablWbV2AU2i+Vi
xVgF9htby1qy3mwIqxFznbzFprNF7Gl1wVjzPKNVsR55L1O9gT/h9UA2IuaA
mO+lPXudjWR1Y26XdmwAe489GNcrbVl/9i57QL1OHmf92HBWW70l1lA2iI1l
D6s3S8eY09gY9pB6o3Rgb7BRrJ76sAxnc9gK1jXWAHmXzWUrWbf4/cr7bCH7
lr2oPiTD2OxYu9lzMTdJJzaEjWeN1D/IM2wwG8caqvfIK2xcrGWsTczt0jPm
DDaNtYx5XF5iY9h01irWBenPprC57MkYU+51M/f+S7bRe2n1t7yV133YUH01
Y52RN9k0tpB1jPlQ3mYzYu5kz8T6K6+xiexz9oR6qlzC8rK72VFjYx/ryyax
2ay9+ifpxkawSezRWKPkZTaWzWCt1TukBxvFprBm6u3SnY1kk9ljMU/Kc+xd
9iFrot4mXdl7bCJrqt4v/dhkNod1UI+VM+pr5Ra203cuw4q7V7v1roo52b1a
yf7ldVt9XfUVU4/jOdg9rCY75dgJ7CpWhdVnf7Cxscdi5eP3JndYKyazAqy+
uqW+tM8bz65klVk9ds6xk9iNrB5rwS7X9yHLy2rFOhibSvYBu5bVjDkn5pjM
ZI/ZJp3sK2J/UTcz2avMSydrfqz9eTKT75dmhdSF5Wvr4BesMuuiftU5ijjH
RJaP1WZN2N/YDFaStWKdWF42i93J2rAu7LqMZO0unU7W2Vhv73fez1gZ1l7d
Td+N+j5hRdijrAP7OxvN/pf13eI7FnTsGJbSd6e6sr7D7tVH7JZ0cv1xHza4
jpMxLmP/ot6ub0CslbE3YU1Ze3ZVRrIP65JO9hqx52jqHFPZbaxJ7A/0Xalv
GiueTvbjsS+/ln3OyrIOsY9iBdgcVp79mz3PbmKzWTn2JOvBCsZay0qx1qwz
y8emsxKsJYs/DddkJNd2azrZ98T+p4LvdzO7yI7Eb9h4LRG/aXlW/YGeWY5t
HOsvq8leYANYqRhD8v8Y8zEe2X73byI7r75NirGfYzyzs+ob5Ha2h33t8xpn
zcUx71aM8Sd/qAtIEbY3xi67ELUUZ7/Esay2Yzuynuwu9RT5M3qyJ/us2G+t
c44X9E2NMe7a8sf/B32n1VfHWNC3Q9849ps6n9zKdrHx7Hf19XEtbDebzC7G
tUoJdoCt8JkNs9aKYey+jOS/1cPp5D9Z/DerlZmMv3Ne3yQ3xzpgXC1nDbLm
zljz7ok1mVVhz7LerCibz6qx7qwvK84WsOqsB+vHSrCFrAZ7nvVnJdliVou9
yAayOzOSPWvVdPK/L/7/1chMfvvXpJO5JeaYNb7fElY3a38Ve+vYYy9j9bPW
6dj7lGcrWaOsNTTWywpsFXska02OtbZS7GlYJdY5e7Knj739atYka52Otbsy
+4Y1zVpDY+2uwpayell7rtjrlWPH5L9sEVvHeqr/AnhDIVY=
            "]]},
          Annotation[#, "Charting`Private`Tag$16680#2"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[
           0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
          "Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[
           0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0ssrZ2EYB/DX/X7Z2bmFYmIvZiuFzc8td8PM1FigWY2SmoV+M8VKKDvp
R5QQko0Nf4E74zb/gWxmO59T6jzn831Onfd5z9spG5mIjSeFEGZVhxDlmNsb
8zJDKGQRS1jOOtbyIxvYymb2sZtj/MopfucvznCZv7nORR5yjWdsyQqhyswu
daFvZ6XqSQ3hUv9J7pWv5D5es583HOAtB3nHIQ6r++g9/uEIHzjKR37mE7/w
OdovXzieFkK1WWfqr36OberEPs/1uzzlKg+4wATjXOI045zkj2gOv7GTvWxi
C+vZyA+sZSmLWeEc/nHezAL+ZI06TgkhX3/EPB4yl/vM4R6zuUNLhG1aMmxx
U2XIG0xngmnR2TM1+ha6woqHo2Yly8Xy6/v/8B/d3T5s
        "]]}, 
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0rlKXGEYBuDPhXErrCSIiMw4Ok5cJhLtAglJIKigYq0WdklcKiutLARj
QLBTsDdXYK4guYKkiaUm7guJ+/ocUrw873f285+THpsamiyKiEXpLYnIFEe8
YalsVkR0mvf4ilccYHllxCifcILNnGU3F5Pzucp51xjUv+gL+oj+Vf+sf2dn
VcSS/lPv0pf1bb1az+gf5Z/5LdPyIdmfijizbVLPyricm5v4274L/Q8vucMr
7vI6eQ/ecJ8Hcqsf8o5HvOcxH3jCcM1TFvFXWUSOE1IsPfJC1rzTX8cvcYtz
/MFpfuN7bnCY6xzgCl/zE59zhlmOs4YjTLGfF9b8Jc/MKffrk2fmd8xLwfMV
zO3sYCvbmWcbc2xN1odPmWFa8noDW1jPHOvYzFo2Jd+X2eSZ2MhNa9BS8v8/
eQRIR0O9
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{2061, 2406, 2407, 2397, 2474, 3244, 2239, 2335, 2321, 2398, 
        2970, 3245, 2240, 2336, 2322, 2409, 3246, 2241, 2062, 3061, 2242, 
        2063, 3062, 2243, 2064, 2955, 3063, 2244, 2337, 3227, 2323, 2875, 
        3222, 2338, 2324, 2876, 3223, 2065, 3064, 2245, 2066, 3065, 2246, 
        2067, 3066, 2247, 2068, 3067, 2248, 2069, 3068, 2249, 2070, 3228, 
        2339, 2250, 2340}], 
       Line3DBox[{2071, 2325, 2877, 3224, 2408, 2326, 3069, 2251, 2410, 2327, 
        2418, 3248, 2252, 2383, 2956, 3070, 2441, 2253, 2384, 2957, 3071, 
        2254, 2385, 3237, 2341, 2255, 2072, 3072, 2878, 3141, 2073, 2879, 
        3142, 2074, 2880, 3143, 2075, 3073, 2256, 2076, 3074, 2257, 2077, 
        3075, 2258, 2078, 3076, 2259, 2079, 3077, 2260, 2080}], 
       Line3DBox[{2082, 2881, 3144, 2081, 2479, 2882, 3258, 2480, 2342, 2399, 
        1452, 2435, 2386, 2485, 2958, 3078, 2443, 2261, 2387, 3238, 2343, 
        2262, 2388, 3239, 2344, 2263, 2083, 3079, 2883, 3145, 2084, 2884, 
        3146, 2085, 2885, 3147, 2086, 2886, 3148, 2087, 3080, 2264, 2088, 
        3081, 2265, 2089, 3082, 2266, 2090, 3083, 2267, 2091}], 
       Line3DBox[{2093, 2887, 3149, 2092, 2481, 2482, 3259, 2094, 2483, 2345, 
        2400, 2346, 3253, 2507, 2442, 2446, 2445, 2508, 3266, 2347, 2444, 
        2348, 2095, 3229, 2349, 2350, 2096, 3084, 2268, 2097, 3085, 2888, 
        3150, 2098, 2889, 3151, 2099, 2890, 3152, 2100, 2891, 3153, 2101, 
        2892, 3154, 2102, 3086, 2269, 2103, 3087, 2270, 2104, 3088, 2271, 
        2105}], Line3DBox[{2107, 2893, 3155, 2106, 2894, 3156, 2108, 2351, 
        2401, 3157, 2959, 2447, 2448, 2420, 2960, 3249, 2419, 2352, 2449, 
        2452, 2451, 3230, 2353, 2450, 2354, 2109, 3089, 2272, 2110, 3090, 
        2895, 3158, 2111, 2896, 3159, 2112, 2897, 3160, 2113, 2898, 3161, 
        2114, 2899, 3162, 2115, 2900, 3163, 2116, 3091, 2273, 2117, 3092, 
        2274, 2118}], 
       Line3DBox[{2120, 2901, 3164, 2119, 2514, 3165, 2972, 2121, 2515, 2516, 
        2453, 3166, 2455, 2454, 2122, 2421, 2422, 3250, 2402, 2424, 2475, 
        2423, 2123, 2457, 2458, 3254, 2456, 2355, 2124, 3093, 2275, 2125, 
        3094, 2902, 3167, 2126, 2903, 3168, 2127, 2904, 3169, 2128, 2905, 
        3170, 2129, 2906, 3171, 2130, 2907, 3172, 2131, 2908, 3173, 2132, 
        3095, 2276, 2133}], 
       Line3DBox[{106, 1020, 107, 1021, 108, 424, 1022, 109, 1431, 350, 460, 
        110, 1477, 427, 111, 1023, 112, 1024, 1025, 113, 1026, 114, 1027, 115,
         1028, 116, 1029, 117, 1030, 118, 1031, 119, 1032, 120}], 
       Line3DBox[{2135, 2909, 3174, 2134, 2356, 3175, 2961, 2136, 2511, 2512, 
        2459, 3176, 2461, 2460, 2137, 2425, 2426, 3251, 2403, 2428, 2476, 
        2427, 2138, 2463, 3255, 2969, 2462, 2357, 2139, 2910, 3177, 2140, 
        3096, 2911, 3178, 2141, 2912, 3179, 2142, 2913, 3180, 2143, 2914, 
        3181, 2144, 2915, 3182, 2145, 2916, 3183, 2146, 2917, 3184, 2147, 
        2918, 3185, 2148}], 
       Line3DBox[{2150, 3097, 2277, 2149, 2358, 3098, 2278, 2389, 2359, 2464, 
        3261, 2486, 2279, 2487, 2429, 2430, 3099, 2404, 2436, 2477, 2280, 
        2489, 2488, 3262, 2971, 2465, 2281, 2151, 3100, 2282, 2152, 3101, 
        2919, 3186, 2153, 3102, 2283, 2154, 3103, 2284, 2155, 3104, 2285, 
        2156, 3105, 2286, 2157, 3106, 2287, 2158, 3107, 2288, 2159, 3108, 
        2289, 2160}], 
       Line3DBox[{2162, 2920, 3187, 2161, 2360, 3109, 2290, 2390, 2361, 2466, 
        3263, 2490, 2291, 2491, 2431, 2432, 3110, 2405, 2437, 2478, 2292, 
        2494, 2492, 2493, 3111, 2467, 2293, 2163, 3268, 2521, 2522, 2294, 
        2164, 3112, 2921, 3188, 2165, 2922, 3189, 2166, 3113, 2295, 2167, 
        3114, 2296, 2168, 3115, 2297, 2169, 3116, 2298, 2170, 3117, 2299, 
        2171, 3118, 2300, 2172}], 
       Line3DBox[{2174, 2923, 3190, 2173, 2362, 2924, 3231, 2391, 2363, 2433, 
        3252, 2438, 2503, 2439, 2392, 2495, 2962, 3119, 2468, 2496, 2497, 
        2393, 2499, 2509, 3264, 2364, 2498, 2519, 2520, 2518, 3267, 2517, 
        2301, 2175, 3120, 2925, 3191, 2176, 2926, 3192, 2177, 2927, 3193, 
        2178, 3121, 2302, 2179, 3122, 2303, 2180, 3123, 2304, 2181, 3124, 
        2305, 2182, 3125, 2306, 2183}], 
       Line3DBox[{2185, 2928, 3194, 2184, 2365, 2929, 3232, 2394, 2366, 2434, 
        2968, 3260, 2484, 2440, 2395, 2500, 1372, 2469, 2307, 2396, 3240, 
        2367, 2308, 2186, 3126, 2309, 2187, 3127, 2930, 3195, 2188, 2931, 
        3196, 2189, 2932, 3197, 2190, 2933, 3198, 2191, 3128, 2310, 2192, 
        3129, 2311, 2193, 3130, 2312, 2194, 3131, 2313, 2195}], 
       Line3DBox[{2197, 2368, 2369, 3241, 2196, 2370, 2371, 3242, 2198, 2505, 
        2372, 2506, 2373, 3257, 2504, 2472, 2473, 2471, 2510, 2963, 3256, 
        2470, 2374, 2199, 3233, 2375, 2376, 2200, 3132, 2314, 2201, 3133, 
        2934, 3199, 2202, 2935, 3200, 2203, 2936, 3201, 2204, 2937, 3202, 
        2205, 2938, 3203, 2206, 3134, 2315, 2207, 3135, 2316, 2208, 3136, 
        2317, 2209}], 
       Line3DBox[{2211, 2328, 2329, 3234, 2210, 2330, 2331, 3243, 2212, 2377, 
        2501, 3204, 2964, 2513, 2213, 2965, 3265, 2502, 2378, 2214, 2939, 
        3205, 2215, 3137, 2318, 2216, 3138, 2940, 3206, 2217, 2941, 3207, 
        2218, 2942, 3208, 2219, 2943, 3209, 2220, 2944, 3210, 2221, 2945, 
        3211, 2222, 3139, 2319, 2223, 3140, 2320, 2224}], 
       Line3DBox[{2238, 2382, 2381, 3236, 2237, 3221, 2954, 2236, 3220, 2953, 
        2235, 3219, 2952, 2234, 3218, 2951, 2233, 3217, 2950, 2232, 3216, 
        2949, 2231, 3225, 2334, 2333, 3226, 2230, 3215, 2948, 2229, 3214, 
        2947, 2228, 3213, 2946, 2227, 2966, 3212, 2380, 2226, 2417, 3247, 
        2967, 2411, 2332, 2225, 3235, 2415, 2416, 2412, 2414, 2413, 2379}], 
       Line3DBox[{2524, 2804, 1778, 2523, 3354, 2718, 2525, 3355, 2719, 2526, 
        3356, 2720, 2527, 3357, 2721, 2528, 3358, 2722, 2529, 3359, 2723, 
        2530, 3360, 2973, 3269, 2531, 3361, 2724, 2532, 3362, 2725, 2533, 
        3363, 2726, 2534, 3364, 2727, 2535, 3365, 2728, 2536, 3054, 3450, 
        2729, 2805}], 
       Line3DBox[{2538, 2974, 3270, 2537, 1793, 2539, 3366, 2730, 2540, 3367, 
        2731, 2541, 3368, 2732, 2542, 3369, 2733, 2543, 3370, 2734, 2544, 
        3371, 2975, 3271, 2545, 2976, 3272, 2546, 3372, 2735, 2547, 3373, 
        2736, 2548, 3374, 2737, 2549, 3375, 2738, 2550, 3376, 2739, 2551}], 
       Line3DBox[{2553, 2977, 3273, 2552, 2978, 3274, 2554, 1809, 2555, 3377, 
        2740, 2556, 3378, 2741, 2557, 3379, 2742, 2558, 3380, 2743, 2559, 
        3381, 2979, 3275, 2560, 2980, 3276, 2561, 2981, 3277, 2562, 3382, 
        2744, 2563, 3383, 2745, 2564, 3384, 2746, 2565, 3385, 2747, 2566}], 
       Line3DBox[{2568, 2982, 3278, 2567, 2983, 3279, 2569, 2984, 3280, 2570, 
        1825, 2571, 3386, 2748, 2572, 3387, 2749, 2573, 3388, 2750, 2574, 
        3389, 2985, 3281, 2575, 2986, 3282, 2576, 2987, 3283, 2577, 2988, 
        3284, 2578, 3390, 2751, 2579, 3391, 2752, 2580, 3392, 2753, 2581}], 
       Line3DBox[{2583, 2989, 3285, 2582, 2990, 3286, 2584, 2991, 3287, 2585, 
        2992, 3288, 2586, 2993, 3289, 2587, 3393, 2754, 2588, 3394, 2755, 
        2589, 3395, 2994, 3290, 2590, 2995, 3291, 2591, 2996, 3292, 2592, 
        2997, 3293, 2593, 2998, 3294, 2594, 3396, 2756, 2595, 3397, 2757, 
        2596}], Line3DBox[{2598, 2806, 2807, 3295, 2597, 2808, 1989, 2599, 
        2809, 3451, 3055, 2600, 2999, 3296, 2601, 3000, 3297, 2602, 3001, 
        3298, 2603, 3398, 2758, 2604, 3399, 3002, 3299, 2605, 3003, 3300, 
        2606, 3004, 3301, 2607, 3005, 3302, 2608, 3006, 3303, 2609, 3007, 
        3304, 2610, 3400, 2759, 2611}], 
       Line3DBox[{651, 1660, 652, 1661, 653, 1662, 654, 1663, 655, 1664, 656, 
        1665, 657, 1666, 658, 1667, 1668, 659, 1669, 660, 1670, 661, 1671, 
        662, 1672, 663, 1673, 664, 1674, 665}], 
       Line3DBox[{2613, 2810, 1991, 2612, 2811, 3452, 3056, 2614, 2812, 3453, 
        3057, 2615, 3008, 3305, 2616, 3009, 3306, 2617, 3010, 3307, 2618, 
        3011, 3308, 2619, 3401, 3012, 3309, 2620, 3013, 3310, 2621, 3014, 
        3311, 2622, 3015, 3312, 2623, 3016, 3313, 2624, 3017, 3314, 2625, 
        3018, 3315, 2626}], 
       Line3DBox[{2627, 2813, 2839, 1882, 2834, 2814, 2840, 3454, 2760, 2835, 
        2815, 3455, 2761, 2628, 3402, 2762, 2629, 3403, 2763, 2630, 3404, 
        2764, 2631, 3405, 2765, 2632, 3406, 3019, 3316, 2633, 3407, 2766, 
        2634, 3408, 2767, 2635, 3409, 2768, 2636, 3410, 2769, 2637, 3411, 
        2770, 2638, 3412, 2771, 2639}], 
       Line3DBox[{2640, 917, 2841, 879, 2052, 881, 880, 2842, 1898, 2836, 
        2816, 3456, 2772, 2641, 3413, 2773, 2642, 3414, 2774, 2643, 3415, 
        2775, 2644, 3416, 2776, 2645, 3417, 3020, 3317, 2646, 3021, 3318, 
        2647, 3418, 2777, 2648, 3419, 2778, 2649, 3420, 2779, 2650, 3421, 
        2780, 2651, 3422, 2781, 2652}], 
       Line3DBox[{2653, 2871, 2872, 2817, 2843, 2858, 2860, 2053, 2837, 2859, 
        2818, 2844, 3022, 3459, 2838, 2819, 3023, 3319, 2654, 3423, 2782, 
        2655, 3424, 2783, 2656, 3425, 2784, 2657, 3426, 2785, 2658, 3427, 
        3024, 3320, 2659, 3025, 3321, 2660, 3026, 3322, 2661, 3428, 2786, 
        2662, 3429, 2787, 2663, 3430, 2788, 2664, 3431, 2789, 2665}], 
       Line3DBox[{908, 922, 790, 896, 2023, 820, 791, 2024, 821, 792, 3323, 
        2666, 1930, 2667, 3432, 2790, 2668, 3433, 2791, 2669, 3434, 2792, 
        2670, 3435, 3027, 3324, 2671, 3028, 3325, 2672, 3029, 3326, 2673, 
        3030, 3327, 2674, 3436, 2793, 2675, 3437, 2794, 2676, 3438, 2795, 
        2677}], Line3DBox[{2690, 2799, 3443, 2689, 2798, 3442, 2688, 3335, 
        3036, 2687, 3334, 3035, 2686, 3333, 3034, 2685, 3332, 3033, 2684, 
        3331, 3032, 3441, 2683, 2797, 3440, 2682, 2796, 3439, 2681, 1946, 
        2680, 3330, 3031, 2679, 3329, 2825, 2824, 2678, 3328, 2823, 2845, 
        2822, 2846, 2847, 2043, 2861, 2821, 2867, 2820, 2873, 2866, 2865}], 
       Line3DBox[{2703, 2802, 3447, 2702, 3344, 3044, 2701, 3343, 3043, 2700, 
        3342, 3042, 2699, 3341, 3041, 2698, 3340, 3040, 2697, 3339, 3039, 
        3446, 2696, 2801, 3445, 2695, 2800, 3444, 2694, 3338, 3038, 2693, 
        3337, 3037, 2692, 3058, 3457, 2830, 2691, 3336, 2829, 2848, 2828, 
        2849, 2851, 3460, 2850, 2862, 2827, 2870, 2826, 2874, 2869, 2868}], 
       Line3DBox[{2717, 2833, 2009, 2716, 3353, 3053, 2715, 3352, 3052, 2714, 
        3351, 3051, 2713, 3350, 3050, 2712, 3349, 3049, 2711, 3348, 3048, 
        3449, 2710, 2803, 3448, 2709, 3347, 3047, 2708, 3346, 3046, 2707, 
        3345, 3045, 2706, 3060, 3458, 2832, 2705, 3059, 3461, 2853, 2855, 
        2854, 2704, 3462, 2856, 2857, 2852, 2864, 2863, 2831}]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzj0rhWEYB/AL5xxCZ2VVZzOxWEwmgwxiochZKOUZGHwAo/IZmL1zijik
lMGiDGwiIqIM5Hg5/J7h1/+5rv/93N1txWRguiYixliqi8hnIyYzEWvNEcvm
FnPCrN2GXdmuZG5nhhVWuWSXTkrORc4dvte5Yp8h+y45xw233LnvUI7quuVn
uuOeN91x+h5dxn09vis88EhVfyKzul75xRNl559lkzefypy+X37zwpH+Vbbq
z2S9flD+sMmOfksW9Ofyl2GuOdBtp2fo0F/IP8bZ01XlOx80ureBefsJ82La
+aePBbspcy0j5n9w3zwi
        "]], Line3DBox[CompressedData["
1:eJwV0Dsvg2EYgOGn+Wgi9Q9MBiZiqIGBhaVNhEgw6FSLLhgsjUQikYhBYqnD
SEsdFoek1MZoIPwCP0GC2MTV4cr95nnefMn7dReXp5dSETFHNYkotUX8ZCJq
zj3tESv08mfW0Dv6WKWfdGfEhzZ5IMuTWSodMeh8xRHHXJsPaZlhqlSocWM3
omuMcsIep9zajek649TZ54wcG+Tpcu9cD7hgkk2mWm+wu9RDnplhi1kG7D71
hVfm2abAF2+8c+9eURNvW9AO/dVvHu0WdZcSE/7jjlnS+o7zPzzzL8M=
        "]], Line3DBox[CompressedData["
1:eJwVz7FKQgEYBeC/1JZ6iSadFIIcarCllkrQpZYawpaGwiGCCILAJag3SGhI
fIJcyqJQivQpBCEQJAfX+ho+zvkP93K5iwcn5eOZiNjmIRFxlIyYzkc09HQq
okqGX1vbltVPaSxE5OSXbVneuc9knieeWaFuP5erDHjhlUd7QV6wxpA3WvZ3
uc4lG3zTocsmV2wxou35D/lJiRpl0vax7NFnh9k537bv6hN+2OOapn1fLvn/
irx338hDCraaeyqL3OrJ/3f1PxdoLQQ=
        "]], 
       Line3DBox[{935, 1295, 1296, 3063, 936, 1321, 1394, 3237, 1322, 959, 
        1328, 1398, 3239, 1329, 972, 1163, 3084, 984, 1175, 3089, 997, 1187, 
        3093, 1010, 3177, 1199, 1023, 1211, 3100, 1036, 1551, 3268, 1552, 
        1553, 1554, 1555, 1550, 3267, 1549, 1061, 1245, 3126, 1075, 1257, 
        3132, 1088, 1271, 3137, 1103, 3215, 1285, 1118}], 
       Line3DBox[{937, 1297, 1313, 3227, 1299, 939, 1141, 3072, 960, 1152, 
        3079, 973, 1164, 3085, 985, 1176, 3090, 998, 1188, 3094, 1011, 1200, 
        3096, 1024, 1212, 3101, 1037, 1223, 3112, 1049, 1234, 3120, 1062, 
        1246, 3127, 1076, 1258, 3133, 1089, 1272, 3138, 1104, 1307, 3226, 
        1309, 1119}], 
       Line3DBox[{941, 1300, 3223, 1132, 942, 3142, 1143, 962, 3146, 1154, 
        975, 3151, 1166, 987, 3159, 1178, 1000, 3168, 1190, 1013, 3179, 1202, 
        1026, 1214, 3102, 1039, 3189, 1225, 1051, 3192, 1236, 1064, 3196, 
        1248, 1078, 3200, 1260, 1091, 3207, 1274, 1106, 3216, 1287, 1121}], 
       Line3DBox[{943, 1133, 3064, 944, 3143, 1144, 963, 3147, 1155, 976, 
        3152, 1167, 988, 3160, 1179, 1001, 3169, 1191, 1014, 3180, 1203, 1027,
         1215, 3103, 1040, 1226, 3113, 1052, 3193, 1237, 1065, 3197, 1249, 
        1079, 3201, 1261, 1092, 3208, 1275, 1107, 3217, 1288, 1122}], 
       Line3DBox[{945, 1134, 3065, 946, 1145, 3073, 964, 3148, 1156, 977, 
        3153, 1168, 989, 3161, 1180, 1002, 3170, 1192, 1015, 3181, 1204, 1028,
         1216, 3104, 1041, 1227, 3114, 1053, 1238, 3121, 1066, 3198, 1250, 
        1080, 3202, 1262, 1093, 3209, 1276, 1108, 3218, 1289, 1123}], 
       Line3DBox[{947, 1135, 3066, 948, 1146, 3074, 965, 1157, 3080, 978, 
        3154, 1169, 990, 3162, 1181, 1003, 3171, 1193, 1016, 3182, 1205, 1029,
         1217, 3105, 1042, 1228, 3115, 1054, 1239, 3122, 1067, 1251, 3128, 
        1081, 3203, 1263, 1094, 3210, 1277, 1109, 3219, 1290, 1124}], 
       Line3DBox[{949, 1136, 3067, 950, 1147, 3075, 966, 1158, 3081, 979, 
        1170, 3086, 991, 3163, 1182, 1004, 3172, 1194, 1017, 3183, 1206, 1030,
         1218, 3106, 1043, 1229, 3116, 1055, 1240, 3123, 1068, 1252, 3129, 
        1082, 1264, 3134, 1095, 3211, 1278, 1110, 3220, 1291, 1125}], 
       Line3DBox[{951, 1137, 3068, 952, 1148, 3076, 967, 1159, 3082, 980, 
        1171, 3087, 992, 1183, 3091, 1005, 3173, 1195, 1018, 3184, 1207, 1031,
         1219, 3107, 1044, 1230, 3117, 1056, 1241, 3124, 1069, 1253, 3130, 
        1083, 1265, 3135, 1096, 1279, 3139, 1111, 3221, 1292, 1126}], 
       Line3DBox[{953, 1315, 3228, 1316, 954, 1149, 3077, 968, 1160, 3083, 
        981, 1172, 3088, 993, 1184, 3092, 1006, 1196, 3095, 1019, 3185, 1208, 
        1032, 1220, 3108, 1045, 1231, 3118, 1057, 1242, 3125, 1070, 1254, 
        3131, 1084, 1266, 3136, 1097, 1280, 3140, 1112, 1388, 3236, 1389, 
        1390}], Line3DBox[{1113, 1281, 1426, 1386, 1439, 3235, 1438, 1098, 
        1267, 1382, 3234, 1304, 1085, 1255, 1419, 3241, 1375, 1071, 1243, 
        3194, 1058, 1232, 3190, 1046, 1221, 3187, 1033, 3097, 1209, 1020, 
        1197, 3174, 1007, 1185, 3164, 994, 1173, 3155, 982, 1161, 3149, 969, 
        1150, 3144, 955, 1138, 3224, 1436, 1301, 927, 3244, 1127, 1492, 1311, 
        1428, 1427, 1310}], 
       Line3DBox[{1114, 1498, 1497, 1425, 1306, 1440, 3247, 1099, 1268, 1422, 
        3243, 1305, 1086, 1256, 1420, 3242, 1376, 1072, 1244, 3232, 1416, 
        1369, 1059, 1233, 3231, 1414, 1363, 1047, 3109, 1222, 1411, 1357, 
        1034, 3098, 1210, 1408, 1351, 1021, 1198, 1405, 1345, 3175, 1008, 
        1186, 1548, 1547, 3165, 995, 1174, 3156, 983, 1162, 1502, 3259, 1501, 
        970, 1151, 3258, 1500, 1499, 956, 3069, 1139, 1437, 1302, 928, 3245, 
        1494, 1493, 1312, 1293, 1435, 1434}], 
       Line3DBox[{1120, 1286, 3225, 1308, 1105, 1273, 3206, 1090, 1259, 3199, 
        1077, 1247, 3195, 1063, 1235, 3191, 1050, 1224, 3188, 1038, 1213, 
        3186, 1025, 1201, 3178, 1012, 1189, 3167, 999, 1177, 3158, 986, 1165, 
        3150, 974, 1153, 3145, 961, 1142, 3141, 940, 1131, 3222, 1314, 1298, 
        938}], Line3DBox[{1557, 1779, 3354, 1558, 1793, 1586, 3274, 1808, 
        1601, 3279, 1823, 1616, 3286, 1838, 1631, 1989, 2014, 1853, 1646, 
        3452, 1992, 2016, 1868, 1661, 1995, 2018, 1883, 3454, 1676, 1997, 
        2020, 1898, 1691, 1999, 2022, 3459, 1913, 1706, 2001, 2024, 1928, 
        1721, 2003, 3328, 2026, 1943, 1736, 2005, 3336, 2028, 1958, 1751, 
        3461, 2007, 2030, 833, 876}], 
       Line3DBox[{1559, 1780, 3355, 1560, 1794, 3366, 1587, 1809, 1602, 3280, 
        1824, 1617, 3287, 1839, 1632, 3451, 1990, 1854, 1647, 3453, 1993, 
        1869, 1662, 1996, 1884, 3455, 1677, 1998, 1899, 3456, 1692, 2000, 
        3319, 1914, 1707, 2002, 3323, 1929, 1722, 2004, 3329, 1944, 1737, 
        3457, 2006, 1959, 1752, 3458, 2008, 1973, 1766}], 
       Line3DBox[{1561, 1781, 3356, 1562, 1795, 3367, 1588, 1810, 3377, 1603, 
        1825, 1618, 3288, 1840, 1633, 3296, 1855, 1648, 3305, 1870, 1663, 
        1885, 3402, 1678, 1900, 3413, 1693, 1915, 3423, 1708, 1930, 1723, 
        3330, 1945, 1738, 3337, 1960, 1753, 3345, 1974, 1767}], 
       Line3DBox[{1563, 1782, 3357, 1564, 1796, 3368, 1589, 1811, 3378, 1604, 
        1826, 3386, 1619, 3289, 1841, 1634, 3297, 1856, 1649, 3306, 1871, 
        1664, 1886, 3403, 1679, 1901, 3414, 1694, 1916, 3424, 1709, 1931, 
        3432, 1724, 1946, 1739, 3338, 1961, 1754, 3346, 1975, 1768}], 
       Line3DBox[{1565, 1783, 3358, 1566, 1797, 3369, 1590, 1812, 3379, 1605, 
        1827, 3387, 1620, 1842, 3393, 1635, 3298, 1857, 1650, 3307, 1872, 
        1665, 1887, 3404, 1680, 1902, 3415, 1695, 1917, 3425, 1710, 1932, 
        3433, 1725, 1947, 3439, 1740, 1962, 3444, 1755, 3347, 1976, 1769}], 
       Line3DBox[{1567, 1784, 3359, 1568, 1798, 3370, 1591, 1813, 3380, 1606, 
        1828, 3388, 1621, 1843, 3394, 1636, 1858, 3398, 1651, 3308, 1873, 
        1666, 1888, 3405, 1681, 1903, 3416, 1696, 1918, 3426, 1711, 1933, 
        3434, 1726, 1948, 3440, 1741, 1963, 3445, 1756, 1977, 3448, 1770}], 
       Line3DBox[{1569, 1785, 3360, 1571, 1799, 3371, 1592, 1814, 3381, 1607, 
        1829, 3389, 1622, 1844, 3395, 1637, 1859, 3399, 1652, 1874, 3401, 
        1667, 1889, 3406, 1682, 1904, 3417, 1697, 1919, 3427, 1712, 1934, 
        3435, 1727, 1949, 3441, 1742, 1964, 3446, 1757, 1978, 3449, 1771}], 
       Line3DBox[{1573, 1787, 3361, 1574, 3272, 1801, 1594, 3276, 1816, 1609, 
        3282, 1831, 1624, 3291, 1846, 1639, 3300, 1861, 1654, 3310, 1876, 
        1669, 1891, 3407, 1684, 3318, 1906, 1699, 3321, 1921, 1714, 3325, 
        1936, 1729, 3332, 1951, 1744, 3340, 1966, 1759, 3349, 1980, 1773}], 
       Line3DBox[{1575, 1788, 3362, 1576, 1802, 3372, 1595, 3277, 1817, 1610, 
        3283, 1832, 1625, 3292, 1847, 1640, 3301, 1862, 1655, 3311, 1877, 
        1670, 1892, 3408, 1685, 1907, 3418, 1700, 3322, 1922, 1715, 3326, 
        1937, 1730, 3333, 1952, 1745, 3341, 1967, 1760, 3350, 1981, 1774}], 
       Line3DBox[{1577, 1789, 3363, 1578, 1803, 3373, 1596, 1818, 3382, 1611, 
        3284, 1833, 1626, 3293, 1848, 1641, 3302, 1863, 1656, 3312, 1878, 
        1671, 1893, 3409, 1686, 1908, 3419, 1701, 1923, 3428, 1716, 3327, 
        1938, 1731, 3334, 1953, 1746, 3342, 1968, 1761, 3351, 1982, 1775}], 
       Line3DBox[{1579, 1790, 3364, 1580, 1804, 3374, 1597, 1819, 3383, 1612, 
        1834, 3390, 1627, 3294, 1849, 1642, 3303, 1864, 1657, 3313, 1879, 
        1672, 1894, 3410, 1687, 1909, 3420, 1702, 1924, 3429, 1717, 1939, 
        3436, 1732, 3335, 1954, 1747, 3343, 1969, 1762, 3352, 1983, 1776}], 
       Line3DBox[{1581, 1791, 3365, 1582, 1805, 3375, 1598, 1820, 3384, 1613, 
        1835, 3391, 1628, 1850, 3396, 1643, 3304, 1865, 1658, 3314, 1880, 
        1673, 1895, 3411, 1688, 1910, 3421, 1703, 1925, 3430, 1718, 1940, 
        3437, 1733, 1955, 3442, 1748, 3344, 1970, 1763, 3353, 1984, 1777}], 
       Line3DBox[{1583, 1986, 1987, 3450, 1584, 1806, 3376, 1599, 1821, 3385, 
        1614, 1836, 3392, 1629, 1851, 3397, 1644, 1866, 3400, 1659, 3315, 
        1881, 1674, 1896, 3412, 1689, 1911, 3422, 1704, 1926, 3431, 1719, 
        1941, 3438, 1734, 1956, 3443, 1749, 1971, 3447, 1764, 2009, 2010, 
        2011}], Line3DBox[CompressedData["
1:eJwVzi1PAlAYBeAXkQ8VZzG7+QMMdoPdwEYkEGwEtRqMTIPdQDfYDVQ2p5Ng
0yRzzDHGnEMQQRQ/HsKzc+49N9z13YPCfiIi8rTTEZeZiDd6vJLIRsxxvOyB
fPDm3H1OX+JF/6Vi/5M/3HhzJhftC3T1b6Z8UbOfyKwtQ0f/ZMKYC/uhTNtS
tPUPRgyp2sty3pbkWR/wTp9Te1G2aHDkvCOfZn9jz3lLNmd3uYgrWXK3Ie+d
8/qafqdv6yv6rb6ph36tr+oD6s6P/APhJDLF
        "]], 
       Line3DBox[{1772, 1979, 3348, 1758, 1965, 3339, 1743, 1950, 3331, 1728, 
        1935, 3324, 1713, 1920, 3320, 1698, 1905, 3317, 1683, 1890, 3316, 
        1668, 1875, 3309, 1653, 1860, 3299, 1638, 1845, 3290, 1623, 1830, 
        3281, 1608, 1815, 3275, 1593, 1800, 3271, 1572, 1786, 3269, 
        1570}]}, {}, {}, {}, {}, {}}},
    VertexNormals->CompressedData["
1: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
bv0MHCKV+NT7E3/huwkwcezdtuFNL3DfLUq5XluNBW83Dzl0koHqsEntKo2P
bOy3LT1O4yPWPl2X6HyEvWJG2CIrEV9kyufTc0mkWkgT9FwS992aneY0PDpo
1Ws6XlsV+YOOs09de0Ov59C8Yx69nu/Uk6Lp9ZS4VMDmRMPFtTrk6fjMJHc2
HX9qL5sWQaszJ9VyWYBWZ7GjEq70Or85JD4ZTsOP6XTHbKbhDL7J3nR8+kxb
SgSt/lTnS12WtPqn8wrdotffV6+GM5KGGy+XXnWg4Sa3so3puJ6f8Y6NtPdF
6/+j68ujqWC7tw2FQkmjKKQ0K6QobLMkJSVKQkIJiZJCpsg8K5IyZyYyD9s8
Zp7n+TiGc04qisJ3vG/f7/m+Z63fv9e611nn7Pvew3Utrl0/q7l2L2TNJwtr
92J7vkh+GxVvr3lhaEPF88h7ptdwPwdcSqXe111al/711Puyoml7s3ZfsXJB
MQEiI2A3Hdi7/2A3bFJogxluIkid/MTNcXuU2ucPrJcr6YS3c5xX2MIm4WoW
k4H1hgnY/759PUG6FfYv2gc6XyGAjtL1QYkyKt9k3m/6rb8ZFIo3WftMTECS
HUPGWpz5sjnIa/E8kqg6tBZPQf3bkm5dE7A59XlY+cdGfP7KzPDWLgJksAZs
3HFiArR/B+d88G/GvcLCxsxOBFCyc20qovJWGpHcoTNu7Sh6zu3Q6cpJaAmY
NDrTOAIX72jp2JR04NmLH1YkqHMvjckf/zqtAdCrEbjSO9gLr/hk+402T8HD
exUDznxx+O6s9H/2dDwc33t1bU+H9JW3pmu4U3zy9jU8Lr5Tcw1ffShc+fzK
GIxPHpgNhA5ojiLHvxCchJ7Gl8yyTEn409l7dm0fxzlH47S1fRwHJdUuyVBx
jwTRL2u4RKhY7hrOtPU9f7URAfaeW7eJ36ERXpxu9/V2n4B7ytsubYwbwWXF
ud3j31rh1ROL4+4/iNC/ntVFgW8UmUWea27f0QpNGSZhzuVEeEWzkmUkRYR3
ButjfNPKYHuCxxb2G+NQUmM6nPByDKte2MqMX64Fxf0nEq9S6zZDBW1UAGkM
zxnJdV43qIY8w/eKEppEuCFOq2HHMwX3srXPMZ5PgeAOLa4/+WOwrvQ8V4jt
OJpMqJMCOXJA8GjRoBt1XhGL1359omkctZ32V8wJZ8LrpW3PSSeJkBtcuI1W
cAqybz7/89YiHM83hZgdyh6DDGaHUM7wcTyR16O70y0Yp55ltNs9JcJdsTDm
353jWMqh9ufahihUQp6lH9JUHiq8j53Rjgh/fmvUtTAUYb43664JhXGQWvhF
PDk3hpQ7Gxq4HEvQWZlBgCmNCEwNx0c52cYx1nCy/8qOMkxcvMu2g8qnTuxN
fb1Wl4SdaxXW6pJiVpbr2jvfGbGzQXqeADHmW08UX6zFOmn1DCHdCWBROExH
cRxFOtYHh/K3NeArbQeh51R+OqeuhgbOo7i++adtwr1G/O0jv5XvFxH6lk/0
uk/H4vqfP/6zr2H/yHbltX0NEnIvYjyoOCN3atQavsnMUGYNZ15+aNJqNQ5K
0O/t8bMFl8tsM5YJBLhSlEqpaopFgznBzLW9DG10fLvW9jIMWaey1lDxzc+8
G9fwWu1ItjWc9wyXdVHXMNipHFcWXOzELfEnFdUSifDWZ3mzqdQgHPowN+Ri
VA+RxzP2VNycgbOiElYFTL1Am3vEam3PwglL4ZC1PQvmG1V9iql4hKXNUCgV
t3Mp+SVGxc/aiBEa+kZBfHN3fT1tJwxYrefuvjsJXLvVSP3UvLydGb0jdFMz
9PdLHr2TNQF/NrF8J7wtgcsT7l94fHswxmfIcm3fQdbKb/chKi675+LKGu5g
nJO8hi/dTD7CxDsFezi0umL9GkE7NOZxgOIo8DXH7/3IPw1lqm76t67WQ1YJ
jctD3hEo5FNVmZ6YgamtHpkFSxWw7fiOGx0eA3Bbyk9gnNrHG4dkfu13K4Px
c4xCA9v7QWw8ZjRefAz85sI3Rg634ck9NcKdvpPUPNhzQI6aj59327CJUPMx
YL127Fo+/qn6tDRpNQnllaqz1R41sLtR3YVleByK3yfU3B6ahMrHhkMya//H
Ydaw8OPNOLzqLq0cCR5Dm/6H+j8766CnP0nZ3ZAInSy8+uJfiKAzlHe1azwP
CkrlH/5ZGIOkl+EsPEtEiGcO0ZelfIa0cqVxcvsYcGZ/kE9MGUf9LeeDxwLz
oW2vw9kyQSIQnrRmXJWeAqnjXRoWgV5w1Io+wYLKo/QLBlzdYApWBTJB66El
HttdF0qIH4OliRfde6fGcYPp/THv8WfIHLtFqV2UCK6KDcOLFCIIJX/SqTyd
gTyMj5/dnaXGRXEnL20JEdzkC5q6l7LR+NYB1Nw2Dr4dYkE/1cbx3M8T5w5I
FaGRXAXOPSLCzWbJRxYdkxBjmtjxYKoc/ZLS0krKx0F37t2zJ+aToBtK2Gyn
UYVMSzYxHzZNgLdp5xa1H6P48fHd523a9Zh4pzwwsY8IFy9c63Oj5sWzOMXr
a3nxVUTl6lpe3F0+pXfkyjBCW/rq2K82DAt6pT8XNwWv9CY7TJuHse+OCnGH
dBs2PIKm3KdTwH6CTnstX2qrO8LW8uJ7r/TetbzI2xr3R+JzJP4+UpO35s9v
ZtkQs+bPr6J7/srZ/QNwjk7f9fDZHqw1ufq00HMKbi//PNyu3gsL74PoPlzs
RcGMBWVtpmnYfTD+3drnfDu0MWXtc25W2MSvfQ7LMuOn3alEENkeeX8vexEM
2j7oqNs4DgyXfC/ZSE5Bw6fRleKUtzDusY5mmHpfQYx0GzkZp0Brn5Xhds1U
FIwkfvLqGYMrM8OXMxmJQFo0yzQyLsMxifFjjR/GwYs1eN+1gwTgsnRUbzjd
gJ0sBc++T07AEVNXSiX7OOR0Fm8kBLeitcHzvUnck+DTd7Prh/ggzCbN5thk
dCNz8uWj+7SmgG/X9fs35YZB6OvS8TDfLmxsBtonU0Qw8eW8mvhxHGYk92z1
ZWmD47WDh1Wp/fTzhVF3qedJeKotjHNNT4tgDold080ORSe1tuWNYOj+7uGa
Cy2Y8uajkKDwFJS2Zlz/Q+W/68omhtf4r/OslvIa/2U3ejyffXwKytXtKVZG
8WBfzraxJH0MBki2fmcPTsFBZdu9QTbR+CPC6a5j8RjczyCOqGgRgc+K48Sd
B4gZdYkHBPTGQSjbxSEsmwDfVwcbmVzr8DTdTK6o5wQcekpT7b7UBaKXF6Vy
zvRhd+0Xk8Pa01Ad6FduzhWN/OKD9ms+9v2ytpQ1H3vmyq/PXY71gBR5qOtc
VS+uSG0RrxSahjwFc5JyEwla8uva7rOlw9hV2te9M51w7cfKSf0ZEjjkSTuG
JiTAIkO9Ndm6E0YMtOgMaifQWqGzV5+rAS87Ny15KBLAUqLcYK82gVp/dyg2
RtZhTNv5qz+oc878YSbXxItErE0+paP3shBzxT43vnOmxr1U/Hl34iSmdks4
XXcvx1q6xCDi4jhYX9v9nVtlEnMn2jtd2yoxycREVlFyAmI7bXrWfOkz2RkP
rvnS57+UGlvzpXd/21O7hj9kNrJdw3XEaMhruNkAx52I7W6wIByUZ1vZjL/2
yQjyjvyPnwZNzuaeSWupZtxwnoP++Xcy7Nba3sajlQx8gxtbpQSa0UFAanCA
+M/5LwOvUz8vNGBchNEXPS4K7Nsw55g4nQ3bTuovHqxvwD86NA+OLf9z3tMp
wfHX2zo8J85Xvl2FAhWzniF+Nflg1lkir21Why+uKfK84P0fXw4a5en+8MSv
Vagfy35W24YCbecZ9WaOFkDChOPIWG0VRsV3HNl16Z/zTdEhrTtUy9HF6YbV
mSgKBG2zY7gwmgfODQ4a706Wo3adncx363/O63taXfhZj/hy3D3Ur4QCv5+a
jiq8y4GW4mGejLdU/HVa14H3/5xP/uuf3/f/++fTbLUx23GclImUn6fUDkxS
IOuvD/ztf/nAB64M90hczQTyIoPgk4ZMTNIl3aSj8mjVd1tu8vfKiP/RUH3P
3ZCCIosarlzfKHDvodtuN7ZP4HnJ5AA5LAWvm9CxbBymwIspI8V9vULiSUef
/DxMjEFPs57hI4sUiN7+O5FnMgWYbhHyVstjMDq8Pkd25p/vuYlw8rK6/Vus
2ixRKb1M/b3K3PE97Algp6Vu8fryW0yvNXCz+v7Pec8u7Zbt27xwc9TG8bNr
PjMnHgcfPx0NBB4DjXPDnmiHWrnWi/+cr5Fo0BDxf4zrR2p9J6jnVxJvirdN
vgEDP1lpgvFjNKJXuJO4/P/Ef+/Vnuw6CUzmeVWz5hfB9Zt1KSnEFvSUZv+I
8UnjJV2dt1+o+KGzHTxjfMHAXa23NO7ZjH9+jB5MniSDykYW/fZnBdAdpy5w
idSEOqx3E4W/kIFD7FJ3nmEVfNoUZC6j0IASgr0HvsWQQdPaVXyXdB3ws6oc
U5moxU8/gSGJiiuVpKh/yaqD2F1BbGpXqlA7YMX0Uj0Z5qucxP1f1oLVm2tt
lQ1l+Iisf7CLhgJayMuprVENqY8fx7OuFiNBdXnouhgFQv760vv/y5f+qeS9
LyIHy2E6LVtdyjgTq6wUVYmeFDhuwVkwPVMCdYyXllXpU/DgCoHSkkiBDWPC
Levji4CJZ31S1bUYNHxvKaRRRgH9TspRscFcmOv2jR4tCsW4ojDSx04KzJqL
DVduyoSz1YzSizKeOJPqY+VBpECT4ps7inkfIdSkZb/yT0v0cH8RvPsnBXjj
LT5w3PECqSEab/cKKcRKU9XT1DjH0V32ZmQIhc8yqzI3DzcjDW303UVqHci+
+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
RM2avwD7H5a7CfjS+jSbqVHX7n6oi75lXiOei2KLOo449x9flc0KX9WeP3vU
Kk51wzUjkx0mbSnIgeIUTdrnqCZk/oRFowP2Xd9o0RiWgH6ezp9cr5LhRUDG
fo75Frh/MXgrW3QEdq25+9uMgQK1Ik1z6WmNoBzTE3zKKQinOjMZ1gZTwNag
o1ezvRp2Sl5yvpHlhm+t96YnHKLN9bcU2i6JFoLvyeNqX6+aovL1w/6Fn6jw
l/BSsb35Ly/VFOGl+m+vU/AKr9OxOht5AYt+oPyJWSzpiMB1WlkFsQ9o8w/h
IZpe4SE6lnyTX5DaCJs3hm6bfpuPY9PGOZkqFHAlvD+bCe+PJOH9MXa8XZ1w
YwAOyv7LOfgqDDerP9Z71DMBPicNLrxo6QVP5+gU05NBuHum+aMAwxT8Jfw7
9oR/x5nw73RGPpl33zUIW7SeVi2IhmCA+aHzb7Un4Jaqsci9w/1wu+udl1KZ
L7Lu7TBQC5mEms9Xv3QodEO4F8eJ1/teYpjpnf2M6VOgQfhlygi/jB3hlymf
39nywXoEOvBnbH5TLDofbIrt+joCR7N9S6RzBuGQvl6yVbsvtpcJaZC+j4PJ
9KmirOZ+kB8M7iNd80C9gbzf9yQnQfDzY7/Plj2grDs77rPRCcE1koXNcAq+
wD0SXVs7ZEbLHfG89wQpYi9vRT4lQwfhWxFd4Vth/5pWJYUj4CWpPp+5NRwd
/zII7LEbAZOciegoyVHw3GT96Hh5MOYWs3LuWT0CHiklXkJHh0C1gLl43QF3
dG89dnh7wDikkcTvf785AN1VqzIOMzuiHV1VVl3/BNTMzO7+btoLllTjl+6X
bZG9o5XqxDcFMTKmlvZ/O8CiDy7mJ5nimtrtz+hp89S+zEwNnb9NcGKroYeO
uD5aaQTbcN+hQB/hK5Fe4Supdh7bUTs4AkPvfIYOa3mjj6xSoiBtbl3gWkX2
tBmFc3VmX4Lo3JHe4DfdyTwSaH6sZm6tHYEo8oTo91ZH7LM9q2RrOgJnm6wt
joUMwUPbmBSLu08wyfSQaTitXxXOVB1dVTkA41X2B311zPERw4aXxiETEN6x
YW6NTB880DDdk7X7IZotmqbvpExCW05w69+5Trh2NW1VnL0eunWcp9u/lgxZ
NhpGx1hbAE/vsP2ZfQl1qZftt0tR4I5+3r6ls1WwY8i8TsEPkLzf+Ya+AhXu
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
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{484.7475299720355, 287.11224763885207`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-2.3618061557842003`, -2.1502214813592326`, 1.117326838307028},
  ViewVertical->{0.2441675818245062, 0.2222935943344878, 
   0.9439108802762193}]], "Output",
 CellChangeTimes->{
  3.8319761019840145`*^9, {3.831976156722731*^9, 3.8319761855450315`*^9}, {
   3.8322490420817237`*^9, 3.8322490594483957`*^9}, {3.832252209383453*^9, 
   3.832252230726017*^9}, {3.832252364080983*^9, 3.8322524101298923`*^9}},
 CellLabel->"Out[28]=",ExpressionUUID->"714cf750-ce8a-4c0d-8ed3-c804477eb41c"]
}, Open  ]]
},
WindowSize->{1141.2, 579.6},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (May 11, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"614722f5-74f4-4707-871b-a3787d936d6b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 763, 19, 67, "Input",ExpressionUUID->"4ab39b35-0854-48aa-af1b-c3b7ea6cf481"],
Cell[1324, 41, 202661, 5511, 3126, "Input",ExpressionUUID->"f189cf5c-03ed-4aee-b7d1-1a17420f6f10"],
Cell[CellGroupData[{
Cell[204010, 5556, 13731, 376, 501, "Input",ExpressionUUID->"bec186d2-1023-4496-8aa6-99708842a5fb"],
Cell[217744, 5934, 205743, 3277, 37002, "Output",ExpressionUUID->"a5c1f27a-0faa-4fde-a9f0-cd5fe6b298f1"]
}, Open  ]],
Cell[423502, 9214, 154, 3, 28, "Input",ExpressionUUID->"42044885-536b-4ba0-ae03-fd12cab7c037"],
Cell[423659, 9219, 474, 10, 28, "Input",ExpressionUUID->"c6ee0190-b620-4408-a093-7586b1358610"],
Cell[CellGroupData[{
Cell[424158, 9233, 1032, 24, 28, "Input",ExpressionUUID->"c1ec1ed8-8987-41b7-a89a-ddca722a07fd"],
Cell[425193, 9259, 225512, 3676, 304, "Output",ExpressionUUID->"714cf750-ce8a-4c0d-8ed3-c804477eb41c"]
}, Open  ]]
}
]
*)

